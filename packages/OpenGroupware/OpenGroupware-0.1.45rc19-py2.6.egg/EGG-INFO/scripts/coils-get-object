#!/usr/bin/python2.6
#
# Copyright (c) 2011 Adam Tauno Williams <awilliam@whitemice.org>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#
import getopt, sys, os, pprint
from coils.core  import *
from coils.core.omphalos import Render as Omphalos_Render



def usage():
    print """

    """
    return

def main(argv):

    # Process command line arguements
    if (len(argv) == 0):
        usage()
        sys.exit(2)
    try:
        opts, args = getopt.getopt(argv,
                                   "hia",
                                  ["help", "objectid=", "useragent="])
    except getopt.GetoptError, e:
        print e
        usage()
        sys.exit(2)

    object_id = 10000
    user_agent_string = None
    for opt, arg in opts:
        if opt in ("-h", "--help"):
            usage()
            sys.exit(0)
        elif (opt in ('-i', '--objectid')):
            object_id = int(arg)
        elif (opt in ('-u', '--useragent')):
            user_agent_string = arg


    # Initialize COILs
    initialize_COILS({'log_file': '{0}/coils.log'.format(os.getenv('HOME'))})

    ctx = AdministrativeContext( { 'connection': { 'user_agent': user_agent_string } } )
    entity = ctx.type_manager.get_entity(object_id)
    if (entity is None):
        print '{0} entity with objectId#{1} count not be retrieved.'.format(kind, object_id)
        sys.exit(1)
    result = Omphalos_Render.Result(entity, 65535, ctx)
    pprint.pprint(result)

    sys.exit(0)

if __name__ == "__main__":
    main(sys.argv[1:])

