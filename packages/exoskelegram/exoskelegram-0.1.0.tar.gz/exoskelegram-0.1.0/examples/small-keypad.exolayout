# NOT IMPLEMENTED YET.

# I (Niels) have a small external, wireless 4x5 keypad with 18 square keys and
# one double square key. It has this layout:

# ,----------,----------,------------,-----------,
# | Num_Lock | slash    | asterisk   | BackSpace |
# |----------|----------|------------|-----------|
# | KP_7     | KP_8     | KP_9       | minus     |
# |----------|----------|------------|-----------|
# | KP_4     | KP_5     | KP_6       | plus      |
# |----------|----------|------------|-----------|
# | KP_1     | KP_2     | KP_3       | KP_Enter  |
# |----------|----------|------------|           |
# | KP_0     | KP_0 * 2 | KP_Decimal |           |
# '----------'----------'------------'-----------'

# (Yes, the second key on the last row sends the same event twice.)

# I want to be able to type the entire alphabet with my right hand without much
# difficulty, so I've split up the rows, so that each row has nothing to do
# with the other rows. That way, I can use four fingers in 15 different
# combinations each on the first three rows, and 7 each on the last two rows. I
# use KP_Enter in only two combinations, so this gives me 16 * 3 + 7 * 2 + 1 +
# 1 = 64 usable key combinations, not counting shifted characters.

# The 15 most commonly used letters of the English alphabet are in the top
# row. The following rows contain the rest of the basic characters needed to
# write on a computer.

# Approximate letter distribution in the English language:
# 63973 s
# 63392 e
# 51498 i
# 51280 a
# 48058 r
# 46202 n
# 42658 t
# 39480 o
# 34360 l
# 27659 c
# 25715 d
# 23932 u
# 20806 g
# 20279 m
# 19376 p
# 17989 h
# 14277 b
# 12226 y
#  9372 f
#  8009 k
#  7688 v
#  7175 w
#  2995 z
#  2110 x
#  1905 j
#  1506 q


# The actual festsmell configuration:

alias lock Num_Lock
alias / slash
alias * asterisk
alias back BackSpace
alias 7 KP_7
alias 8 KP_8
alias 9 KP_9
alias - minus
alias 4 KP_4
alias 5 KP_5
alias 6 KP_6
alias + plus
alias 1 KP_1
alias 2 KP_2
alias 3 KP_3
alias enter KP_Enter
alias 0 KP_0
alias . KP_Decimal

# Bindings (could be more ergo-improved):

## First row
bind s lock
bind e /
bind i *
bind a back
bind r lock /
bind n / *
bind t * back
bind o lock *
bind l / back
bind c lock back
bind d lock / *
bind u / * back
bind g lock / back
bind m lock * back
bind p lock / * back

## Second row
bind h 7
bind b 8
bind y 9
bind f -
bind k 7 8
bind v 8 9
bind w 9 -
bind z 7 9
bind x 8 -
bind j 7 -
bind q 7 8 9
bind - 8 9 -
bind + 7 8 -
bind . 7 9 -
bind , 7 8 9 -

## Third row
bind : 4
bind ; 5
bind ! 6
bind ? +
bind = 4 5
bind / 5 6
bind \ 6 +
bind * 4 6
bind ' 5 +
bind " 4 +
bind ` 4 5 6
bind Â´ 5 6 +
bind % 4 5 +
bind $ 4 6 +
bind @ 4 5 6 +

## Fourth row
bind Return enter
bind BackSpace 1
bind Delete 1 lock
bind ( 2
bind ) 3
bind [ 2 lock
bind ] 1 2
bind { 2 3
bind } 1 3
bind & 2 3
bind # 1 2 3

## Last row
bind Shift_L 0
#bind Shift_R 0
bind Control_L 0 0
#bind Control_R 0 0
bind Alt_L .
#bind Alt_R .
#bind Meta_L .
##bind Meta_R .
bind Super_L 0 0 0
#bind Super_R 0 0 0

