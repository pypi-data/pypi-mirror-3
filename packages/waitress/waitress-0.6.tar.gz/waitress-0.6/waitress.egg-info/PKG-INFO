Metadata-Version: 1.0
Name: waitress
Version: 0.6
Summary: Waitress WSGI server
Home-page: https://github.com/Pylons/waitress
Author: Chris McDonough
Author-email: chrism@plope.com
License: ZPL 2.1
Description: Waitress is meant to be a production-quality pure-Python WSGI server with
        very acceptable performance.  It has no dependencies except ones which live
        in the Python standard library.  It runs on CPython on Unix and Windows under
        Python 2.6+ and Python 3.2.  It is also known to run on PyPy 1.6.0 on UNIX.
        It supports HTTP/1.0 and HTTP/1.1.
        
        For more information, see the "docs" directory of the Waitress package or
        http://docs.pylonsproject.org/projects/waitress/en/latest/ .
        
        
        0.6 (2012-01-07)
        ----------------
        
        - A logic error prevented the internal outbuf buffer of a channel from being
          flushed when the client could not accept the entire contents of the output
          buffer in a single succession of socket.send calls when the channel was in
          a "pending close" state.  The socket in such a case would be closed
          prematurely, sometimes resulting in partially delivered content.  This was
          discovered by a user using waitress behind an Nginx reverse proxy, which
          apparently is not always ready to receive data.  The symptom was that he
          received "half" of a large CSS file (110K) while serving content via
          waitress behind the proxy.
        
        0.5 (2012-01-03)
        ----------------
        
        Bug Fixes
        ~~~~~~~~~
        
        - Fix PATH_INFO encoding/decoding on Python 3 (as per PEP 3333, tunnel
          bytes-in-unicode-as-latin-1-after-unquoting).
        
        0.4 (2012-01-02)
        ----------------
        
        Features
        ~~~~~~~~
        
        - Added "design" document to docs.
        
        Bug Fixes
        ~~~~~~~~~
        
        - Set default ``connection_limit`` back to 100 for benefit of maximal
          platform compatibility.
        
        - Normalize setting of ``last_activity`` during send.
        
        - Minor resource cleanups during tests.
        
        - Channel timeout cleanup was broken.
        
        0.3 (2012-01-02)
        ----------------
        
        Features
        ~~~~~~~~
        
        - Dont hang a thread up trying to send data to slow clients.
        
        - Use self.logger to log socket errors instead of self.log_info (normalize).
        
        - Remove pointless handle_error method from channel.
        
        - Queue requests instead of tasks in a channel.
        
        Bug Fixes
        ~~~~~~~~~
        
        - Expect: 100-continue responses were broken.
        
        
        0.2 (2011-12-31)
        ----------------
        
        Bug Fixes
        ~~~~~~~~~
        
        - Set up logging by calling logging.basicConfig() when ``serve`` is called
          (show tracebacks and other warnings to console by default).
        
        - Disallow WSGI applications to set "hop-by-hop" headers (Connection,
          Transfer-Encoding, etc).
        
        - Don't treat 304 status responses specially in HTTP/1.1 mode.
        
        - Remove out of date ``interfaces.py`` file.
        
        - Normalize logging (all output is now sent to the ``waitress`` logger rather
          than in degenerate cases some output being sent directly to stderr).
        
        Features
        ~~~~~~~~
        
        - Support HTTP/1.1 ``Transfer-Encoding: chunked`` responses.
        
        - Slightly better docs about logging.
        
        0.1 (2011-12-30)
        ----------------
        
        - Initial release.
        
        
        
Keywords: waitress wsgi server http
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Zope Public License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Topic :: Internet :: WWW/HTTP
