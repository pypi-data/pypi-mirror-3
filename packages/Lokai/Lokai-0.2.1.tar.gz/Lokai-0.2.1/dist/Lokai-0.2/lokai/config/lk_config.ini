[server]
# To make a fast cgi server that listens on a unix socket, set this to
# a socket name
#socket = {{name.sock}}

# To make a fast cgi server that listens on a network port, set both
# of the following:
listen = localhost
port = 4002

# The name of the cookie that will be placed on the client system for
# managing http sessions. Each intstallation on a particular server
# must be have a different cookie name.
cookie_name = lokaisoft

[all]
# Email address to use as the from address when using email logging.
# This can be a simple username, or a fully qualified name. If it is a
# simple username, the domain name is added from the `smtp_from_host`
# configuration value.
#email_from=

# Email address to send CRITICAL email messages to when using email
# logging.
#email_dev=

#job_logging_target=

# The name of the mail server we try to connect to, and the relevant
# port.
#smtp_host=
#smtp_port=

# A username to use if the server supports AUTH, and the relevant
# password.
#smtp_user=
#smtp_password=

# A host_name part to be used to build a from address when sending
# stuff. See `email_dev` and `email_site`
#smtp_from_host=

# The apparent name of the place the email is being sent from.
#smtp_local_hostname=

# Set to anything to provide some debugging of smtp settings
#smtp_debug=1

[skin]
# The template to be used for the whole page. This exists in a
#directory called .../templates.
#page_template = main_page.html

# The module where the .../templates directory can be found.
#templates = lokai.lk_ui.ui_default

# The module where the .../static directory can be found.
#static = {{whatever the template module is defined as}}
#static = lokai.lk_ui.ui_default
static = lokai.lk_ui.ui_default

# Executable object that returns a context for inserting into the main
# page template.
#ident_builder = lokai.lk_ui.ui_default.make_ident.make_ident

# Executable object that returns a formatted menu for inserting into
# the main page template.
#menu_builder = lokai.lk_ui.ui_default.make_menu.make_menu

# Optional for defining a logo on the ident page. Use as {{logo_path}}
# and {{logo_alt}} in the main page template.
#logo_path =
#logo_alt = 

[login]
# The URL mount point for this application. A URL of the form
# `/{{application_path}}/xxx` is recognised as intended for this
# application and the publisher (see below) is then given `xxx` to
# process further.
#application_path = login

# Details for the login application. `application_publisher`
# identifies a factory returning a wsgi publisher. `menu_publisher`
# identifies the location of a function `menu_builder` that returns
# entries for the menu.
#application_publisher = lokai.lk_login.publisher.get_lk_login_publisher
#menu_publisher = lokai.lk_login.publisher

# Position of menu items relative to other applications
menu_sequence=99

login_db.url = postgresql:///lokai_soft
login_db.convert_unicode = True
login_db.echo = False

# Identifies the location of the migration code for this database
# connection. Specifically, this points to the place where
# `login/login_db/manage.py` can be found.
migrate-module  = lokai.lk_login.migration

[lk_worker]
application_publisher = lokai.lk_worker.ui.publisher.get_lk_worker_publisher
application_path = pages
menu_publisher = lokai.lk_worker.ui.publisher
menu_sequence = 20
migrate-module = lokai.lk_worker.migration
nodes_db.url = postgresql:///lokai_soft
nodes_db.convert_unicode = True

# Load in an extension. Items starting with `package.` identify a
# module where a file called `lk_register_extensions.py` can be
# found. The package name (after the dot) is ignored.
package.logging = lokai.lk_job_manager

# Config item specific to lk_worker - defines the directory where
# files attached to nodes are stored.
attachment_path = node_attachment_files
