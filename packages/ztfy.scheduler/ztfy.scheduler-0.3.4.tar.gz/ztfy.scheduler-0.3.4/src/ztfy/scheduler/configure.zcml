<configure
	xmlns="http://namespaces.zope.org/zope"
	xmlns:i18n="http://namespaces.zope.org/i18n"
	i18n_domain="ztfy.scheduler">

	<i18n:registerTranslations directory="locales" />

	<include package=".generations" />

	<include file="security.zcml" />

	<!-- Start scheduler on database opened event -->
	<subscriber
		handler=".database.handleOpenedDatabase" />

	<subscriber
		handler=".database.handleNewSiteManager" />

	<subscriber
		handler=".manager.handleOpenedDatabase" />

	<subscriber
		handler=".manager.handleRegisteredScheduler" />

	<subscriber
		handler=".manager.handleUnregisteredScheduler" />

	<subscriber
		handler=".manager.handleScheduledTask" />

	<subscriber
		handler=".manager.handleUnscheduledTask" />

	<subscriber
		handler=".task.handleRemovedTask" />

	<!-- Scheduler permissions -->
	<class class=".manager.Scheduler">
		<implements
			interface="zope.annotation.interfaces.IAttributeAnnotatable" />
		<allow
			interface="ztfy.security.interfaces.ILocalRoleManager" />
		<require
			interface="zope.container.interfaces.IReadContainer
					   .interfaces.ISchedulerInfo
					   .interfaces.ISchedulerInnerInfo
					   .interfaces.ISchedulerRoles"
			attributes="getSiteManager"
			permission="ztfy.ViewManagementScreens" />
		<require
			interface="zope.container.interfaces.IWriteContainer"
			set_schema=".interfaces.ISchedulerInfo
						.interfaces.ISchedulerRoles"
			attributes="setSiteManager"
			permission="ztfy.ManageScheduler" />
	</class>

	<utility
		name="ZTFY scheduler lockers"
		component=".vocabulary.SchedulerLockersVocabulary" />

	<utility
		name="ZTFY scheduling modes"
		component=".vocabulary.SchedulerTaskSchedulingModesVocabulary" />

	<utility
		name="Memcached clients"
		component=".vocabulary.MemcachedClientsVocabulary" />

	<!-- Scheduler lockers -->
	<utility
		name="File locker"
		component=".lock.SchedulerFileLocker"
		provides=".interfaces.ISchedulerLocker" />

	<adapter
		factory=".lock.SchedulerFileLockerFactory"
		trusted="true"
		locate="True" />

	<class class=".lock.SchedulerFileLockerInfo">
		<require
			interface=".interfaces.ISchedulerFileLockerInfo"
			permission="ztfy.ViewManagementScreens" />
		<require
			set_schema=".interfaces.ISchedulerFileLockerInfo"
			permission="ztfy.ManageScheduler" />
	</class>

	<utility
		name="Memcached locker"
		component=".lock.SchedulerMemcachedLocker"
		provides=".interfaces.ISchedulerLocker" />

	<adapter
		factory=".lock.SchedulerMemcachedLockerFactory"
		trusted="true"
		locate="True" />

	<class class=".lock.SchedulerMemcachedLockerInfo">
		<require
			interface=".interfaces.ISchedulerMemcachedLockerInfo"
			permission="ztfy.ViewManagementScreens" />
		<require
			set_schema=".interfaces.ISchedulerMemcachedLockerInfo"
			permission="ztfy.ManageScheduler" />
	</class>

	<!-- Task scheduling modes -->
	<utility
		name="Cron-style scheduling"
		component=".task.CronTaskScheduler"
		provides=".interfaces.ISchedulerTaskSchedulingMode" />

	<adapter
		factory=".task.SchedulerTaskCronInfoFactory"
		trusted="true"
		locate="True" />

	<class class=".task.SchedulerTaskCronInfo">
		<require
			interface=".interfaces.ISchedulerCronTaskInfo"
			permission="ztfy.DisplayTasks" />
		<require
			set_schema=".interfaces.ISchedulerCronTaskInfo"
			permission="ztfy.ManageTasks" />
	</class>

	<utility
		name="Date-style scheduling"
		component=".task.DateTaskScheduler"
		provides=".interfaces.ISchedulerTaskSchedulingMode" />

	<adapter
		factory=".task.SchedulerTaskDateInfoFactory"
		trusted="true"
		locate="True" />

	<class class=".task.SchedulerTaskDateInfo">
		<require
			interface=".interfaces.ISchedulerDateTaskInfo"
			permission="ztfy.DisplayTasks" />
		<require
			set_schema=".interfaces.ISchedulerDateTaskInfo"
			permission="ztfy.ManageTasks" />
	</class>

	<utility
		name="Loop-style scheduling"
		component=".task.LoopTaskScheduler"
		provides=".interfaces.ISchedulerTaskSchedulingMode" />

	<adapter
		factory=".task.SchedulerTaskLoopInfoFactory"
		trusted="true"
		locate="True" />

	<class class=".task.SchedulerTaskLoopInfo">
		<require
			interface=".interfaces.ISchedulerLoopTaskInfo"
			permission="ztfy.DisplayTasks" />
		<require
			set_schema=".interfaces.ISchedulerLoopTaskInfo"
			permission="ztfy.ManageTasks" />
	</class>

	<!-- Task permissions -->
	<class class=".task.TaskHistoryItem">
		<require
			interface=".interfaces.ISchedulerTaskHistoryInfo"
			permission="ztfy.DisplayTasks" />
		<require
			set_schema=".interfaces.ISchedulerTaskHistoryInfo"
			permission="ztfy.ManageTasks" />
	</class>

	<class class=".task.TaskHistoryContainer">
		<require
			interface="ztfy.utils.interfaces.IListInfo"
			permission="ztfy.DisplayTasks" />
		<require
			interface="ztfy.utils.interfaces.IListWriter"
			permission="ztfy.ManageTasks" />
	</class>

	<!-- ZODB packing task permissions -->
	<class class=".zodb.ZODBPackingTask">
		<implements
			interface="zope.annotation.interfaces.IAttributeAnnotatable" />
		<require
			interface=".interfaces.ISchedulerTaskInfo
					   .interfaces.IZODBPackingTaskInfo"
			permission="ztfy.DisplayTasks" />
		<require
			set_schema=".interfaces.ISchedulerTaskInfo
						.interfaces.IZODBPackingTaskInfo"
			interface=".interfaces.ISchedulerTaskWriter"
			permission="ztfy.ManageTasks" />
	</class>

	<!-- URL caller task permissions -->
	<class class=".url.URLCallerTask">
		<implements
			interface="zope.annotation.interfaces.IAttributeAnnotatable" />
		<require
			interface=".interfaces.ISchedulerTaskInfo
					   .interfaces.IURLCallerTaskInfo"
			permission="ztfy.DisplayTasks" />
		<require
			set_schema=".interfaces.ISchedulerTaskInfo
						.interfaces.IURLCallerTaskInfo"
			interface=".interfaces.ISchedulerTaskWriter"
			permission="ztfy.ManageTasks" />
	</class>

	<!-- browser sub-package -->
	<include package=".browser" />

</configure>