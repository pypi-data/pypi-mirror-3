define("test/conceptmanager",["define/conceptmanager"],function(a){var b=function(a,c){var d=null;for(d in c)if(typeof a[d]=="undefined")return!1;for(d in c)if(c[d]){var e=typeof c[d];e==="object"&&c[d].constructor===Array&&(e="array");switch(e){case"array":var f=typeof a[d];if(f!=="object"||a[d].constructor!==Array)return!1;if(a[d]===undefined||c[d].length!==a[d].length)return!1;for(var g=0;g<c[d].length;g++){var h=!1;for(var i=0;i<a[d].length;i++)b(c[d][g],a[d][i])&&(h=!0);if(!h)return!1}break;case"object":if(!b(c[d],a[d]))return!1;break;case"function":break;default:if(c[d]!=a[d])return!1}}else if(a[d])return!1;for(d in a)if(typeof c[d]=="undefined")return!1;return!0},c=$(['<div id="plugin-panel" class="container">','<div id="plugin-tabs" class="toolbar header tabs hidden"></div>','<div class="content">','<div id="plugin-dynamic-content"></div>','<div id="plugin-static-content"></div>',"</div>","</div>"].join("")),d=$("<div></div>"),e={concept:"/api/criteria"},f={11:{name:"500 Hz Response",js:null,id:11,css:null,views:[{elements:[{type:"chart",data:{name:"500 Hz Response",title:"Distribution of 500 Hz Audiogram Response",datatype:"number",yaxis:"# of Responses",choices:null,coords:[[32,5],[93,43]],xaxis:"Response (dB)",pk:124,optional:!1}},{fields:[{datatype:"string",pk:125,optional:!0,name:"Test Conditions",choices:[["M","M"],["MN","MN"],["MV","MV"],["N","N"],["V","V"],[null,"No Data"]]}],type:"form"}],type:"builtin",tabname:"Default View"}]},93:{name:"Patient has ABR",js:null,id:93,css:null,views:[{elements:[{type:"chart",data:{name:"Has at least one ABR",title:"Patients Having an ABR",datatype:"boolean",yaxis:"",choices:[[!0,"Yes"],[!1,"No"]],coords:[[!0,300],[!1,5e4]],xaxis:"",pk:170,optional:!1}}],type:"builtin",tabname:"Default View"}]},43:{name:"Audiometry Test Condition",js:null,id:43,css:null,views:[{elements:[{type:"chart",data:{name:"Audiometry Test Condition",title:"Audiometry Test Condition",datatype:"string",yaxis:"# of Tests",choices:[["Aided","Aided"],["Air","Air"],["Bone","Bone"],["Cochlear Implant","Cochlear Implant"],["Noise","Noise"],["Sound Field","Sound Field"],["Warble","Warble"]],coords:[["Aided",70],["Air",73032],["Bone",53232],["Cochlear Implant",13234],["Noise",23343],["Sound Field",234],["Warble",23432]],xaxis:"Condition",pk:119,optional:!1}}],type:"builtin",tabname:"Default View"}]},60:{name:"Has Sensorineural Loss?",js:null,id:60,css:null,views:[{elements:[{type:"chart",data:{name:"Has Sensorineural Loss?",title:"Has Sensorineural Loss?",datatype:"nullboolean",yaxis:null,choices:[[!0,"Yes"],[!1,"No"],[null,"No Data"]],coords:[[!1,5e3],[!0,6e3],[null,1e4]],xaxis:null,pk:116,optional:!1}}],type:"builtin",tabname:"Default View"}]},50:{name:"Ear Canal Volume (ECV)",js:null,id:50,css:null,views:[{elements:[{type:"chart",data:{name:"Ear Canal Volume (ECV)",title:"Distribution of Ear Canal Volume (ECV)",datatype:"number",yaxis:"# of Tests",choices:null,coords:[[2.7,1],[4.2,1]],xaxis:"Volume (mL)",pk:157,optional:!1}}],type:"builtin",tabname:"Default View"}]},1:{name:"Pure Tone Average (PTA)",js:null,id:1,css:null,views:[{elements:[{type:"chart",data:{pkchoice_default:142,name:"Pure Tone Average",title:"Distribution of Pure Tone Average",pkchoices:[[142,"either ear"],[151,"the better ear"],[152,"the worse ear"]],pkchoice_label:"in",yaxis:"# Audiogram Results",datatype:"number",coords:[[0,192],[1,32]],xaxis:"PTA (dB)"}},{fields:[{datatype:"boolean",pk:143,"default":!0,name:"Exclude PTA's with one or more 'no response' values"}],type:"form"}],type:"builtin",tabname:"Chart"}]}};$("#arena").append(c);var g=$("#plugin-panel"),h=$("#plugin-tabs"),i=$("#plugin-title"),j=$("#plugin-static-content"),k=$("#plugin-dynamic-content"),l=a.manager(g,i,h,k,j),m={target:d};module("ConceptManager"),test("Datasource Error Checking.",7,function(){l.show(f[11]),d.bind("InvalidInputEvent",function(a){ok(!0,"Empty datasource raises error")}),l.constructQueryHandler(m,{}),d.unbind(),d.bind("InvalidInputEvent",function(a){ok(!0,"Datasource with empty list raises error.")}),l.constructQueryHandler(m,{"32_32":[]}),d.unbind(),d.bind("InvalidInputEvent",function(a){ok(!0,"Datasource with undefined raises error.")}),l.constructQueryHandler(m,{"32_32":undefined}),d.unbind(),d.bind("InvalidInputEvent",function(a){ok(!0,"Datasource with empty string raises error.")}),l.constructQueryHandler(m,{"32_32":""}),d.unbind(),ok(l.constructQueryHandler(m,{"32_32":null}),"Datasource with null value does not raise error."),d.bind("InvalidInputEvent",function(a){ok(!0,"Datasource with only operators raises error")}),l.constructQueryHandler(m,{"32_32_operator":"exact"}),d.unbind(),ok(l.constructQueryHandler(m,{"32_32_operator":"isnull"}),"Datasource with operator isnull does not raise error")});var n={},o=null,p=null;test("Boolean Query Construction.",6,function(){l.show(f[93]),p={concept_id:93,datatype:"boolean",id:170,operator:"exact",value:!1},n={"93_170":[!1]},ok(b(l.buildQuery(n),p),"Query for a boolean search field with one selected with no operator specified."),p={concept_id:93,datatype:"boolean",id:170,operator:"exact",value:!0},n={"93_170":[!0],"93_170_operator":"in"},ok(b(l.buildQuery(n),p),"Query for a boolean search field with one selected with 'in' operator specified."),p={concept_id:93,datatype:"boolean",id:170,operator:"-exact",value:!0},n={"93_170":[!0],"93_170_operator":"-in"},ok(b(l.buildQuery(n),p),"Query for a boolean search field with one selected with negated operator specified."),p={type:"or",children:[{concept_id:93,datatype:"boolean",id:170,operator:"exact",value:!1},{concept_id:93,datatype:"boolean",id:170,operator:"exact",value:!0}],concept_id:93},n={"93_170":[!1,!0]},ok(b(l.buildQuery(n),p),"Query for a boolean search field with both selected with no operator specified."),n={"93_170":[!1,!0],"93_170_operator":"in"},ok(b(l.buildQuery(n),p),"Query for a boolean search field with both selected with 'in' operator specified."),p={type:"and",children:[{concept_id:93,datatype:"boolean",id:170,operator:"-exact",value:!1},{concept_id:93,datatype:"boolean",id:170,operator:"-exact",value:!0}],concept_id:93},n={"93_170":[!0,!1],"93_170_operator":"-in"},ok(b(l.buildQuery(n),p),"Query for a boolean search field with both selected with negated operator.")}),test("String Choice Query Construction",6,function(){l.show(f[43]),p={concept_id:43,id:119,operator:"in",value:["Air","Bone","Cochlear Implant","Noise"]},n={"43_119":["Air","Bone","Cochlear Implant","Noise"]},ok(b(l.buildQuery(n),p),"Query for a string choice field with multiple selected with no operator specified."),n={"43_119":["Air","Bone","Cochlear Implant","Noise"],"43_119_operator":"in"},ok(b(l.buildQuery(n),p),"Query for a string choice field with multiple selected with 'in' operator specified."),p={concept_id:43,id:119,operator:"-in",value:["Air","Bone","Cochlear Implant","Noise"]},n={"43_119":["Air","Bone","Cochlear Implant","Noise"],"43_119_operator":"-in"},ok(b(l.buildQuery(n),p),"Query for a string choice field with multiple selected with negated operator specified."),p={concept_id:43,id:119,operator:"in",value:["Air"]},n={"43_119":["Air"]},ok(b(l.buildQuery(n),p),"Query for a string choice field with one selected with no operator specified."),n={"43_119":["Air"],"43_119_operator":"in"},ok(b(l.buildQuery(n),p),"Query for a string choice field with one selected with 'in' operator specified."),p={concept_id:43,id:119,operator:"-in",value:["Air"]},n={"43_119":["Air"],"43_119_operator":"-in"},ok(b(l.buildQuery(n),p),"Query for a string choice field with one selected with negated operator specified.")}),test("Nullboolean Query Construction",7,function(){l.show(f[60]),p={concept_id:60,datatype:"nullboolean",id:116,operator:"exact",value:null},n={"60_116":[null]},ok(b(l.buildQuery(n),p),"Query for nullboolean field with one selected (null value) with no operator specified."),n={"60_116":[null],"60_116_operator":"in"},ok(b(l.buildQuery(n),p),"Query for nullboolean field with one selected (null value) with 'in' operator specified."),p={concept_id:60,datatype:"nullboolean",id:116,operator:"-exact",value:null},n={"60_116":[null],"60_116_operator":"-in"},ok(b(l.buildQuery(n),p),"Query for nullboolean field with one selected (null value) with negated specified."),p={children:[{concept_id:60,datatype:"nullboolean",id:116,operator:"exact",value:null},{concept_id:60,datatype:"nullboolean",id:116,operator:"exact",value:!1}],concept_id:60,type:"or"},n={"60_116":[null,!1]},ok(b(l.buildQuery(n),p),"Query for nullboolean field with two selected (null,true ) with no operator specified."),n={"60_116":[null,!1],"60_116_operator":"in"},ok(b(l.buildQuery(n),p),"Query for nullboolean field with two selected (null,true ) with 'in' operator specified."),p={children:[{concept_id:60,datatype:"nullboolean",id:116,operator:"-exact",value:null},{concept_id:60,datatype:"nullboolean",id:116,operator:"-exact",value:!1}],concept_id:60,type:"and"},n={"60_116":[null,!1],"60_116_operator":"-in"},ok(b(l.buildQuery(n),p),"Query for nullboolean field with two selected (null,true ) with negated operator specified."),p={children:[{concept_id:60,datatype:"nullboolean",id:116,operator:"-exact",value:null},{concept_id:60,datatype:"nullboolean",id:116,operator:"-exact",value:!1},{concept_id:60,datatype:"nullboolean",id:116,operator:"-exact",value:!0}],concept_id:60,type:"and"},n={"60_116":[null,!1,!0],"60_116_operator":"-in"},ok(b(l.buildQuery(n),p),"Query for nullboolean field with all selected with negated operator specified.")}),test("Number Query Construction",5,function(){l.show(f[50]),p={concept_id:50,datatype:"number",id:157,operator:"range",value:[3.6,5.9]},n={"50_157_input0":"3.6","50_157_input1":"5.9","50_157_operator":"range"},ok(b(l.buildQuery(n),p),"Query for number field with range operator specified."),p={concept_id:50,datatype:"number",id:157,operator:"-range",value:[3.6,5.9]},n={"50_157_input0":"3.6","50_157_input1":"5.9","50_157_operator":"-range"},ok(b(l.buildQuery(n),p),"Query for number field with negated range operator specified."),p={concept_id:50,datatype:"number",id:157,operator:"lte",value:4},n={"50_157_input0":"4","50_157_operator":"lte"},ok(b(l.buildQuery(n),p),"Query for number field with lte operator specified."),p={concept_id:50,datatype:"number",id:157,operator:"isnull",value:!0},n={"50_157_operator":"isnull"},ok(b(l.buildQuery(n),p),"Query for number field with isnull operator specified."),p={concept_id:50,datatype:"number",id:157,operator:"-isnull",value:!0},n={"50_157_operator":"-isnull"},ok(b(l.buildQuery(n),p),"Query for number field with negated isnull operator specified.")}),test("Query with conditions applied to variable fields.",1,function(){l.show(f[1]),p={children:[{concept_id:1,id:143,operator:"exact",value:!0},{concept_id:1,datatype:"number",id:151,id_choices:["142","151","152"],operator:"range",value:[24.7,50.6]}],concept_id:1,type:"and"},n={"1_142OR151OR152_input0":"24.7","1_142OR151OR152_input1":"50.6","1_142OR151OR152_operator":"range","1_143":!0,"142OR151OR152":"151"},ok(b(l.buildQuery(n),p),"Query for number with conditional field set to 152 and range operator selected. Additional boolean field set to true.")}),QUnit.start()})