Metadata-Version: 1.0
Name: django-easytests
Version: 0.8.beta.4
Summary: Slightly modified test utils from django-cms as a own module
Home-page: http://github.com/fivethreeo/django-easytests/
Author: Oyvind Saltvik
Author-email: oyvind.saltvik@gmail.com
License: UNKNOWN
Description: ================
        django-easytests
        ================
        
        Utils for test setup based on test utils from django-cms
        
        Installation
        ------------
        
        For the current stable version:
        
        ::
        
        pip install django-easytests
        
        For the development version:
        
        ::
        
        pip install -e git+git://github.com/fivethreeo/django-easytests.git#egg=django-easytests
        
        Example usage in runtests.py:
        
        ::
        
        #!/usr/bin/env python
        from djeasytests.testsetup import TestSetup, default_settings
        
        default_settings.update(dict(
        ROOT_URLCONF='shop_categories.test_utils.project.urls',
        DATABASES = {
        'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': 'shopexampledb.sqlite',
        }
        },
        INSTALLED_APPS = [
        'django.contrib.auth',
        'django.contrib.contenttypes',
        'django.contrib.sessions',
        'django.contrib.admin',
        'django.contrib.sites',
        'django.contrib.staticfiles',
        'treeadmin',
        'shop_categories',
        'shop_categories.test_utils.project'
        ],
        SHOP_PRODUCT_MODEL = 'shop_categories.test_utils.project.models.product.Product',
        SHOP_CATEGORIES_CATEGORY_MODEL = 'shop_categories.test_utils.project.models.category.Category'
        ))
        
        testsetup = TestSetup(appname='shop_categories', default_settings=default_settings)
        
        if __name__ == '__main__':
        testsetup.run('tests') # Can be 'tests', 'shell' or 'testserver'
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Framework :: Django
