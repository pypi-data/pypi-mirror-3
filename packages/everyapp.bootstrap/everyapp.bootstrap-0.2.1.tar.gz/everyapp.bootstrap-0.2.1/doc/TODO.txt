.. This file is part of everyapp.bootstrap.
.. Copyright (C) 2010-2012 Krys Lawrence
..
.. everyapp.bootstrap is free software: you can redistribute it and/or modify
.. it under the terms of the GNU General Public License as published by the
.. Free Software Foundation, either version 3 of the License, or (at your
.. option) any later version.
..
.. everyapp.bootstrap is distributed in the hope that it will be useful, but
.. WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
.. or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
.. more details.
..
.. You should have received a copy of the GNU General Public License along with
.. this program.  If not, see <http://www.gnu.org/licenses/>.

.. index:: to do list, development; to do list
.. _todo:
.. _to_do_list:

To Do List
==========

Below are some of the tasks that still need to be completed.  This is in
addition to any bugs listed in |BUGS.txt| and/or in the `issue tracker
<http://bitbucket.org/everyapp/bootstrap/issues>`_.

* Change customize.py so that it emits a warning if no config file is found,
  rather than saying it has found one.  The presence of a config file is the
  normal/expected case.
* Add advanced options to output the generated files to stdout instead of
  generating files.
* Add a no-config option that suppresses the generation of the config file in
  all cases.
* Make customize.py pass on the output verbosity to pip and easy_install when
  appropriate.
* Create a mailing list? librelist.org?
* Add a link to a zipped archive of the HTML docs.
* Add build scripts.  (fabric?)
* Add RPM spec file, DEB config and other extra packaging support.
* See about supporting the singlehtml build in Sphinx (remove unwanted
  artifacts).
* See about generating an HTML Help project and file on Windows.
* Write an extension that auto-generates autodoc module synopses from module
  docstrings.
* Write an extension that lets autodoc include classes, functions and data
  separately so that they can each have their own section headers instead of
  just "Members".
* Add terms to the glossary.
* Write tests.
* Add Python 3 support, maybe by using the virtualenv3 or virtualenv5 forks.
* Find and document the way to install LaTeX on Windows in order to generate
  the PDF documentation on Windows.
