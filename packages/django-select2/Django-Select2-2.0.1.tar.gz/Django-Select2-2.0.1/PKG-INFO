Metadata-Version: 1.1
Name: Django-Select2
Version: 2.0.1
Summary: Select2 option fields for Django
Home-page: https://github.com/applegrew/django-select2
Author: Nirupam Biswas
Author-email: admin@applegrew.com
License: LICENSE.txt
Description: Django-Select2
        ==============
        
        This is a [Django](https://www.djangoproject.com/) integration of [Select2](http://ivaynberg.github.com/select2/).
        
        The app includes Select2 driven Django Widgets and Form Fields.
        
        Installation
        ============
        
        1. Install `django_select2`
        
                pip install django_select2
        
        2. Add `django_select2` to your `INSTALLED_APPS` in your project settings.
        
        3. When deploying on production server, run :-
        
                python manage.py collectstatic
        
        More details
        ============
        
        More details can be found on my blog at - [http://blog.applegrew.com/2012/08/django-select2/](http://blog.applegrew.com/2012/08/django-select2/).
        
        External Dependencies
        =====================
        
        * Django - This is obvious.
        * jQuery - This is not included in the package since it is expected that in most scenarios this would already be available.
        
        Example Application
        ===================
        Please checkout `testapp` application. This application is used to manually test the functionalities of this component. This also serves as a good example.
        
        You need only django 1.4 or above to run that.
        
        Changelog Summary
        =================
        
        ### v2.0.1
        
        * Auto id registration fixes.
        
        ### v2.0
        
        * Mostly major bug fixes in code and design. The changes were many, raising the possibility of backward incompatibility. However, the backward incompatibility would be subtle.
        
        * Auto fields (sub-classes of AutoViewFieldMixin) now accepts `auto_id` parameter. This can be used to provide custom id for the field. The default is 'module.field_class_name'. Ideally only the first instance of an auto field is registered. This parameter can be used to force registration of additional instances by passing a unique value.
        
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Framework :: Django
