# -*- coding: utf-8 -*-
###############################################################################
# Copyright (C) Bull S.A.S (2010, 2011)
# Contributor: Pierre Vign√©ras <pierre.vigneras@bull.net>

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
###############################################################################
# This file defines default for several options used by the
# sequencer.  An option is defined in a section.


[depmake]
# Specify here the guesser module name
# Default returns exotic@alien
guesser.module.name = sequencer.guesser
# Specify here how the parameter that should be passed to method
# get_guesser() in that module
# In the case of bullx guesser, this should be the clusterdb name
# If set to None, the default clusterdb is used.
guesser.factory.params = None

# Where filters should be found.
# The given path is added to the current PATH, it does not replace it!
filter_path = /usr/lib/sequencer/filter

# Where depsfinder should be found.
# The given path is added to the current PATH, it does not replace it!
depsfinder_path = /usr/lib/sequencer/depsfinder

# By default, a cache is used to remember components that was filtered
# in or out. This is quite useful to prevent duplicated forks. On our
# use cases, we noticed that using cache prevented 33% forks.
# However, if your filter command has such a side effect, that it
# should really be called for each component in order to determine if
# that component should be filtered in or not, you might deactivate
# caching by specifying 'no' below. Default is 'yes'.
# docache = yes

[seqmake]
# Where actions should be found.
# The given path is added to the current PATH, it does not replace it!
action_path = /usr/lib/sequencer/action/


# The algorithm used for the transformation of dependency graph into
# the action sequence.
# algo = optimal

[seqexec]
# A short progress report is displayed every n seconds (roughly). If
# n=0.0, no progress is displayed at all
# progress = 0.0

# The report type to display after the sequence has been executed
# report = none

# Wether the instructions sequence should be really executed by default
# doexec = yes

# The maximal number of actions that can be executed in parallel
# Increasing this number by a significant amount (say 400) might
# reduce drastically the overall execution time but may require an
# appropriate tuning of the system (such as the maximal number of
# connections to the clusterdb, maximal number of processes, and so
# on). Note also that the load average of the system may reach very
# high values. Your mileage may vary according to the actual actions
# that are executed by the sequencer.
# fanout = 64


