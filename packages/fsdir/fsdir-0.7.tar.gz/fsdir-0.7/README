fsdir:2012-03-26:v0.7:Test with Python2.6 and Python2.7

This is a simple, but handy module, this module do a recursive walk returning file and folder information.

The version 0.7
   - Add crc32 hash
   - Bug hunting
   - Better error handling
   - Disable the id to string for the username too expesinve.
   - Symlinks, FIFO, Socket are ignored.

PS:This module calculate the size in disk not the size of the file.

Example:
Summary off.
>>>import fsdir
>>>fsdir.go(".",False)
[{'permGroup': 'rwx', 'permOwner': 'rwx', 'permOthers': 'rwx', 'Owner': 'rgomes', 'Path': '.', 'Type': 'D', 'Size': 0},#Dir dont return a CRC hash
{'permGroup': 'rwx', 'permOwner': 'rwx', 'permOthers': 'rwx', 'Owner': 'rgomes', 'Path': './fsdir.so', 'CRC32': 1086464254, 'Type': 'F', 'Size': 28}]

Summary On.
>>>import fsdir
>>>fsdir.go(".",True) #or fsdir.go(".") summary mode is On by default,
[{'Dirs': 1, 'Files': 2, 'Size': 28}]

Note: Permission always return 3 char string. 
"rwx" If the premession is active or  - if is not: 
Example a file just with read permission will be "r--"

where: 
list[x]["permGroup"]=Permission to the Group
list[x]["permOwner"]=Permission to the Owner  
list[x]["permOthers"]=Permission to the Others
list[x]["CRC32"]=CRC32 hash
list[x]["Owner"]=numeric id
list[x]["Path"]=Full Path to the file/dir
list[x]["Type"]=F|D (F=File, D=Directory)
list[x]["Size"]=Size in Kilobytes

