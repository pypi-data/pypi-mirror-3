WWScraper
=========

Introduction
------------
WWScraper is a module designed to scrape the mobile WeightWatchers website.

The following functionality is supported:
   Getting current PointsTracker data for any date
   Searching the WW Database for foods
   Quick Adding foods to the current day's tracker
   Adding foods from the WW Database to the current day's tracker.

Note: Food adds from the database only support their default unit of measure.

This module is in no way affiliated with WeightWatchers International, and is 
not guaranteed to continue to work in the event of changes to their mobile site.
It requires you have a valid, paid eTools account in order to access this data.

History
-------
I designed this module as I was not happy with the WW website requiring me to 
load up a bulky flash app just to search for foods, and the mobile interface 
is quite clumsy even in a full blown browser.  Being a nerd who spend a lot 
of time at the command line, I wanted a way to push points up to the site 
without having to fire up a browser.

Requirements
------------
mechanize
BeautifulSoup

Basic Usage
-----------

    from WWScraper import WWScrape
    
    # Instantiate the object, and connect
    ww_site = WWScrape()
    ww_site.connect('wwmobileuser','wwmobilepass')
   
    # Quick add a food
    ww_site.quick_add_food('Tacos',4,'Morning') 

    # Do a food search
    potato_data = ww_site.food_search('potato')
    
    # Display our results (provided in tuples)
    for result in potato_data:
        print "Name: %s, ID: %s, Serving: %s, Points: %s" % result
 
    # Add a food (assuming food_id has the id returned from a search)
    ww_site.add_food(food_id,'Anytime')

    # Add a food, but we ate twice the default amount listed
    ww_site.add_food(food_id,'Anytime',multiplier=2)

