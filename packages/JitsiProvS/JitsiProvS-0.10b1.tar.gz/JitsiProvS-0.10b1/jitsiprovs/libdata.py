def default_properties ():
    props = []
    props.append( ('net.java.sip.communicator.impl.gui.main.configforms.SHOW_ACCOUNT_CONFIG', 'false') )
    props.append( ('net.java.sip.communicator.impl.gui.main.configforms.SHOW_OPTIONS_WINDOW', 'false') )
    props.append( ('net.java.sip.communicator.impl.gui.main.configforms.SHOW_OPTIONS_WINDOW', 'false') )
    props.append( ('net.java.sip.communicator.plugin.generalconfig.DISABLED', 'true') )
    props.append( ('net.java.sip.communicator.plugin.notificationconfiguration.DISABLED', 'true') )
    props.append( ('net.java.sip.communicator.plugin.advancedconfig.DISABLED', 'true') )
    props.append( ('net.java.sip.communicator.plugin.chatconfig.DISABLED', 'true') )
    props.append( ('net.java.sip.communicator.impl.gui.accounts', '${null}') )
    props.append( ('net.java.sip.communicator.impl.protocol', '${null}') )
    props.append( ('net.java.sip.communicator.impl.protocol.jabber.accxmpp', 'accxmpp') )
    props.append( ('net.java.sip.communicator.impl.protocol.jabber.accxmpp.ACCOUNT_UID', 'Jabber\:${username}@${domain}@${domain}') )
    props.append( ('net.java.sip.communicator.impl.protocol.jabber.accxmpp.ALLOW_NON_SECURE', 'false') )
    props.append( ('net.java.sip.communicator.impl.protocol.jabber.accxmpp.AUTO_DISCOVER_JINGLE_NODES', 'false') )
    props.append( ('net.java.sip.communicator.impl.protocol.jabber.accxmpp.AUTO_DISCOVER_STUN', 'false') )
    props.append( ('net.java.sip.communicator.impl.protocol.jabber.accxmpp.AUTO_GENERATE_RESOURCE', 'true') )
    props.append( ('net.java.sip.communicator.impl.protocol.jabber.accxmpp.BYPASS_GTALK_CAPABILITIES', 'false') )
    props.append( ('net.java.sip.communicator.impl.protocol.jabber.accxmpp.DTMF_METHOD', 'AUTO_DTMF') )
    props.append( ('net.java.sip.communicator.impl.protocol.jabber.accxmpp.PASSWORD', '${password}') )
    props.append( ('net.java.sip.communicator.impl.protocol.jabber.accxmpp.GMAIL_NOTIFICATIONS_ENABLED', 'false') )
    props.append( ('net.java.sip.communicator.impl.protocol.jabber.accxmpp.GOOGLE_CONTACTS_ENABLED', 'false') )
    props.append( ('net.java.sip.communicator.impl.protocol.jabber.accxmpp.GTALK_ICE_ENABLED', 'false') )
    props.append( ('net.java.sip.communicator.impl.protocol.jabber.accxmpp.ICE_ENABLED', 'false') )
    props.append( ('net.java.sip.communicator.impl.protocol.jabber.accxmpp.IS_PREFERRED_PROTOCOL', 'false') )
    props.append( ('net.java.sip.communicator.impl.protocol.jabber.accxmpp.JINGLE_NODES_ENABLED', 'false') )
    props.append( ('net.java.sip.communicator.impl.protocol.jabber.accxmpp.OVERRIDE_PHONE_SUFFIX', '') )
    props.append( ('net.java.sip.communicator.impl.protocol.jabber.accxmpp.PROTOCOL_NAME', 'Jabber') )
    props.append( ('net.java.sip.communicator.impl.protocol.jabber.accxmpp.RESOURCE', 'jitsi') )
    props.append( ('net.java.sip.communicator.impl.protocol.jabber.accxmpp.RESOURCE_PRIORITY', '30') )
    props.append( ('net.java.sip.communicator.impl.protocol.jabber.accxmpp.SERVER_ADDRESS', '${domain}') )
    props.append( ('net.java.sip.communicator.impl.protocol.jabber.accxmpp.SERVER_PORT', '5222') )
    props.append( ('net.java.sip.communicator.impl.protocol.jabber.accxmpp.TELEPHONY_BYPASS_GTALK_CAPS', '') )
    props.append( ('net.java.sip.communicator.impl.protocol.jabber.accxmpp.UPNP_ENABLED', 'false') )
    props.append( ('net.java.sip.communicator.impl.protocol.jabber.accxmpp.USER_ID', '${username}@${domain}') )
    props.append( ('net.java.sip.communicator.impl.protocol.jabber.accxmpp.USE_DEFAULT_STUN_SERVER', 'false') )
    props.append( ('net.java.sip.communicator.impl.protocol.jabber.accxmpp.CALLING_DISABLED', 'true') )
    props.append( ('net.java.sip.communicator.impl.protocol.sip.accsip', 'accsip') )
    props.append( ('net.java.sip.communicator.impl.protocol.sip.accsip.ACCOUNT_UID', 'SIP\:${username}@${domain}') )
    props.append( ('net.java.sip.communicator.impl.protocol.sip.accsip.DEFAULT_ENCRYPTION', 'true') )
    props.append( ('net.java.sip.communicator.impl.protocol.sip.accsip.DEFAULT_SIPZRTP_ATTRIBUTE', 'true') )
    props.append( ('net.java.sip.communicator.impl.protocol.sip.accsip.DTMF_METHOD', 'AUTO_DTMF') )
    props.append( ('net.java.sip.communicator.impl.protocol.sip.accsip.PASSWORD', '${password}') )
    props.append( ('net.java.sip.communicator.impl.protocol.sip.accsip.FORCE_P2P_MODE', 'false' ) )
    props.append( ('net.java.sip.communicator.impl.protocol.sip.accsip.IS_PRESENCE_ENABLED', 'false') )
    props.append( ('net.java.sip.communicator.impl.protocol.sip.accsip.KEEP_ALIVE_INTERVAL', '25') )
    props.append( ('net.java.sip.communicator.impl.protocol.sip.accsip.KEEP_ALIVE_METHOD', 'OPTIONS') )
    props.append( ('net.java.sip.communicator.impl.protocol.sip.accsip.POLLING_PERIOD', '30') )
    props.append( ('net.java.sip.communicator.impl.protocol.sip.accsip.PREFERRED_TRANSPORT', 'TLS') )
    props.append( ('net.java.sip.communicator.impl.protocol.sip.accsip.PROTOCOL_NAME', 'SIP') )
    props.append( ('net.java.sip.communicator.impl.protocol.sip.accsip.PROXY_ADDRESS', '${domain}') )
    props.append( ('net.java.sip.communicator.impl.protocol.sip.accsip.PROXY_AUTO_CONFIG', 'false') )
    props.append( ('net.java.sip.communicator.impl.protocol.sip.accsip.PROXY_PORT', '5061') )
    props.append( ('net.java.sip.communicator.impl.protocol.sip.accsip.SAVP_OPTION', '0') )
    props.append( ('net.java.sip.communicator.impl.protocol.sip.accsip.SDES_ENABLED', 'false') )
    props.append( ('net.java.sip.communicator.impl.protocol.sip.accsip.SERVER_ADDRESS', '${domain}') )
    props.append( ('net.java.sip.communicator.impl.protocol.sip.accsip.SERVER_PORT', '5061') )
    props.append( ('net.java.sip.communicator.impl.protocol.sip.accsip.SUBSCRIPTION_EXPIRATION', '3600') )
    props.append( ('net.java.sip.communicator.impl.protocol.sip.accsip.USER_ID', '${username}@${domain}') )
    props.append( ('net.java.sip.communicator.impl.protocol.sip.accsip.VOICEMAIL_ENABLED', 'false') )
    props.append( ('net.java.sip.communicator.impl.protocol.sip.accsip.XCAP_ENABLE', 'false') )
    props.append( ('net.java.sip.communicator.impl.protocol.sip.accsip.XIVO_ENABLE', 'false') )
    return props
