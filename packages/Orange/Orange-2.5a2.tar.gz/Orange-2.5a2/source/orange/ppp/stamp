(dp0
S'TComputeDomainContingency_ImputeWithClassifier'
p1
(i__main__
ClassDefinition
p2
(dp3
S'extended'
p4
I1
sS'imported'
p5
I0
sS'name'
p6
g1
sS'parent'
p7
S'TComputeDomainContingency'
p8
sS'abstract'
p9
I00
sS'components'
p10
(lp11
sS'properties'
p12
(lp13
(S'TLearner'
p14
S'learnerForDiscrete'
p15
S'learner_for_discrete'
p16
S'constructs a classifier for imputation of discrete values'
p17
I0
I0
I00
Ntp18
a(S'TLearner'
p19
S'learnerForContinuous'
p20
S'learner_for_continuous'
p21
S'constructs a classifier for imputation of continuous values'
p22
I0
I0
I00
Ntp23
a(S'bool'
p24
S'classIsOuter'
p25
S'class_is_outer'
p26
S'tells whether the class is the outer variable in contingencies'
p27
I0
I0
I01
Ntp28
asS'constants'
p29
(dp30
sbsS'TRuleDataStoppingCriteria_NoPositives'
p31
(i__main__
ClassDefinition
p32
(dp33
g4
I1
sg5
I0
sg6
g31
sg7
S'TRuleDataStoppingCriteria'
p34
sg9
I00
sg10
(lp35
sg12
(lp36
sg29
(dp37
sbsS'TLearner_Python'
p38
(i__main__
ClassDefinition
p39
(dp40
g4
I1
sg5
I0
sg6
g38
sg7
S'TLearner'
p41
sg9
I00
sg10
(lp42
sg12
(lp43
(S'int'
p44
S'needs'
p45
g45
S'the kind of data that learner needs'
p46
I01
I0
I01
Ntp47
asg29
(dp48
sbsS'TConditionalProbabilityEstimator_FromDistribution'
p49
(i__main__
ClassDefinition
p50
(dp51
g4
I1
sg5
I0
sg6
g49
sg7
S'TConditionalProbabilityEstimator'
p52
sg9
I00
sg10
(lp53
sg12
(lp54
(S'TContingency'
p55
S'probabilities'
p56
g56
S'Contingency that stores conditional probabilities'
p57
I0
I0
I00
Ntp58
a(S'bool'
p59
S'supportsDiscrete'
p60
S'supports_discrete'
p61
S'can estimate probabilities of discrete attributes'
p62
I01
I0
I01
Ntp63
a(S'bool'
p64
S'supportsContinuous'
p65
S'supports_continuous'
p66
S'can estimate probabilities of continuous attributes'
p67
I01
I0
I01
Ntp68
asg29
(dp69
sbsS'TFeatureInducer'
p70
(i__main__
ClassDefinition
p71
(dp72
g4
I1
sg5
I0
sg6
g70
sg7
S'TOrange'
p73
sg9
I01
sg10
(lp74
sg12
(lp75
sg29
(dp76
sbsS'TIMByRowsConstructor'
p77
(i__main__
ClassDefinition
p78
(dp79
g4
I1
sg5
I0
sg6
g77
sg7
S'TOrange'
p80
sg9
I01
sg10
(lp81
sg12
(lp82
sg29
(dp83
sbsS'TExamplesDistanceConstructor_Lp'
p84
(i__main__
ClassDefinition
p85
(dp86
g4
I1
sg5
I0
sg6
g84
sg7
S'TExamplesDistanceConstructor_Normalized'
p87
sg9
I00
sg10
(lp88
sg12
(lp89
(S'float'
p90
S'p'
p91
g91
g91
I0
I0
I01
Ntp92
a(S'bool'
p93
S'normalize'
p94
g94
S'tells whether to normalize distances between attributes'
p95
I0
I0
I01
Ntp96
a(S'bool'
p97
S'ignoreUnknowns'
p98
S'ignore_unknowns'
p99
S'if true (default: false) unknown values are ignored in computation'
p100
I0
I0
I01
Ntp101
a(S'bool'
p102
S'ignoreClass'
p103
S'ignore_class'
p104
S'if true (default), class value is ignored when computing distances'
p105
I0
I0
I01
Ntp106
asg29
(dp107
sbsS'TFilteredGenerator'
p108
(i__main__
ClassDefinition
p109
(dp110
g4
I1
sg5
I0
sg6
g108
sg7
S'TAdapterGenerator'
p111
sg9
I00
sg10
(lp112
sg12
(lp113
(S'TFilter'
p114
S'filter'
p115
g115
S'decides which examples are skipped'
p116
I0
I0
I00
Ntp117
a(S'TDomain'
p118
S'domain'
p119
g119
S'domain'
p120
I0
I0
I00
Ntp121
a(S'int'
p122
S'version'
p123
g123
S'unique version identifier'
p124
I01
I0
I01
Ntp125
asg29
(dp126
sbsS'TExamplesDistance_Maximal'
p127
(i__main__
ClassDefinition
p128
(dp129
g4
I1
sg5
I0
sg6
g127
sg7
S'TExamplesDistance_Normalized'
p130
sg9
I00
sg10
(lp131
sg12
(lp132
(S'TAttributedFloatList'
p133
S'normalizers'
p134
g134
S'normalizing factors for attributes'
p135
I0
I0
I00
Ntp136
a(S'TAttributedFloatList'
p137
S'bases'
p138
g138
S'lowest values for attributes'
p139
I0
I0
I00
Ntp140
a(S'TAttributedFloatList'
p141
S'averages'
p142
g142
S'average values for continuous attribute values'
p143
I0
I0
I00
Ntp144
a(S'TAttributedFloatList'
p145
S'variances'
p146
g146
S'variations for continuous attribute values'
p147
I0
I0
I00
Ntp148
a(S'int'
p149
S'domainVersion'
p150
S'domain_version'
p151
S'version of domain on which the ranges were computed'
p152
I0
I0
I01
Ntp153
a(S'bool'
p154
S'normalize'
p155
g155
S'tells whether to normalize distances between attributes'
p156
I0
I0
I01
Ntp157
a(S'bool'
p158
S'ignoreUnknowns'
p159
S'ignore_unknowns'
p160
S'if true (default: false) unknown values are ignored in computation'
p161
I0
I0
I01
Ntp162
asg29
(dp163
sbsS'TSubsetsGenerator_withRestrictions_iterator'
p164
(i__main__
ClassDefinition
p165
(dp166
g4
I1
sg5
I0
sg6
g164
sg7
S'TSubsetsGenerator_iterator'
p167
sg9
I00
sg10
(lp168
sg12
(lp169
(S'TSubsetsGenerator_iterator'
p170
S'subGenerator_iterator'
p171
S'sub_generator_iterator'
p172
S'subset generator'
p173
I0
I0
I00
Ntp174
a(S'TVarList'
p175
S'required'
p176
g176
S'set of required attributes'
p177
I0
I0
I00
Ntp178
a(S'TVarList'
p179
S'forbidden'
p180
g180
S'set of forbidden attributes'
p181
I0
I0
I00
Ntp182
a(S'TVarListList'
p183
S'forbiddenSubSubsets'
p184
S'forbidden_sub_subsets'
p185
S'set of forbidden subsets (attributes that must not occur together)'
p186
I0
I0
I00
Ntp187
a(S'TVarList'
p188
S'varList'
p189
S'var_list'
p190
S'a set of attributes from which subsets are generated'
p191
I0
I0
I00
Ntp192
asg29
(dp193
sbsS'TPreprocessor_discretize'
p194
(i__main__
ClassDefinition
p195
(dp196
g4
I1
sg5
I0
sg6
g194
sg7
S'TPreprocessor'
p197
sg9
I00
sg10
(lp198
sg12
(lp199
(S'TVarList'
p200
S'attributes'
p201
g201
S'attributes to be discretized (all, if not defined or empty)'
p202
I0
I0
I00
Ntp203
a(S'bool'
p204
S'discretizeClass'
p205
S'discretize_class'
p206
S'also discretize the class attribute (default: false)'
p207
I0
I0
I01
Ntp208
a(S'TDiscretization'
p209
S'method'
p210
g210
S'discretization method'
p211
I0
I0
I00
Ntp212
asg29
(dp213
sbsS'TProgressCallback_Python'
p214
(i__main__
ClassDefinition
p215
(dp216
g4
I1
sg5
I0
sg6
g214
sg7
S'TProgressCallback'
p217
sg9
I00
sg10
(lp218
sg12
(lp219
sg29
(dp220
sbsS'TAssociationRulesSparseInducer'
p221
(i__main__
ClassDefinition
p222
(dp223
g4
I1
sg5
I0
sg6
g221
sg7
S'TOrange'
p224
sg9
I00
sg10
(lp225
sg12
(lp226
(S'int'
p227
S'maxItemSets'
p228
S'max_item_sets'
p229
S'maximal number of itemsets (increase if you want)'
p230
I0
I0
I01
Ntp231
a(S'float'
p232
S'confidence'
p233
g233
S'required confidence'
p234
I0
I0
I01
Ntp235
a(S'float'
p236
S'support'
p237
g237
S'required support'
p238
I0
I0
I01
Ntp239
a(S'bool'
p240
S'storeExamples'
p241
S'store_examples'
p242
S'stores examples corresponding to rules'
p243
I0
I0
I01
Ntp244
asg29
(dp245
sbsS'TFilter_sameExample'
p246
(i__main__
ClassDefinition
p247
(dp248
g4
I1
sg5
I0
sg6
g246
sg7
S'TFilter'
p249
sg9
I00
sg10
(lp250
sg12
(lp251
(S'TExample'
p252
S'example'
p253
g253
S'example with which examples are compared'
p254
I0
I0
I00
Ntp255
a(S'bool'
p256
S'negate'
p257
g257
S'if true, filter output should be negated.'
p258
I0
I0
I01
Ntp259
a(S'TDomain'
p260
S'domain'
p261
g261
S'domain to which the examples are converted (if needed)'
p262
I0
I0
I00
Ntp263
asg29
(dp264
sbsS'TRuleClassifierConstructor'
p265
(i__main__
ClassDefinition
p266
(dp267
g4
I1
sg5
I0
sg6
g265
sg7
S'TOrange'
p268
sg9
I01
sg10
(lp269
sg12
(lp270
sg29
(dp271
sbsS'TMakeRandomIndicesMultiple'
p272
(i__main__
ClassDefinition
p273
(dp274
g4
I1
sg5
I0
sg6
g272
sg7
S'TMakeRandomIndices'
p275
sg9
I00
sg10
(lp276
sg12
(lp277
(S'int'
p278
S'stratified'
p279
g279
S' requests stratified distributions'
p280
I0
I0
I01
S'MakeRandomIndices_Stratification'
p281
tp282
a(S'int'
p283
S'randseed'
p284
g284
S'a seed for random generator'
p285
I0
I0
I01
Ntp286
a(S'TRandomGenerator'
p287
S'randomGenerator'
p288
S'random_generator'
p289
S'a random generator'
p290
I0
I0
I00
Ntp291
asg29
(dp292
sbsS'TLearnerFD'
p293
(i__main__
ClassDefinition
p294
(dp295
g4
I1
sg5
I0
sg6
g293
sg7
S'TLearner'
p296
sg9
I00
sg10
(lp297
sg12
(lp298
(S'TDomain'
p299
S'domain'
p300
g300
S'domain'
p301
I0
I0
I00
Ntp302
ag47
asg29
(dp303
sbsS'TMapIntValue'
p304
(i__main__
ClassDefinition
p305
(dp306
g4
I1
sg5
I0
sg6
g304
sg7
S'TTransformValue'
p307
sg9
I00
sg10
(lp308
sg12
(lp309
(S'TIntList'
p310
S'mapping'
p311
g311
S'a lookup table'
p312
I0
I0
I00
Ntp313
a(S'TTransformValue'
p314
S'subTransform'
p315
S'sub_transform'
p316
S'transformation executed prior to this'
p317
I0
I0
I00
Ntp318
asg29
(dp319
sbsS'TEVDistGetter_Standard'
p320
(i__main__
ClassDefinition
p321
(dp322
g4
I1
sg5
I0
sg6
g320
sg7
S'TEVDistGetter'
p323
sg9
I00
sg10
(lp324
sg12
(lp325
(S'TEVDistList'
p326
S'dists'
p327
g327
S'EVC distribution (sorted by rule length, 0 = for rules without conditions)'
p328
I0
I0
I00
Ntp329
asg29
(dp330
sbsS'TFeatureByIM'
p331
(i__main__
ClassDefinition
p332
(dp333
g4
I1
sg5
I0
sg6
g331
sg7
S'TFeatureInducer'
p334
sg9
I00
sg10
(lp335
sg12
(lp336
(S'TIMConstructor'
p337
S'IMconstructor'
p338
g338
S'incompatibility matrix constructor'
p339
I0
I0
I00
Ntp340
a(S'TClustersFromIM'
p341
S'clustersFromIM'
p342
S'clusters_from_IM'
p343
S'clustering algorithm'
p344
I0
I0
I00
Ntp345
a(S'int'
p346
S'completion'
p347
g347
S' decides how to determine the class for points not covered by any cluster'
p348
I0
I0
I01
S'FeatureByIM_Completion'
p349
tp350
asg29
(dp351
S'Completion'
p352
(lp353
(S'NoCompletion'
p354
S'completion_no'
p355
tp356
a(S'CompletionByDefault'
p357
S'completion_default'
p358
tp359
a(S'CompletionByBayes'
p360
S'completion_bayes'
p361
tp362
assbsS'TRuleBeamRefiner'
p363
(i__main__
ClassDefinition
p364
(dp365
g4
I1
sg5
I0
sg6
g363
sg7
S'TOrange'
p366
sg9
I01
sg10
(lp367
sg12
(lp368
sg29
(dp369
sbsS'TSubsetsGenerator_iterator'
p370
(i__main__
ClassDefinition
p371
(dp372
g4
I1
sg5
I0
sg6
g370
sg7
S'TOrange'
p373
sg9
I01
sg10
(lp374
sg12
(lp375
g192
asg29
(dp376
sbsS'TEquiDistDiscretizer'
p377
(i__main__
ClassDefinition
p378
(dp379
g4
I1
sg5
I0
sg6
g377
sg7
S'TDiscretizer'
p380
sg9
I00
sg10
(lp381
sg12
(lp382
(S'int'
p383
S'numberOfIntervals'
p384
S'number_of_intervals'
p385
S'number of intervals'
p386
I0
I0
I01
Ntp387
a(S'float'
p388
S'firstCut'
p389
S'first_cut'
p390
S'the first cut-off point'
p391
I0
I0
I01
Ntp392
a(S'float'
p393
S'step'
p394
g394
S'step (width of interval)'
p395
I0
I0
I01
Ntp396
ag318
asg29
(dp397
sbsS'TFindNearest_BruteForce'
p398
(i__main__
ClassDefinition
p399
(dp400
g4
I1
sg5
I0
sg6
g398
sg7
S'TFindNearest'
p401
sg9
I00
sg10
(lp402
sg12
(lp403
(S'TExamplesDistance'
p404
S'distance'
p405
g405
S'metrics'
p406
I0
I0
I00
Ntp407
a(S'TExampleGenerator'
p408
S'examples'
p409
g409
S'a list of stored examples'
p410
I0
I0
I00
Ntp411
a(S'int'
p412
S'weightID'
p413
S'weight_ID'
p414
S'weight to use when counting examples'
p415
I0
I0
I01
Ntp416
a(S'int'
p417
S'distanceID'
p418
S'distance_ID'
p419
S'id of meta attribute where the distance should be stored (0 = no storing)'
p420
I0
I0
I01
Ntp421
a(S'bool'
p422
S'includeSame'
p423
S'include_same'
p424
S'tells whether to include examples that are same as the reference example'
p425
I0
I0
I01
Ntp426
asg29
(dp427
sbsS'TRuleBeamInitializer'
p428
(i__main__
ClassDefinition
p429
(dp430
g4
I1
sg5
I0
sg6
g428
sg7
S'TOrange'
p431
sg9
I01
sg10
(lp432
sg12
(lp433
sg29
(dp434
sbsS'TMeasureAttribute_relevance'
p435
(i__main__
ClassDefinition
p436
(dp437
g4
I1
sg5
I0
sg6
g435
sg7
S'TMeasureAttributeFromProbabilities'
p438
sg9
I00
sg10
(lp439
sg12
(lp440
(S'TProbabilityEstimatorConstructor'
p441
S'estimatorConstructor'
p442
S'estimator_constructor'
p443
S'probability estimator (none by default)'
p444
I0
I0
I00
Ntp445
a(S'TConditionalProbabilityEstimatorConstructor'
p446
S'conditionalEstimatorConstructor'
p447
S'conditional_estimator_constructor'
p448
S'conditional probability estimator (none by default)'
p449
I0
I0
I00
Ntp450
a(S'int'
p451
S'unknownsTreatment'
p452
S'unknowns_treatment'
p453
S' treatment of unknown values'
p454
I0
I0
I01
S'MeasureAttribute_UnknownsTreatment'
p455
tp456
a(S'int'
p457
S'needs'
p458
g458
S' describes what kind of data is needed for computation'
p459
I0
I0
I01
S'MeasureAttribute_Needs'
p460
tp461
a(S'bool'
p462
S'handlesDiscrete'
p463
S'handles_discrete'
p464
S'tells whether the measure can handle discrete attributes'
p465
I0
I0
I01
Ntp466
a(S'bool'
p467
S'handlesContinuous'
p468
S'handles_continuous'
p469
S'tells whether the measure can handle continuous attributes'
p470
I0
I0
I01
Ntp471
a(S'bool'
p472
S'computesThresholds'
p473
S'computes_thresholds'
p474
S'tells whether the measure can compute threshold functions/maxima for continuous attributes'
p475
I0
I0
I01
Ntp476
asg29
(dp477
sbsS'TBayesLearner'
p478
(i__main__
ClassDefinition
p479
(dp480
g4
I1
sg5
I0
sg6
g478
sg7
S'TLearner'
p481
sg9
I00
sg10
(lp482
sg12
(lp483
(S'TProbabilityEstimatorConstructor'
p484
S'estimatorConstructor'
p485
S'estimator_constructor'
p486
S'constructs a probability estimator for P(C)'
p487
I0
I0
I00
Ntp488
a(S'TConditionalProbabilityEstimatorConstructor'
p489
S'conditionalEstimatorConstructor'
p490
S'conditional_estimator_constructor'
p491
S'constructs a probability estimator for P(C|A) '
p492
I0
I0
I00
Ntp493
a(S'TConditionalProbabilityEstimatorConstructor'
p494
S'conditionalEstimatorConstructorContinuous'
p495
S'conditional_estimator_constructor_continuous'
p496
S'constructs a probability estimator for P(C|A) for continuous attributes'
p497
I0
I0
I00
Ntp498
a(S'bool'
p499
S'normalizePredictions'
p500
S'normalize_predictions'
p501
S'instructs learner to construct a classifier that normalizes probabilities'
p502
I0
I0
I01
Ntp503
a(S'bool'
p504
S'adjustThreshold'
p505
S'adjust_threshold'
p506
S'adjust probability thresholds (for binary classes only)'
p507
I0
I0
I01
Ntp508
ag47
asg29
(dp509
sbsS'TConditionalProbabilityEstimator'
p510
(i__main__
ClassDefinition
p511
(dp512
g4
I1
sg5
I0
sg6
g510
sg7
S'TOrange'
p513
sg9
I01
sg10
(lp514
sg12
(lp515
g63
ag68
asg29
(dp516
sbsS'TColumnAssessor_Laplace'
p517
(i__main__
ClassDefinition
p518
(dp519
g4
I1
sg5
I0
sg6
g517
sg7
S'TColumnAssessor'
p520
sg9
I00
sg10
(lp521
sg12
(lp522
sg29
(dp523
sbsS'TFilter_compatibleExample'
p524
(i__main__
ClassDefinition
p525
(dp526
g4
I1
sg5
I0
sg6
g524
sg7
S'TFilter'
p527
sg9
I00
sg10
(lp528
sg12
(lp529
(S'TExample'
p530
S'example'
p531
g531
S'example with which examples are compared'
p532
I0
I0
I00
Ntp533
ag259
ag263
asg29
(dp534
sbsS'TRemoveRedundant'
p535
(i__main__
ClassDefinition
p536
(dp537
g4
I1
sg5
I0
sg6
g535
sg7
S'TOrange'
p538
sg9
I01
sg10
(lp539
sg12
(lp540
(S'bool'
p541
S'keepValues'
p542
S'keep_values'
p543
S'keep an attribute if number values is only smaller, not one'
p544
I0
I0
I01
Ntp545
asg29
(dp546
sbsS'TExamplesDistanceConstructor_Hamming'
p547
(i__main__
ClassDefinition
p548
(dp549
g4
I1
sg5
I0
sg6
g547
sg7
S'TExamplesDistanceConstructor'
p550
sg9
I00
sg10
(lp551
sg12
(lp552
(S'bool'
p553
S'ignoreClass'
p554
S'ignore_class'
p555
S'if true (default), class value is ignored when computing distances'
p556
I0
I0
I01
Ntp557
a(S'bool'
p558
S'ignoreUnknowns'
p559
S'ignore_unknowns'
p560
S'if true (default: false) unknown values are ignored in computation'
p561
I0
I0
I01
Ntp562
ag106
asg29
(dp563
sbsS'TRuleClassifierConstructor_firstRule'
p564
(i__main__
ClassDefinition
p565
(dp566
g4
I1
sg5
I0
sg6
g564
sg7
S'TRuleClassifierConstructor'
p567
sg9
I00
sg10
(lp568
sg12
(lp569
sg29
(dp570
sbsS'TStopDistributionClustering_noProfit'
p571
(i__main__
ClassDefinition
p572
(dp573
g4
I1
sg5
I0
sg6
g571
sg7
S'TStopDistributionClustering'
p574
sg9
I00
sg10
(lp575
sg12
(lp576
(S'float'
p577
S'minProfitProportion'
p578
S'min_profit_proportion'
p579
S'minimal allowable profit proportion'
p580
I0
I0
I01
Ntp581
asg29
(dp582
sbsS'TColoredIG'
p583
(i__main__
ClassDefinition
p584
(dp585
g4
I1
sg5
I0
sg6
g583
sg7
S'TGeneralExampleClustering'
p586
sg9
I00
sg10
(lp587
sg12
(lp588
(S'TIG'
p589
S'ig'
p590
g590
S'incompatibility graph'
p591
I0
I0
I00
Ntp592
a(S'TIntList'
p593
S'colors'
p594
g594
S'colors (one element corresponding to each ig node)'
p595
I0
I0
I00
Ntp596
asg29
(dp597
sbsS'TMeasureAttribute'
p598
(i__main__
ClassDefinition
p599
(dp600
g4
I1
sg5
I0
sg6
g598
sg7
S'TOrange'
p601
sg9
I00
sg10
(lp602
sg12
(lp603
g461
ag466
ag471
ag476
asg29
(dp604
S'Needs'
p605
(lp606
(S'Contingency_Class'
p607
I0
tp608
a(S'DomainContingency'
p609
I1
tp610
a(S'Generator'
p611
I2
tp612
asS'UnknownsTreatment'
p613
(lp614
(S'IgnoreUnknowns'
p615
I0
tp616
a(S'ReduceByUnknowns'
p617
I1
tp618
a(S'UnknownsToCommon'
p619
I2
tp620
a(S'UnknownsAsValue'
p621
I3
tp622
assbsS'TRuleEvaluator'
p623
(i__main__
ClassDefinition
p624
(dp625
g4
I1
sg5
I0
sg6
g623
sg7
S'TOrange'
p626
sg9
I01
sg10
(lp627
sg12
(lp628
sg29
(dp629
sbsS'TStringVariable'
p630
(i__main__
ClassDefinition
p631
(dp632
g4
I1
sg5
I0
sg6
g630
sg7
S'TVariable'
p633
sg9
I00
sg10
(lp634
sg12
(lp635
(S'int'
p636
S'varType'
p637
S'var_type'
p638
S' variable type'
p639
I0
I0
I01
S'Variable_Type'
p640
tp641
a(S'bool'
p642
S'ordered'
p643
g643
S'variable values are ordered'
p644
I0
I0
I01
Ntp645
a(S'bool'
p646
S'distributed'
p647
g647
S'variable values are distributions'
p648
I0
I0
I01
Ntp649
a(S'int'
p650
S'defaultMetaId'
p651
S'default_meta_id'
p652
S'default (proposed, suggested...) meta id for this variable'
p653
I0
I0
I01
Ntp654
a(S'TRandomGenerator'
p655
S'randomGenerator'
p656
S'random_generator'
p657
S'random generator for random values (initialized when first needed)'
p658
I0
I0
I00
Ntp659
a(S'TVariable'
p660
S'sourceVariable'
p661
S'source_variable'
p662
S'The attribute that this attribute is computed from (when applicable)'
p663
I0
I0
I00
Ntp664
a(S'TClassifier'
p665
S'getValueFrom'
p666
S'get_value_from'
p667
S'Function to compute the value from values of other variables'
p668
I0
I0
I00
Ntp669
asg29
(dp670
sbsS'TGraphAsTree'
p671
(i__main__
ClassDefinition
p672
(dp673
g4
I1
sg5
I0
sg6
g671
sg7
S'TGraph'
p674
sg9
I00
sg10
(lp675
sg12
(lp676
(S'int'
p677
S'nVertices'
p678
S'n_vertices'
p679
S'the number of vertices'
p680
I01
I0
I01
Ntp681
a(S'int'
p682
S'nEdgeTypes'
p683
S'n_edge_types'
p684
S'the number of edge types'
p685
I01
I0
I01
Ntp686
a(S'bool'
p687
S'directed'
p688
g688
S'directed'
p689
I01
I0
I01
Ntp690
asg29
(dp691
sbsS'TTreeExampleSplitter_IgnoreUnknowns'
p692
(i__main__
ClassDefinition
p693
(dp694
g4
I1
sg5
I0
sg6
g692
sg7
S'TTreeExampleSplitter'
p695
sg9
I00
sg10
(lp696
sg12
(lp697
sg29
(dp698
sbsS'TProbabilityEstimator_FromDistribution'
p699
(i__main__
ClassDefinition
p700
(dp701
g4
I1
sg5
I0
sg6
g699
sg7
S'TProbabilityEstimator'
p702
sg9
I00
sg10
(lp703
sg12
(lp704
(S'TDistribution'
p705
S'probabilities'
p706
g706
S'probabilities'
p707
I0
I0
I00
Ntp708
a(S'bool'
p709
S'supportsDiscrete'
p710
S'supports_discrete'
p711
S'can estimate probabilities of discrete attributes'
p712
I01
I0
I01
Ntp713
a(S'bool'
p714
S'supportsContinuous'
p715
S'supports_continuous'
p716
S'can estimate probabilities of continuous attributes'
p717
I01
I0
I01
Ntp718
asg29
(dp719
sbsS'TExamplesDistance'
p720
(i__main__
ClassDefinition
p721
(dp722
g4
I1
sg5
I0
sg6
g720
sg7
S'TOrange'
p723
sg9
I01
sg10
(lp724
sg12
(lp725
sg29
(dp726
sbsS'TFileExampleGenerator'
p727
(i__main__
ClassDefinition
p728
(dp729
g4
I1
sg5
I0
sg6
g727
sg7
S'TExampleGenerator'
p730
sg9
I01
sg10
(lp731
sg12
(lp732
(S'string'
p733
S'filename'
p734
g734
S'filename'
p735
I0
I0
I01
Ntp736
a(S'int'
p737
S'startDataPos'
p738
S'start_data_pos'
p739
S'starting position of the data in file'
p740
I0
I0
I01
Ntp741
a(S'int'
p742
S'startDataLine'
p743
S'start_data_line'
p744
S'line in the file where the data starts'
p745
I0
I0
I01
Ntp746
ag121
ag125
asg29
(dp747
sbsS'TClassifierByLookupTable2'
p748
(i__main__
ClassDefinition
p749
(dp750
g4
I1
sg5
I0
sg6
g748
sg7
S'TClassifierByLookupTable'
p751
sg9
I00
sg10
(lp752
sg12
(lp753
(S'TVariable'
p754
S'variable1'
p755
g755
S'the first attribute used for classification'
p756
I01
I0
I00
Ntp757
a(S'TVariable'
p758
S'variable2'
p759
g759
S'the second attribute used for classification'
p760
I01
I0
I00
Ntp761
a(S'int'
p762
S'noOfValues1'
p763
S'no_of_values1'
p764
S'number of values of the first attribute'
p765
I01
I0
I01
Ntp766
a(S'int'
p767
S'noOfValues2'
p768
S'no_of_values2'
p769
S'number of values of the second attribute'
p770
I01
I0
I01
Ntp771
a(S'TEFMDataDescription'
p772
S'dataDescription'
p773
S'data_description'
p774
S'data description'
p775
I0
I0
I00
Ntp776
a(S'TValueList'
p777
S'lookupTable'
p778
S'lookup_table'
p779
S'a list of class values, one for each attribute value'
p780
I01
I0
I00
Ntp781
a(S'TDistributionList'
p782
S'distributions'
p783
g783
S'a list of class distributions, one for each attribute value'
p784
I01
I0
I00
Ntp785
a(S'TVariable'
p786
S'classVar'
p787
S'class_var'
p788
S'class variable'
p789
I0
I0
I00
Ntp790
a(S'bool'
p791
S'computesProbabilities'
p792
S'computes_probabilities'
p793
S'set if classifier computes class probabilities (if not, it assigns 1.0 to the predicted)'
p794
I0
I0
I01
Ntp795
asg29
(dp796
sbsS'TMeasureAttribute_gainRatio'
p797
(i__main__
ClassDefinition
p798
(dp799
g4
I1
sg5
I0
sg6
g797
sg7
S'TMeasureAttributeFromProbabilities'
p800
sg9
I00
sg10
(lp801
sg12
(lp802
g445
ag450
ag456
ag461
ag466
ag471
ag476
asg29
(dp803
sbsS'TContingencyClassAttr'
p804
(i__main__
ClassDefinition
p805
(dp806
g4
I1
sg5
I0
sg6
g804
sg7
S'TContingencyClass'
p807
sg9
I00
sg10
(lp808
sg12
(lp809
(S'TVariable'
p810
S'outerVariable'
p811
S'outer_variable'
p812
S'outer attribute'
p813
I0
I0
I00
Ntp814
a(S'TVariable'
p815
S'innerVariable'
p816
S'inner_variable'
p817
S'inner attribute'
p818
I0
I0
I00
Ntp819
a(S'int'
p820
S'varType'
p821
S'var_type'
p822
S' outer attribute type'
p823
I0
I0
I01
S'Variable_Type'
p824
tp825
a(S'TDistribution'
p826
S'outerDistribution'
p827
S'outer_distribution'
p828
S'distribution of values of outer attributes'
p829
I0
I0
I00
Ntp830
a(S'TDistribution'
p831
S'innerDistribution'
p832
S'inner_distribution'
p833
S'distribution of values of inner attributes'
p834
I0
I0
I00
Ntp835
a(S'TDistribution'
p836
S'innerDistributionUnknown'
p837
S'inner_distribution_unknown'
p838
S'distribution of inner variable for examples where the outer value was unknown'
p839
I0
I0
I00
Ntp840
asg29
(dp841
sbsS'TColumnAssessor_Measure'
p842
(i__main__
ClassDefinition
p843
(dp844
g4
I1
sg5
I0
sg6
g842
sg7
S'TColumnAssessor'
p845
sg9
I00
sg10
(lp846
sg12
(lp847
(S'TMeasureAttribute'
p848
S'measure'
p849
g849
S'attribute quality measure'
p850
I0
I0
I00
Ntp851
asg29
(dp852
sbsS'TLogRegClassifier'
p853
(i__main__
ClassDefinition
p854
(dp855
g4
I1
sg5
I0
sg6
g853
sg7
S'TClassifierFD'
p856
sg9
I00
sg10
(lp857
sg12
(lp858
(S'TDomain'
p859
S'continuizedDomain'
p860
S'continuized_domain'
p861
S'if absent, there is no continuous attributes in original domain'
p862
I0
I0
I00
Ntp863
a(S'TEFMDataDescription'
p864
S'dataDescription'
p865
S'data_description'
p866
S'Data needed for classification in presence of undefined values'
p867
I0
I0
I00
Ntp868
a(S'TAttributedFloatList'
p869
S'beta'
p870
g870
S'estimated beta coefficients for logistic regression'
p871
I0
I0
I00
Ntp872
a(S'TAttributedFloatList'
p873
S'beta_se'
p874
g874
S'estimated standard errors for beta coefficients'
p875
I0
I0
I00
Ntp876
a(S'TAttributedFloatList'
p877
S'wald_Z'
p878
g878
S'Wald Z statstic for beta coefficients'
p879
I0
I0
I00
Ntp880
a(S'TAttributedFloatList'
p881
S'P'
p882
g882
S'estimated significances for beta coefficients'
p883
I0
I0
I00
Ntp884
a(S'float'
p885
S'likelihood'
p886
g886
S"Likelihood: The likelihood function is the function which specifies the probability of the sample observed on the basis of a known model, as a function of the model's parameters. "
p887
I0
I0
I01
Ntp888
a(S'int'
p889
S'fit_status'
p890
g890
S"Tells how the model fitting ended - either regularly (LogRegFitter.OK), or it was interrupted due to one of beta coefficients escaping towards infinity (LogRegFitter.Infinity) or since the values didn't converge (LogRegFitter.Divergence)."
p891
I0
I0
I01
Ntp892
a(S'TImputer'
p893
S'imputer'
p894
g894
S'if present, it imputes unknown values'
p895
I0
I0
I00
Ntp896
a(S'TDomain'
p897
S'domain'
p898
g898
S'domain'
p899
I0
I0
I00
Ntp900
ag790
ag795
asg29
(dp901
sbsS'TClassifierRandomGenerator'
p902
(i__main__
ClassDefinition
p903
(dp904
g4
I1
sg5
I0
sg6
g902
sg7
S'TExampleGenerator'
p905
sg9
I00
sg10
(lp906
sg12
(lp907
(S'TClassifier'
p908
S'classify'
p909
g909
S'classifier'
p910
I0
I0
I00
Ntp911
a(S'int'
p912
S'noOfEx'
p913
S'no_of_ex'
p914
S'number of examples'
p915
I0
I0
I01
Ntp916
ag121
ag125
asg29
(dp917
sbsS'TPreprocessor_select'
p918
(i__main__
ClassDefinition
p919
(dp920
g4
I1
sg5
I0
sg6
g918
sg7
S'TPreprocessor'
p921
sg9
I00
sg10
(lp922
sg12
(lp923
(S'TVarList'
p924
S'attributes'
p925
g925
S'tells which attributes to select'
p926
I0
I0
I00
Ntp927
asg29
(dp928
sbsS'TBasicAttrStat'
p929
(i__main__
ClassDefinition
p930
(dp931
g4
I1
sg5
I0
sg6
g929
sg7
S'TOrange'
p932
sg9
I00
sg10
(lp933
sg12
(lp934
(S'float'
p935
S'sum'
p936
g936
S'sum of values'
p937
I0
I0
I01
Ntp938
a(S'float'
p939
S'sum2'
p940
g940
S'sum of squares of values'
p941
I0
I0
I01
Ntp942
a(S'float'
p943
S'n'
p944
g944
S'number of examples for which the attribute is defined'
p945
I0
I0
I01
Ntp946
a(S'float'
p947
S'min'
p948
g948
S'the lowest value of the attribute'
p949
I0
I0
I01
Ntp950
a(S'float'
p951
S'max'
p952
g952
S'the highest value of the attribute'
p953
I0
I0
I01
Ntp954
a(S'float'
p955
S'avg'
p956
g956
S'the average value of the attribute'
p957
I0
I0
I01
Ntp958
a(S'float'
p959
S'dev'
p960
g960
S'the deviation of the value of the attribute'
p961
I0
I0
I01
Ntp962
a(S'TVariable'
p963
S'variable'
p964
g964
S'the attribute to which the data applies'
p965
I0
I0
I00
Ntp966
a(S'bool'
p967
S'holdRecomputation'
p968
S'hold_recomputation'
p969
S'temporarily disables recomputation of avg and dev while adding values'
p970
I0
I0
I01
Ntp971
asg29
(dp972
sbsS'TMeasureAttribute_gini'
p973
(i__main__
ClassDefinition
p974
(dp975
g4
I1
sg5
I0
sg6
g973
sg7
S'TMeasureAttributeFromProbabilities'
p976
sg9
I00
sg10
(lp977
sg12
(lp978
g445
ag450
ag456
ag461
ag466
ag471
ag476
asg29
(dp979
sbsS'TIMByRowsByRelief'
p980
(i__main__
ClassDefinition
p981
(dp982
g4
I1
sg5
I0
sg6
g980
sg7
S'TIMByRowsConstructor'
p983
sg9
I00
sg10
(lp984
sg12
(lp985
(S'float'
p986
S'k'
p987
g987
S'number of neighbours'
p988
I0
I0
I01
Ntp989
a(S'float'
p990
S'm'
p991
g991
S'number of reference examples'
p992
I0
I0
I01
Ntp993
a(S'float'
p994
S'kFromColumns'
p995
S'k_from_columns'
p996
S'if positive, number of neighbours is #columns*kFromColumns'
p997
I0
I0
I01
Ntp998
a(S'bool'
p999
S'ignoreSameExample'
p1000
S'ignore_same_example'
p1001
S'does not put reference example into M'
p1002
I0
I0
I01
Ntp1003
a(S'bool'
p1004
S'convertToBinary'
p1005
S'convert_to_binary'
p1006
S'convert to binary class (hit-miss)'
p1007
I0
I0
I01
Ntp1008
a(S'bool'
p1009
S'correctClassFirst'
p1010
S'correct_class_first'
p1011
S'puts the correct class proportion to the first place'
p1012
I0
I0
I01
Ntp1013
a(S'bool'
p1014
S'allExamples'
p1015
S'all_examples'
p1016
S'uses all examples for reference examples'
p1017
I0
I0
I01
Ntp1018
a(S'bool'
p1019
S'allSameNeighbours'
p1020
S'all_same_neighbours'
p1021
S'uses all the examples same to the reference as neighbours'
p1022
I0
I0
I01
Ntp1023
asg29
(dp1024
sbsS'TFindNearestConstructor'
p1025
(i__main__
ClassDefinition
p1026
(dp1027
g4
I1
sg5
I0
sg6
g1025
sg7
S'TOrange'
p1028
sg9
I01
sg10
(lp1029
sg12
(lp1030
(S'TExamplesDistanceConstructor'
p1031
S'distanceConstructor'
p1032
S'distance_constructor'
p1033
S'metrics'
p1034
I0
I0
I00
Ntp1035
a(S'bool'
p1036
S'includeSame'
p1037
S'include_same'
p1038
S'tells whether to include examples that are same as the reference example'
p1039
I0
I0
I01
Ntp1040
asg29
(dp1041
sbsS'TTableAverager'
p1042
(i__main__
ClassDefinition
p1043
(dp1044
g4
I1
sg5
I0
sg6
g1042
sg7
S'TOrange'
p1045
sg9
I00
sg10
(lp1046
sg12
(lp1047
sg29
(dp1048
sbsS'TIntervalDiscretizer'
p1049
(i__main__
ClassDefinition
p1050
(dp1051
g4
I1
sg5
I0
sg6
g1049
sg7
S'TDiscretizer'
p1052
sg9
I00
sg10
(lp1053
sg12
(lp1054
(S'TFloatList'
p1055
S'points'
p1056
g1056
S'cut-off points'
p1057
I0
I0
I00
Ntp1058
ag318
asg29
(dp1059
sbsS'TImputer_asValue'
p1060
(i__main__
ClassDefinition
p1061
(dp1062
g4
I1
sg5
I0
sg6
g1060
sg7
S'TImputer'
p1063
sg9
I00
sg10
(lp1064
sg12
(lp1065
(S'TDomain'
p1066
S'domain'
p1067
g1067
S'domain to which the values are converted'
p1068
I0
I0
I00
Ntp1069
a(S'TExample'
p1070
S'defaults'
p1071
g1071
S'values to impute instead of missing ones - for continuous attributes only!'
p1072
I0
I0
I00
Ntp1073
asg29
(dp1074
sbsS'TDomainContinuizer'
p1075
(i__main__
ClassDefinition
p1076
(dp1077
g4
I1
sg5
I0
sg6
g1075
sg7
S'TOrange'
p1078
sg9
I00
sg10
(lp1079
sg12
(lp1080
(S'bool'
p1081
S'zeroBased'
p1082
S'zero_based'
p1083
S'if true (default) it gives values 0.0 and 1.0; else -1.0 and 1.0, 0.0 for undefined'
p1084
I0
I0
I01
Ntp1085
a(S'int'
p1086
S'continuousTreatment'
p1087
S'continuous_treatment'
p1088
S' 0-leave as they are, 1-divide by span, 1-normalize'
p1089
I0
I0
I01
S'DomainContinuizer_ContinuousTreatment'
p1090
tp1091
a(S'int'
p1092
S'multinomialTreatment'
p1093
S'multinomial_treatment'
p1094
S' 0-lowest value, 1-most frequent (or baseValue), 2-n binary, 3-ignore, 4-ignore all discrete, 5-error, 6-convert as ordinal, 7-ordinal,normalized'
p1095
I0
I0
I01
S'DomainContinuizer_MultinomialTreatment'
p1096
tp1097
a(S'int'
p1098
S'classTreatment'
p1099
S'class_treatment'
p1100
S' 3-leave as is unless target is given, 5-error if not continuous nor binary nor target given, 6-convert as ordinal (unless target given)'
p1101
I0
I0
I01
S'DomainContinuizer_ClassTreatment'
p1102
tp1103
asg29
(dp1104
S'MultinomialTreatment'
p1105
(lp1106
(S'LowestIsBase'
p1107
I0
tp1108
a(S'FrequentIsBase'
p1109
I1
tp1110
a(S'NValues'
p1111
I2
tp1112
a(S'Ignore'
p1113
I3
tp1114
a(S'IgnoreAllDiscrete'
p1115
I4
tp1116
a(S'ReportError'
p1117
I5
tp1118
a(S'AsOrdinal'
p1119
I6
tp1120
a(S'AsNormalizedOrdinal'
p1121
I7
tp1122
asS'ClassTreatment'
p1123
(lp1124
(S'LeaveUnlessTarget'
p1125
S'3'
p1126
tp1127
a(S'ErrorIfCannotHandle'
p1128
S'5'
p1129
tp1130
a(S'AsOrdinal'
p1131
S'6'
p1132
tp1133
asS'ContinuousTreatment'
p1134
(lp1135
(S'Leave'
p1136
I0
tp1137
a(S'NormalizeBySpan'
p1138
I1
tp1139
a(S'NormalizeByVariance'
p1140
I2
tp1141
assbsS'TSimpleTreeClassifier'
p1142
(i__main__
ClassDefinition
p1143
(dp1144
g4
I1
sg5
I0
sg6
g1142
sg7
S'TClassifier'
p1145
sg9
I00
sg10
(lp1146
sg12
(lp1147
g790
ag795
asg29
(dp1148
sbsS'TExamplesDistanceConstructor_Euclidean'
p1149
(i__main__
ClassDefinition
p1150
(dp1151
g4
I1
sg5
I0
sg6
g1149
sg7
S'TExamplesDistanceConstructor_Normalized'
p1152
sg9
I00
sg10
(lp1153
sg12
(lp1154
g96
ag101
ag106
asg29
(dp1155
sbsS'TContingencyAttrAttr'
p1156
(i__main__
ClassDefinition
p1157
(dp1158
g4
I1
sg5
I0
sg6
g1156
sg7
S'TContingency'
p1159
sg9
I00
sg10
(lp1160
sg12
(lp1161
g814
ag819
ag825
ag830
ag835
ag840
asg29
(dp1162
sbsS'TRuleBeamRefiner_Selector'
p1163
(i__main__
ClassDefinition
p1164
(dp1165
g4
I1
sg5
I0
sg6
g1163
sg7
S'TRuleBeamRefiner'
p1166
sg9
I00
sg10
(lp1167
sg12
(lp1168
(S'TDiscretization'
p1169
S'discretization'
p1170
g1170
S'discretization for continuous attributes'
p1171
I0
I0
I00
Ntp1172
asg29
(dp1173
sbsS'TExamplesDistance_Relief'
p1174
(i__main__
ClassDefinition
p1175
(dp1176
g4
I1
sg5
I0
sg6
g1174
sg7
S'TExamplesDistance'
p1177
sg9
I00
sg10
(lp1178
sg12
(lp1179
(S'TDomainDistributions'
p1180
S'distributions'
p1181
g1181
S"distributions of attributes' values"
p1182
I0
I0
I00
Ntp1183
a(S'TAttributedFloatList'
p1184
S'averages'
p1185
g1185
S'average values of attributes'
p1186
I0
I0
I00
Ntp1187
a(S'TAttributedFloatList'
p1188
S'normalizations'
p1189
g1189
S"ranges of attributes' values"
p1190
I0
I0
I00
Ntp1191
a(S'TAttributedFloatList'
p1192
S'bothSpecial'
p1193
S'both_special'
p1194
S'distance if both values of both attributes are undefined'
p1195
I0
I0
I00
Ntp1196
asg29
(dp1197
sbsS'TExamplesDistance_Manhattan'
p1198
(i__main__
ClassDefinition
p1199
(dp1200
g4
I1
sg5
I0
sg6
g1198
sg7
S'TExamplesDistance_Normalized'
p1201
sg9
I00
sg10
(lp1202
sg12
(lp1203
g136
ag140
ag144
ag148
ag153
ag157
ag162
asg29
(dp1204
sbsS'TTreeDescender'
p1205
(i__main__
ClassDefinition
p1206
(dp1207
g4
I1
sg5
I0
sg6
g1205
sg7
S'TOrange'
p1208
sg9
I01
sg10
(lp1209
sg12
(lp1210
sg29
(dp1211
sbsS'TIMBlurer'
p1212
(i__main__
ClassDefinition
p1213
(dp1214
g4
I1
sg5
I0
sg6
g1212
sg7
S'TIMByRowsPreprocessor'
p1215
sg9
I00
sg10
(lp1216
sg12
(lp1217
(S'float'
p1218
S'weight'
p1219
g1219
S'weight of neighbours'
p1220
I0
I0
I01
Ntp1221
a(S'float'
p1222
S'origWeight'
p1223
S'orig_weight'
p1224
S'weight of original row'
p1225
I0
I0
I01
Ntp1226
a(S'TFloatList'
p1227
S'attrWeights'
p1228
S'attr_weights'
p1229
S'weights by individual (different) attributes'
p1230
I0
I0
I00
Ntp1231
a(S'bool'
p1232
S'adjustOrigWeight'
p1233
S'adjust_orig_weight'
p1234
S'uses 1-weight(s) for weight of original row'
p1235
I0
I0
I01
Ntp1236
a(S'bool'
p1237
S'onlyEmpty'
p1238
S'only_empty'
p1239
S'blurs only empty cells'
p1240
I0
I0
I01
Ntp1241
asg29
(dp1242
sbsS'TFeatureByMinComplexity'
p1243
(i__main__
ClassDefinition
p1244
(dp1245
g4
I1
sg5
I0
sg6
g1243
sg7
S'TFeatureInducer'
p1246
sg9
I00
sg10
(lp1247
sg12
(lp1248
(S'TColorIG'
p1249
S'colorIG'
p1250
S'color_IG'
p1251
S'graph coloring algorithm'
p1252
I0
I0
I00
Ntp1253
a(S'int'
p1254
S'completion'
p1255
g1255
S' decides how to determine the class for points not covered by any cluster'
p1256
I0
I0
I01
S'FeatureByMinComplexity_Completion'
p1257
tp1258
asg29
(dp1259
S'Completion'
p1260
(lp1261
(S'NoCompletion'
p1262
S'completion_no'
p1263
tp1264
a(S'CompletionByDefault'
p1265
S'completion_default'
p1266
tp1267
a(S'CompletionByBayes'
p1268
S'completion_bayes'
p1269
tp1270
assbsS'TPreprocessor_dropMissingClasses'
p1271
(i__main__
ClassDefinition
p1272
(dp1273
g4
I1
sg5
I0
sg6
g1271
sg7
S'TPreprocessor'
p1274
sg9
I00
sg10
(lp1275
sg12
(lp1276
sg29
(dp1277
sbsS'TChangeExampleGenerator'
p1278
(i__main__
ClassDefinition
p1279
(dp1280
g4
I1
sg5
I0
sg6
g1278
sg7
S'TAdapterGenerator'
p1281
sg9
I01
sg10
(lp1282
sg12
(lp1283
g121
ag125
asg29
(dp1284
sbsS'TkNNClassifier'
p1285
(i__main__
ClassDefinition
p1286
(dp1287
g4
I1
sg5
I0
sg6
g1285
sg7
S'TClassifierFD'
p1288
sg9
I00
sg10
(lp1289
sg12
(lp1290
(S'TFindNearest'
p1291
S'findNearest'
p1292
S'find_nearest'
p1293
S''
p1294
I0
I0
I00
Ntp1295
a(S'float'
p1296
g987
g987
S'number of neighbours (0 for sqrt of #examples)'
p1297
I0
I0
I01
Ntp1298
a(S'bool'
p1299
S'rankWeight'
p1300
S'rank_weight'
p1301
S'enable weighting by ranks'
p1302
I0
I0
I01
Ntp1303
a(S'int'
p1304
S'weightID'
p1305
S'weight_ID'
p1306
S'id of meta-attribute with weight'
p1307
I0
I0
I01
Ntp1308
a(S'int'
p1309
S'nExamples'
p1310
S'n_examples'
p1311
S'the number of learning examples '
p1312
I0
I0
I01
Ntp1313
ag900
ag790
ag795
asg29
(dp1314
sbsS'TMeasureAttribute_info'
p1315
(i__main__
ClassDefinition
p1316
(dp1317
g4
I1
sg5
I0
sg6
g1315
sg7
S'TMeasureAttributeFromProbabilities'
p1318
sg9
I00
sg10
(lp1319
sg12
(lp1320
g445
ag450
ag456
ag461
ag466
ag471
ag476
asg29
(dp1321
sbsS'TOrange'
p1322
(i__main__
ClassDefinition
p1323
(dp1324
g4
I1
sg5
I0
sg6
g1322
sg7
Nsg9
I00
sg10
(lp1325
sg12
(lp1326
sg29
(dp1327
sbsS'TRuleValidator'
p1328
(i__main__
ClassDefinition
p1329
(dp1330
g4
I1
sg5
I0
sg6
g1328
sg7
S'TOrange'
p1331
sg9
I01
sg10
(lp1332
sg12
(lp1333
sg29
(dp1334
sbsS'TIMByRowsBySorting'
p1335
(i__main__
ClassDefinition
p1336
(dp1337
g4
I1
sg5
I0
sg6
g1335
sg7
S'TIMByRowsConstructor'
p1338
sg9
I00
sg10
(lp1339
sg12
(lp1340
sg29
(dp1341
sbsS'TRuleBeamInitializer_Python'
p1342
(i__main__
ClassDefinition
p1343
(dp1344
g4
I1
sg5
I0
sg6
g1342
sg7
S'TRuleBeamInitializer'
p1345
sg9
I00
sg10
(lp1346
sg12
(lp1347
sg29
(dp1348
sbsS'TRuleCovererAndRemover_Python'
p1349
(i__main__
ClassDefinition
p1350
(dp1351
g4
I1
sg5
I0
sg6
g1349
sg7
S'TRuleCovererAndRemover'
p1352
sg9
I00
sg10
(lp1353
sg12
(lp1354
sg29
(dp1355
sbsS'TMeasureAttribute_gainRatioA'
p1356
(i__main__
ClassDefinition
p1357
(dp1358
g4
I1
sg5
I0
sg6
g1356
sg7
S'TMeasureAttribute_gainRatio'
p1359
sg9
I00
sg10
(lp1360
sg12
(lp1361
g445
ag450
ag456
ag461
ag466
ag471
ag476
asg29
(dp1362
sbsS'TCartesianClassifier'
p1363
(i__main__
ClassDefinition
p1364
(dp1365
g4
I1
sg5
I0
sg6
g1363
sg7
S'TClassifierFD'
p1366
sg9
I00
sg10
(lp1367
sg12
(lp1368
g900
ag790
ag795
asg29
(dp1369
sbsS'TLinearClassifier'
p1370
(i__main__
ClassDefinition
p1371
(dp1372
g4
I1
sg5
I0
sg6
g1370
sg7
S'TClassifierFD'
p1373
sg9
I00
sg10
(lp1374
sg12
(lp1375
(S'TFloatListList'
p1376
S'weights'
p1377
g1377
S'Computed feature weights'
p1378
I0
I0
I00
Ntp1379
a(S'TExampleTable'
p1380
S'examples'
p1381
g1381
S'Examples used to train the classifier'
p1382
I0
I0
I00
Ntp1383
ag900
ag790
ag795
asg29
(dp1384
sbsS'TRemoveRedundantByInduction'
p1385
(i__main__
ClassDefinition
p1386
(dp1387
g4
I1
sg5
I0
sg6
g1385
sg7
S'TRemoveRedundant'
p1388
sg9
I00
sg10
(lp1389
sg12
(lp1390
(S'TFeatureInducer'
p1391
S'featureReducer'
p1392
S'feature_reducer'
p1393
S'feature construction algorithm'
p1394
I0
I0
I00
Ntp1395
a(S'TMeasureAttribute'
p1396
S'measure'
p1397
g1397
S'measure for initial ordering of attributes'
p1398
I0
I0
I00
Ntp1399
a(S'TDiscretization'
p1400
S'discretization'
p1401
g1401
S'discretization method'
p1402
I0
I0
I00
Ntp1403
ag545
asg29
(dp1404
sbsS'TFilter_conjunction'
p1405
(i__main__
ClassDefinition
p1406
(dp1407
g4
I1
sg5
I0
sg6
g1405
sg7
S'TFilter'
p1408
sg9
I00
sg10
(lp1409
sg12
(lp1410
(S'TFilterList'
p1411
S'filters'
p1412
g1412
S'a list of filters;'
p1413
I0
I0
I00
Ntp1414
ag259
ag263
asg29
(dp1415
sbsS'TGraph'
p1416
(i__main__
ClassDefinition
p1417
(dp1418
g4
I1
sg5
I0
sg6
g1416
sg7
S'TOrange'
p1419
sg9
I01
sg10
(lp1420
sg12
(lp1421
g681
ag686
ag690
asg29
(dp1422
sbsS'TStopIMClusteringByAssessor'
p1423
(i__main__
ClassDefinition
p1424
(dp1425
g4
I1
sg5
I0
sg6
g1423
sg7
S'TOrange'
p1426
sg9
I01
sg10
(lp1427
sg12
(lp1428
sg29
(dp1429
sbsS'TClustersFromDistributions'
p1430
(i__main__
ClassDefinition
p1431
(dp1432
g4
I1
sg5
I0
sg6
g1430
sg7
S'TOrange'
p1433
sg9
I01
sg10
(lp1434
sg12
(lp1435
sg29
(dp1436
sbsS'TVariable'
p1437
(i__main__
ClassDefinition
p1438
(dp1439
g4
I1
sg5
I0
sg6
g1437
sg7
S'TOrange'
p1440
sg9
I01
sg10
(lp1441
sg12
(lp1442
g641
ag645
ag649
ag654
ag659
ag664
ag669
asg29
(dp1443
S'Type'
p1444
(lp1445
(S'None'
p1446
S'(int)TValue::NONE'
p1447
tp1448
a(S'Discrete'
p1449
S'(int)TValue::INTVAR'
p1450
tp1451
a(S'Continuous'
p1452
S'(int)TValue::FLOATVAR'
p1453
tp1454
a(S'Other'
p1455
S'(int)(TValue::FLOATVAR+1)'
p1456
tp1457
a(S'String'
p1458
S'(int)STRINGVAR'
p1459
tp1460
asS'MakeStatus'
p1461
(lp1462
(S'OK'
p1463
I0
tp1464
a(S'MissingValues'
p1465
I1
tp1466
a(S'NoRecognizedValues'
p1467
I2
tp1468
a(S'Incompatible'
p1469
I3
tp1470
a(S'NotFound'
p1471
I4
tp1472
assbsS'TImputerConstructor_average'
p1473
(i__main__
ClassDefinition
p1474
(dp1475
g4
I1
sg5
I0
sg6
g1473
sg7
S'TImputerConstructor'
p1476
sg9
I00
sg10
(lp1477
sg12
(lp1478
(S'bool'
p1479
S'imputeClass'
p1480
S'impute_class'
p1481
S'tells whether to impute the class value (default: true)'
p1482
I0
I0
I01
Ntp1483
asg29
(dp1484
sbsS'TRuleCovererAndRemover'
p1485
(i__main__
ClassDefinition
p1486
(dp1487
g4
I1
sg5
I0
sg6
g1485
sg7
S'TOrange'
p1488
sg9
I01
sg10
(lp1489
sg12
(lp1490
sg29
(dp1491
sbsS'TExampleTable'
p1492
(i__main__
ClassDefinition
p1493
(dp1494
g4
I1
sg5
I0
sg6
g1492
sg7
S'TExampleGenerator'
p1495
sg9
I00
sg10
(lp1496
sg12
(lp1497
(S'TRandomGenerator'
p1498
S'randomGenerator'
p1499
S'random_generator'
p1500
S'random generator used by randomExample'
p1501
I0
I0
I00
Ntp1502
a(S'TExampleGenerator'
p1503
S'lock'
p1504
(g1504
S'owner'
p1505
tp1506
S' the real owner of examples'
p1507
I01
I0
I00
Ntp1508
a(S'bool'
p1509
S'ownsExamples'
p1510
(g1510
S'owns_instances'
p1511
tp1512
S' if false, examples in this table are references to examples in another table'
p1513
I01
I0
I01
Ntp1514
ag121
ag125
asg29
(dp1515
sbsNNsS'TRemoveRedundantByQuality'
p1516
(i__main__
ClassDefinition
p1517
(dp1518
g4
I1
sg5
I0
sg6
g1516
sg7
S'TRemoveRedundant'
p1519
sg9
I00
sg10
(lp1520
sg12
(lp1521
(S'bool'
p1522
S'remeasure'
p1523
g1523
S'reapply the measure after removal'
p1524
I0
I0
I01
Ntp1525
a(S'float'
p1526
S'minQuality'
p1527
S'min_quality'
p1528
S'minimal acceptable quality'
p1529
I0
I0
I01
Ntp1530
a(S'int'
p1531
S'removeBut'
p1532
S'remove_but'
p1533
S'the desired number of attributes'
p1534
I0
I0
I01
Ntp1535
a(S'TMeasureAttribute'
p1536
S'measure'
p1537
g1537
S'attribute quality measure'
p1538
I0
I0
I00
Ntp1539
ag545
asg29
(dp1540
sbsS'TGraphAsList'
p1541
(i__main__
ClassDefinition
p1542
(dp1543
g4
I1
sg5
I0
sg6
g1541
sg7
S'TGraph'
p1544
sg9
I00
sg10
(lp1545
sg12
(lp1546
g681
ag686
ag690
asg29
(dp1547
sbsS'TDistanceMapConstructor'
p1548
(i__main__
ClassDefinition
p1549
(dp1550
g4
I1
sg5
I0
sg6
g1548
sg7
S'TOrange'
p1551
sg9
I00
sg10
(lp1552
sg12
(lp1553
(S'TSymMatrix'
p1554
S'distanceMatrix'
p1555
S'distance_matrix'
p1556
S'distance matrix'
p1557
I0
I0
I00
Ntp1558
a(S'TIntList'
p1559
S'order'
p1560
g1560
S'order of elements'
p1561
I0
I0
I00
Ntp1562
asg29
(dp1563
sbsS'TTransformValue'
p1564
(i__main__
ClassDefinition
p1565
(dp1566
g4
I1
sg5
I0
sg6
g1564
sg7
S'TOrange'
p1567
sg9
I01
sg10
(lp1568
sg12
(lp1569
g318
asg29
(dp1570
sbsS'TComputeDomainContingency_DomainTransformation'
p1571
(i__main__
ClassDefinition
p1572
(dp1573
g4
I1
sg5
I0
sg6
g1571
sg7
S'TComputeDomainContingency'
p1574
sg9
I00
sg10
(lp1575
sg12
(lp1576
(S'TDomainTransformerConstructor'
p1577
S'domainTransformerConstructor'
p1578
S'domain_transformer_constructor'
p1579
S'constructs a domain in which each attribute corresponds one of originals'
p1580
I0
I0
I00
Ntp1581
a(S'bool'
p1582
S'resultInOriginalDomain'
p1583
S'result_in_original_domain'
p1584
S'tells whether the resulting DomainContingency should consist of original attributes'
p1585
I0
I0
I01
Ntp1586
ag28
asg29
(dp1587
sbsS'TTreePruner'
p1588
(i__main__
ClassDefinition
p1589
(dp1590
g4
I1
sg5
I0
sg6
g1588
sg7
S'TOrange'
p1591
sg9
I01
sg10
(lp1592
sg12
(lp1593
sg29
(dp1594
sbsS'TImputer_Python'
p1595
(i__main__
ClassDefinition
p1596
(dp1597
g4
I1
sg5
I0
sg6
g1595
sg7
S'TImputer'
p1598
sg9
I00
sg10
(lp1599
sg12
(lp1600
sg29
(dp1601
sbsS'TPreprocessor_addGaussianClassNoise'
p1602
(i__main__
ClassDefinition
p1603
(dp1604
g4
I1
sg5
I0
sg6
g1602
sg7
S'TPreprocessor'
p1605
sg9
I00
sg10
(lp1606
sg12
(lp1607
(S'float'
p1608
S'deviation'
p1609
g1609
S'class deviation'
p1610
I0
I0
I01
Ntp1611
a(S'TRandomGenerator'
p1612
S'randomGenerator'
p1613
S'random_generator'
p1614
S'random number generator'
p1615
I0
I0
I00
Ntp1616
asg29
(dp1617
sbsS'TRuleEvaluator_Python'
p1618
(i__main__
ClassDefinition
p1619
(dp1620
g4
I1
sg5
I0
sg6
g1618
sg7
S'TRuleEvaluator'
p1621
sg9
I00
sg10
(lp1622
sg12
(lp1623
sg29
(dp1624
sbsS'TIGBySorting'
p1625
(i__main__
ClassDefinition
p1626
(dp1627
g4
I1
sg5
I0
sg6
g1625
sg7
S'TIGConstructor'
p1628
sg9
I00
sg10
(lp1629
sg12
(lp1630
sg29
(dp1631
sbsS'TConditionalProbabilityEstimator_ByRows'
p1632
(i__main__
ClassDefinition
p1633
(dp1634
g4
I1
sg5
I0
sg6
g1632
sg7
S'TConditionalProbabilityEstimator'
p1635
sg9
I00
sg10
(lp1636
sg12
(lp1637
(S'TProbabilityEstimatorList'
p1638
S'estimatorList'
p1639
S'estimator_list'
p1640
S'A list of probability estimators'
p1641
I0
I0
I00
Ntp1642
ag63
ag68
asg29
(dp1643
sbsS'TProgressCallback'
p1644
(i__main__
ClassDefinition
p1645
(dp1646
g4
I1
sg5
I0
sg6
g1644
sg7
S'TOrange'
p1647
sg9
I01
sg10
(lp1648
sg12
(lp1649
sg29
(dp1650
sbsS'THierarchicalClustering'
p1651
(i__main__
ClassDefinition
p1652
(dp1653
g4
I1
sg5
I0
sg6
g1651
sg7
S'TOrange'
p1654
sg9
I00
sg10
(lp1655
sg12
(lp1656
(S'int'
p1657
S'linkage'
p1658
g1658
S' linkage'
p1659
I0
I0
I01
S'HierarchicalClustering_Linkage'
p1660
tp1661
a(S'bool'
p1662
S'overwriteMatrix'
p1663
S'overwrite_matrix'
p1664
S'if true (default is false) it will use (and destroy) the distance matrix given as argument'
p1665
I0
I0
I01
Ntp1666
a(S'TProgressCallback'
p1667
S'progressCallback'
p1668
S'progress_callback'
p1669
S'progress callback function'
p1670
I0
I0
I00
Ntp1671
asg29
(dp1672
S'Linkage'
p1673
(lp1674
(S'Single'
p1675
I0
tp1676
a(S'Average'
p1677
I1
tp1678
a(S'Complete'
p1679
I2
tp1680
a(S'Ward'
p1681
I3
tp1682
assbsS'TTreeSplitConstructor_Python'
p1683
(i__main__
ClassDefinition
p1684
(dp1685
g4
I1
sg5
I0
sg6
g1683
sg7
S'TTreeSplitConstructor'
p1686
sg9
I00
sg10
(lp1687
sg12
(lp1688
(S'float'
p1689
S'minSubset'
p1690
S'min_subset'
p1691
S'minimal number of examples in a subset'
p1692
I0
I0
I01
Ntp1693
asg29
(dp1694
sbsS'TEarthLearner'
p1695
(i__main__
ClassDefinition
p1696
(dp1697
g4
I1
sg5
I0
sg6
g1695
sg7
S'TLearner'
p1698
sg9
I00
sg10
(lp1699
sg12
(lp1700
(S'int'
p1701
S'max_terms'
p1702
g1702
S'Maximum number of terms.'
p1703
I0
I0
I01
Ntp1704
a(S'int'
p1705
S'max_degree'
p1706
g1706
S'Maximum degree of terms.'
p1707
I0
I0
I01
Ntp1708
a(S'float'
p1709
S'penalty'
p1710
g1710
S'Penalty.'
p1711
I0
I0
I01
Ntp1712
a(S'float'
p1713
S'threshold'
p1714
g1714
S'Forward step threshold.'
p1715
I0
I0
I01
Ntp1716
a(S'bool'
p1717
S'prune'
p1718
g1718
S'Prune terms (do backward pass).'
p1719
I0
I0
I01
Ntp1720
a(S'float'
p1721
S'fast_beta'
p1722
g1722
S'Fast beta (aging coefficient).'
p1723
I0
I0
I01
Ntp1724
a(S'float'
p1725
S'trace'
p1726
g1726
S'Execution trace (for debugging only).'
p1727
I0
I0
I01
Ntp1728
a(S'int'
p1729
S'min_span'
p1730
g1730
S'Min. span (training instances) between knots.'
p1731
I0
I0
I01
Ntp1732
a(S'int'
p1733
S'fast_k'
p1734
g1734
S'Fast K.'
p1735
I0
I0
I01
Ntp1736
a(S'bool'
p1737
S'new_var_penalty'
p1738
g1738
S'Penalty for adding a new variable.'
p1739
I0
I0
I01
Ntp1740
a(S'bool'
p1741
S'use_beta_cache'
p1742
g1742
S'Use caching for betas.'
p1743
I0
I0
I01
Ntp1744
ag47
asg29
(dp1745
sbsS'TKernelFunc_Python'
p1746
(i__main__
ClassDefinition
p1747
(dp1748
g4
I1
sg5
I0
sg6
g1746
sg7
S'TKernelFunc'
p1749
sg9
I00
sg10
(lp1750
sg12
(lp1751
sg29
(dp1752
sbsS'TAdapterGenerator'
p1753
(i__main__
ClassDefinition
p1754
(dp1755
g4
I1
sg5
I0
sg6
g1753
sg7
S'TExampleGenerator'
p1756
sg9
I00
sg10
(lp1757
sg12
(lp1758
g121
ag125
asg29
(dp1759
sbsS'TIMFromExamples'
p1760
(i__main__
ClassDefinition
p1761
(dp1762
g4
I1
sg5
I0
sg6
g1760
sg7
S'TOrange'
p1763
sg9
I01
sg10
(lp1764
sg12
(lp1765
sg29
(dp1766
sbsS'TExamplesDistance_Lp'
p1767
(i__main__
ClassDefinition
p1768
(dp1769
g4
I1
sg5
I0
sg6
g1767
sg7
S'TExamplesDistance_Normalized'
p1770
sg9
I00
sg10
(lp1771
sg12
(lp1772
(S'float'
p1773
g91
g91
g91
I01
I0
I01
Ntp1774
ag136
ag140
ag144
ag148
ag153
ag157
ag162
asg29
(dp1775
sbsS'TMakeRandomIndicesCV'
p1776
(i__main__
ClassDefinition
p1777
(dp1778
g4
I1
sg5
I0
sg6
g1776
sg7
S'TMakeRandomIndices'
p1779
sg9
I00
sg10
(lp1780
sg12
(lp1781
(S'int'
p1782
S'folds'
p1783
g1783
S'number of folds'
p1784
I0
I0
I01
Ntp1785
ag282
ag286
ag291
asg29
(dp1786
sbsS'TPreprocessor_removeDuplicates'
p1787
(i__main__
ClassDefinition
p1788
(dp1789
g4
I1
sg5
I0
sg6
g1787
sg7
S'TPreprocessor'
p1790
sg9
I00
sg10
(lp1791
sg12
(lp1792
sg29
(dp1793
sbsS'TTreeExampleSplitter_UnknownsAsBranchSizes'
p1794
(i__main__
ClassDefinition
p1795
(dp1796
g4
I1
sg5
I0
sg6
g1794
sg7
S'TTreeExampleSplitter'
p1797
sg9
I00
sg10
(lp1798
sg12
(lp1799
sg29
(dp1800
sbsS'TExamplesDistanceConstructor_Normalized'
p1801
(i__main__
ClassDefinition
p1802
(dp1803
g4
I1
sg5
I0
sg6
g1801
sg7
S'TExamplesDistanceConstructor'
p1804
sg9
I01
sg10
(lp1805
sg12
(lp1806
g96
ag101
ag106
asg29
(dp1807
sbsS'TCostWrapperLearner'
p1808
(i__main__
ClassDefinition
p1809
(dp1810
g4
I1
sg5
I0
sg6
g1808
sg7
S'TLearner'
p1811
sg9
I00
sg10
(lp1812
sg12
(lp1813
(S'TLearner'
p1814
S'basicLearner'
p1815
S'basic_learner'
p1816
S'basic learner'
p1817
I0
I0
I00
Ntp1818
a(S'TCostMatrix'
p1819
S'costMatrix'
p1820
S'cost_matrix'
p1821
S'cost matrix'
p1822
I0
I0
I00
Ntp1823
ag47
asg29
(dp1824
sbsS'TPearsonCorrelation'
p1825
(i__main__
ClassDefinition
p1826
(dp1827
g4
I1
sg5
I0
sg6
g1825
sg7
S'TOrange'
p1828
sg9
I00
sg10
(lp1829
sg12
(lp1830
(S'float'
p1831
S'r'
p1832
g1832
S'correlation coefficient'
p1833
I0
I0
I01
Ntp1834
a(S'float'
p1835
S't'
p1836
g1836
S't-statics significance'
p1837
I0
I0
I01
Ntp1838
a(S'int'
p1839
S'df'
p1840
g1840
S'degrees of freedom'
p1841
I0
I0
I01
Ntp1842
a(S'float'
p1843
g91
g91
S'significance'
p1844
I0
I0
I01
Ntp1845
asg29
(dp1846
sbsS'TDistributionAssessor_Laplace'
p1847
(i__main__
ClassDefinition
p1848
(dp1849
g4
I1
sg5
I0
sg6
g1847
sg7
S'TDistributionAssessor'
p1850
sg9
I00
sg10
(lp1851
sg12
(lp1852
sg29
(dp1853
sbsS'TColumnAssessor_Relief'
p1854
(i__main__
ClassDefinition
p1855
(dp1856
g4
I1
sg5
I0
sg6
g1854
sg7
S'TColumnAssessor'
p1857
sg9
I00
sg10
(lp1858
sg12
(lp1859
sg29
(dp1860
sbsS'TClassifierByLookupTable'
p1861
(i__main__
ClassDefinition
p1862
(dp1863
g4
I1
sg5
I0
sg6
g1861
sg7
S'TClassifier'
p1864
sg9
I01
sg10
(lp1865
sg12
(lp1866
g781
ag785
ag790
ag795
asg29
(dp1867
sbsS'TRuleBeamFinder'
p1868
(i__main__
ClassDefinition
p1869
(dp1870
g4
I1
sg5
I0
sg6
g1868
sg7
S'TRuleFinder'
p1871
sg9
I00
sg10
(lp1872
sg12
(lp1873
(S'TRuleBeamInitializer'
p1874
S'initializer'
p1875
g1875
g1294
I0
I0
I00
Ntp1876
a(S'TRuleBeamRefiner'
p1877
S'refiner'
p1878
g1878
g1294
I0
I0
I00
Ntp1879
a(S'TRuleBeamCandidateSelector'
p1880
S'candidateSelector'
p1881
S'candidate_selector'
p1882
g1294
I0
I0
I00
Ntp1883
a(S'TRuleBeamFilter'
p1884
S'ruleFilter'
p1885
S'rule_filter'
p1886
g1294
I0
I0
I00
Ntp1887
a(S'TRuleValidator'
p1888
S'ruleStoppingValidator'
p1889
S'rule_stopping_validator'
p1890
g1294
I0
I0
I00
Ntp1891
a(S'TRuleValidator'
p1892
S'validator'
p1893
g1893
g1294
I0
I0
I00
Ntp1894
a(S'TRuleEvaluator'
p1895
S'evaluator'
p1896
g1896
g1294
I0
I0
I00
Ntp1897
asg29
(dp1898
sbsS'TC45Classifier'
p1899
(i__main__
ClassDefinition
p1900
(dp1901
g4
I1
sg5
I0
sg6
g1899
sg7
S'TClassifierFD'
p1902
sg9
I00
sg10
(lp1903
sg12
(lp1904
(S'TC45TreeNode'
p1905
S'tree'
p1906
g1906
S'tree'
p1907
I0
I0
I00
Ntp1908
ag900
ag790
ag795
asg29
(dp1909
sbsS'TFilter_values'
p1910
(i__main__
ClassDefinition
p1911
(dp1912
g4
I1
sg5
I0
sg6
g1910
sg7
S'TFilter'
p1913
sg9
I00
sg10
(lp1914
sg12
(lp1915
(S'TValueFilterList'
p1916
S'conditions'
p1917
g1917
S'a list of filters'
p1918
I0
I0
I00
Ntp1919
a(S'bool'
p1920
S'conjunction'
p1921
g1921
S'if true, filter computes conjunction, otherwise disjunction'
p1922
I0
I0
I01
Ntp1923
ag259
ag263
asg29
(dp1924
S'Operator'
p1925
(lp1926
(S'None'
p1927
I0
tp1928
a(S'Equal'
p1929
I1
tp1930
a(S'NotEqual'
p1931
I2
tp1932
a(S'Less'
p1933
I3
tp1934
a(S'LessEqual'
p1935
I4
tp1936
a(S'Greater'
p1937
I5
tp1938
a(S'GreaterEqual'
p1939
I6
tp1940
a(S'Between'
p1941
I7
tp1942
a(S'Outside'
p1943
I8
tp1944
a(S'Contains'
p1945
I9
tp1946
a(S'NotContains'
p1947
I10
tp1948
a(S'BeginsWith'
p1949
I11
tp1950
a(S'EndsWith'
p1951
I12
tp1952
a(S'Listed'
p1953
I13
tp1954
assbsS'TRuleClassifier'
p1955
(i__main__
ClassDefinition
p1956
(dp1957
g4
I1
sg5
I0
sg6
g1955
sg7
S'TClassifier'
p1958
sg9
I01
sg10
(lp1959
sg12
(lp1960
(S'TRuleList'
p1961
S'rules'
p1962
g1962
g1294
I0
I0
I00
Ntp1963
a(S'TExampleTable'
p1964
S'examples'
p1965
g1965
g1294
I0
I0
I00
Ntp1966
a(S'int'
p1967
S'weightID'
p1968
S'weight_ID'
p1969
g1294
I0
I0
I01
Ntp1970
ag790
ag795
asg29
(dp1971
sbsS'TSymMatrix'
p1972
(i__main__
ClassDefinition
p1973
(dp1974
g4
I1
sg5
I0
sg6
g1972
sg7
S'TOrange'
p1975
sg9
I00
sg10
(lp1976
sg12
(lp1977
(S'int'
p1978
S'dim'
p1979
g1979
S'matrix dimension'
p1980
I01
I0
I01
Ntp1981
a(S'int'
p1982
S'matrixType'
p1983
S'matrix_type'
p1984
S' 0 lower, 1 upper, 2 symmetric, 3 lower_filled, 4 upper_filled'
p1985
I0
I0
I01
S'SymMatrix_Shape'
p1986
tp1987
asg29
(dp1988
S'Shape'
p1989
(lp1990
(S'Lower'
p1991
I0
tp1992
a(S'Upper'
p1993
I1
tp1994
a(S'Symmetric'
p1995
I2
tp1996
a(S'LowerFilled'
p1997
I3
tp1998
a(S'UpperFilled'
p1999
I4
tp2000
assbsS'TSVMLearner'
p2001
(i__main__
ClassDefinition
p2002
(dp2003
g4
I1
sg5
I0
sg6
g2001
sg7
S'TLearner'
p2004
sg9
I00
sg10
(lp2005
sg12
(lp2006
(S'int'
p2007
S'svm_type'
p2008
g2008
S'  SVM type (C_SVC=0, NU_SVC, ONE_CLASS, EPSILON_SVR=3, NU_SVR=4)'
p2009
I0
I0
I01
S'SVMLearner_SVMType'
p2010
tp2011
a(S'int'
p2012
S'kernel_type'
p2013
g2013
S'  kernel type (LINEAR=0, POLY, RBF, SIGMOID, CUSTOM=4)'
p2014
I0
I0
I01
S'SVMLearner_Kernel'
p2015
tp2016
a(S'float'
p2017
S'degree'
p2018
g2018
S'polynomial kernel degree'
p2019
I0
I0
I01
Ntp2020
a(S'float'
p2021
S'gamma'
p2022
g2022
S'poly/rbf/sigm parameter'
p2023
I0
I0
I01
Ntp2024
a(S'float'
p2025
S'coef0'
p2026
g2026
S'poly/sigm parameter'
p2027
I0
I0
I01
Ntp2028
a(S'float'
p2029
S'cache_size'
p2030
g2030
S'cache size in MB'
p2031
I0
I0
I01
Ntp2032
a(S'float'
p2033
S'eps'
p2034
g2034
S'stopping criteria'
p2035
I0
I0
I01
Ntp2036
a(S'float'
p2037
S'C'
p2038
g2038
S'for C_SVC and C_SVR'
p2039
I0
I0
I01
Ntp2040
a(S'float'
p2041
S'nu'
p2042
g2042
S'for NU_SVC and ONE_CLASS'
p2043
I0
I0
I01
Ntp2044
a(S'float'
p2045
g91
g91
S'for C_SVR'
p2046
I0
I0
I01
Ntp2047
a(S'int'
p2048
S'shrinking'
p2049
g2049
S'shrinking'
p2050
I0
I0
I01
Ntp2051
a(S'int'
p2052
S'probability'
p2053
g2053
S'probability'
p2054
I0
I0
I01
Ntp2055
a(S'bool'
p2056
S'verbose'
p2057
g2057
S'verbose'
p2058
I0
I0
I01
Ntp2059
a(S'TKernelFunc'
p2060
S'kernelFunc'
p2061
S'kernel_func'
p2062
S'custom kernel function'
p2063
I0
I0
I00
Ntp2064
ag47
asg29
(dp2065
S'Kernel'
p2066
(lp2067
(S'Linear'
p2068
S'LINEAR'
p2069
tp2070
a(S'Polynomial'
p2071
S'POLY'
p2072
tp2073
a(S'RBF'
p2074
S'RBF'
p2075
tp2076
a(S'Sigmoid'
p2077
S'SIGMOID'
p2078
tp2079
a(S'Custom'
p2080
S'PRECOMPUTED'
p2081
tp2082
asS'LIBSVM_VERSION'
p2083
(lp2084
(S'VERSION'
p2085
S'LIBSVM_VERSION'
p2086
tp2087
asS'SVMType'
p2088
(lp2089
(S'C_SVC'
p2090
S'C_SVC'
p2091
tp2092
a(S'Nu_SVC'
p2093
S'NU_SVC'
p2094
tp2095
a(S'OneClass'
p2096
S'ONE_CLASS'
p2097
tp2098
a(S'Epsilon_SVR'
p2099
S'EPSILON_SVR'
p2100
tp2101
a(S'Nu_SVR'
p2102
S'NU_SVR'
p2103
tp2104
assbsS'TImputerConstructor_defaults'
p2105
(i__main__
ClassDefinition
p2106
(dp2107
g4
I1
sg5
I0
sg6
g2105
sg7
S'TImputerConstructor'
p2108
sg9
I00
sg10
(lp2109
sg12
(lp2110
(S'TExample'
p2111
S'defaults'
p2112
g2112
S'default values to be imputed instead missing ones'
p2113
I0
I0
I00
Ntp2114
ag1483
asg29
(dp2115
sbsS'TConditionalProbabilityEstimatorConstructor'
p2116
(i__main__
ClassDefinition
p2117
(dp2118
g4
I1
sg5
I0
sg6
g2116
sg7
S'TOrange'
p2119
sg9
I01
sg10
(lp2120
sg12
(lp2121
sg29
(dp2122
sbsS'TPreprocessor_takeMissingClasses'
p2123
(i__main__
ClassDefinition
p2124
(dp2125
g4
I1
sg5
I0
sg6
g2123
sg7
S'TPreprocessor'
p2126
sg9
I00
sg10
(lp2127
sg12
(lp2128
sg29
(dp2129
sbsS'TRuleValidator_LRS'
p2130
(i__main__
ClassDefinition
p2131
(dp2132
g4
I1
sg5
I0
sg6
g2130
sg7
S'TRuleValidator'
p2133
sg9
I00
sg10
(lp2134
sg12
(lp2135
(S'float'
p2136
S'alpha'
p2137
g2137
g1294
I0
I0
I01
Ntp2138
a(S'float'
p2139
S'min_coverage'
p2140
g2140
g1294
I0
I0
I01
Ntp2141
a(S'int'
p2142
S'max_rule_complexity'
p2143
g2143
g1294
I0
I0
I01
Ntp2144
a(S'float'
p2145
S'min_quality'
p2146
g2146
g1294
I0
I0
I01
Ntp2147
asg29
(dp2148
sbsS'TLogRegFitter_Python'
p2149
(i__main__
ClassDefinition
p2150
(dp2151
g4
I1
sg5
I0
sg6
g2149
sg7
S'TLogRegFitter'
p2152
sg9
I00
sg10
(lp2153
sg12
(lp2154
sg29
(dp2155
sbsS'TContDistribution'
p2156
(i__main__
ClassDefinition
p2157
(dp2158
g4
I1
sg5
I0
sg6
g2156
sg7
S'TDistribution'
p2159
sg9
I00
sg10
(lp2160
sg12
(lp2161
(S'TFloatList'
p2162
S'variances'
p2163
g2163
S'variances'
p2164
I0
I0
I00
Ntp2165
a(S'float'
p2166
S'sum'
p2167
g2167
S'weighted sum of elements (i.e. N*average)'
p2168
I01
I0
I01
Ntp2169
a(S'float'
p2170
S'sum2'
p2171
g2171
S'weighted sum of squares of elements'
p2172
I01
I0
I01
Ntp2173
a(S'TVariable'
p2174
S'variable'
p2175
g2175
S'attribute descriptor (optional)'
p2176
I0
I0
I00
Ntp2177
a(S'float'
p2178
S'unknowns'
p2179
g2179
S'number of unknown values'
p2180
I0
I0
I01
Ntp2181
a(S'float'
p2182
S'abs'
p2183
g2183
S'sum of frequencies (not including unknown values!)'
p2184
I0
I0
I01
Ntp2185
a(S'float'
p2186
S'cases'
p2187
g2187
S"number of cases; as abs, but doesn't change at *= and normalize()"
p2188
I0
I0
I01
Ntp2189
a(S'bool'
p2190
S'normalized'
p2191
g2191
S'distribution is normalized'
p2192
I0
I0
I01
Ntp2193
a(S'bool'
p2194
S'supportsDiscrete'
p2195
S'supports_discrete'
p2196
S'distribution supports discrete interface'
p2197
I01
I0
I01
Ntp2198
a(S'bool'
p2199
S'supportsContinuous'
p2200
S'supports_continuous'
p2201
S'distribution supports continuous interface'
p2202
I01
I0
I01
Ntp2203
a(S'TRandomGenerator'
p2204
S'randomGenerator'
p2205
S'random_generator'
p2206
S'random generator; initialized when needed, if not given earlier'
p2207
I0
I0
I00
Ntp2208
asg29
(dp2209
sbsS'TTreeDescender_UnknownMergeAsSelector'
p2210
(i__main__
ClassDefinition
p2211
(dp2212
g4
I1
sg5
I0
sg6
g2210
sg7
S'TTreeDescender'
p2213
sg9
I0
sg10
(lp2214
sg12
(lp2215
sg29
(dp2216
sbsS'TContingencyAttrClass'
p2217
(i__main__
ClassDefinition
p2218
(dp2219
g4
I1
sg5
I0
sg6
g2217
sg7
S'TContingencyClass'
p2220
sg9
I00
sg10
(lp2221
sg12
(lp2222
g814
ag819
ag825
ag830
ag835
ag840
asg29
(dp2223
sbsS'TPythonValueSpecial'
p2224
(i__main__
ClassDefinition
p2225
(dp2226
g4
I1
sg5
I0
sg6
g2224
sg7
S'TOrange'
p2227
sg9
I00
sg10
(lp2228
sg12
(lp2229
(S'int'
p2230
S'valueType'
p2231
S'value_type'
p2232
S'value type'
p2233
I0
I0
I01
Ntp2234
asg29
(dp2235
sbsS'TProbabilityEstimatorConstructor'
p2236
(i__main__
ClassDefinition
p2237
(dp2238
g4
I1
sg5
I0
sg6
g2236
sg7
S'TOrange'
p2239
sg9
I01
sg10
(lp2240
sg12
(lp2241
sg29
(dp2242
sbsS'TFloatVariable'
p2243
(i__main__
ClassDefinition
p2244
(dp2245
g4
I1
sg5
I0
sg6
g2243
sg7
S'TVariable'
p2246
sg9
I00
sg10
(lp2247
sg12
(lp2248
(S'float'
p2249
S'startValue'
p2250
S'start_value'
p2251
S'lowest value'
p2252
I0
I0
I01
Ntp2253
a(S'float'
p2254
S'endValue'
p2255
S'end_value'
p2256
S'highest value'
p2257
I0
I0
I01
Ntp2258
a(S'float'
p2259
S'stepValue'
p2260
S'step_value'
p2261
S'step'
p2262
I0
I0
I01
Ntp2263
a(S'int'
p2264
S'numberOfDecimals'
p2265
S'number_of_decimals'
p2266
S'number of digits after decimal point'
p2267
I0
I0
I01
Ntp2268
a(S'bool'
p2269
S'scientificFormat'
p2270
S'scientific_format'
p2271
S'use scientific format in output'
p2272
I0
I0
I01
Ntp2273
a(S'int'
p2274
S'adjustDecimals'
p2275
S'adjust_decimals'
p2276
S"adjust number of decimals according to the values converted (0 - no, 1 - yes, 2 - yes, but haven't seen any yet)"
p2277
I0
I0
I01
Ntp2278
ag641
ag645
ag649
ag654
ag659
ag664
ag669
asg29
(dp2279
sbsS'TImputer_random'
p2280
(i__main__
ClassDefinition
p2281
(dp2282
g4
I1
sg5
I0
sg6
g2280
sg7
S'TImputer'
p2283
sg9
I00
sg10
(lp2284
sg12
(lp2285
(S'bool'
p2286
S'imputeClass'
p2287
S'impute_class'
p2288
S'Tells whether to impute the class values, too (default: true)'
p2289
I0
I0
I01
Ntp2290
a(S'bool'
p2291
S'deterministic'
p2292
g2292
S"tells whether to initialize random by example's CRC (default: false)"
p2293
I0
I0
I01
Ntp2294
a(S'TDistributionList'
p2295
S'distributions'
p2296
g2296
S'probability functions'
p2297
I0
I0
I00
Ntp2298
asg29
(dp2299
sbsS'TFilter_hasMeta'
p2300
(i__main__
ClassDefinition
p2301
(dp2302
g4
I1
sg5
I0
sg6
g2300
sg7
S'TFilter'
p2303
sg9
I00
sg10
(lp2304
sg12
(lp2305
(S'int'
p2306
S'id'
p2307
g2307
S'meta attribute id'
p2308
I0
I0
I01
Ntp2309
ag259
ag263
asg29
(dp2310
sbsS'TProbabilityEstimatorConstructor_kernel'
p2311
(i__main__
ClassDefinition
p2312
(dp2313
g4
I1
sg5
I0
sg6
g2311
sg7
S'TProbabilityEstimatorConstructor'
p2314
sg9
I00
sg10
(lp2315
sg12
(lp2316
(S'float'
p2317
S'minImpact'
p2318
S'min_impact'
p2319
S'Minimal impact the point must have to be counted'
p2320
I0
I0
I01
Ntp2321
a(S'float'
p2322
S'smoothing'
p2323
g2323
S'Smoothing factor'
p2324
I0
I0
I01
Ntp2325
a(S'int'
p2326
S'nPoints'
p2327
S'n_points'
p2328
S'Number of points for curve (negative means the given number of points is inserted in each interval)'
p2329
I0
I0
I01
Ntp2330
asg29
(dp2331
sbsS'TSubsetsGenerator_constant'
p2332
(i__main__
ClassDefinition
p2333
(dp2334
g4
I1
sg5
I0
sg6
g2332
sg7
S'TSubsetsGenerator'
p2335
sg9
I00
sg10
(lp2336
sg12
(lp2337
(S'TVarList'
p2338
S'constant'
p2339
g2339
S'a subset that is returned (once!)'
p2340
I0
I0
I00
Ntp2341
a(S'TVarList'
p2342
S'varList'
p2343
S'var_list'
p2344
S'a set of attributes from which subsets are generated'
p2345
I0
I0
I00
Ntp2346
asg29
(dp2347
sbsS'TDefaultClassifier'
p2348
(i__main__
ClassDefinition
p2349
(dp2350
g4
I1
sg5
I0
sg6
g2348
sg7
S'TClassifier'
p2351
sg9
I00
sg10
(lp2352
sg12
(lp2353
(S'TValue'
p2354
S'defaultVal'
p2355
S'default_val'
p2356
S'default prediction'
p2357
I0
I0
I01
Ntp2358
a(S'TDistribution'
p2359
S'defaultDistribution'
p2360
S'default_distribution'
p2361
S'default distribution'
p2362
I0
I0
I00
Ntp2363
ag790
ag795
asg29
(dp2364
sbsS'TTreeSplitConstructor_Measure'
p2365
(i__main__
ClassDefinition
p2366
(dp2367
g4
I1
sg5
I0
sg6
g2365
sg7
S'TTreeSplitConstructor'
p2368
sg9
I01
sg10
(lp2369
sg12
(lp2370
(S'TMeasureAttribute'
p2371
S'measure'
p2372
g2372
S'attribute quality measure'
p2373
I0
I0
I00
Ntp2374
a(S'float'
p2375
S'worstAcceptable'
p2376
S'worst_acceptable'
p2377
S'the worst acceptable quality of the attribute'
p2378
I0
I0
I01
Ntp2379
ag1693
asg29
(dp2380
sbsS'TTreeNode'
p2381
(i__main__
ClassDefinition
p2382
(dp2383
g4
I1
sg5
I0
sg6
g2381
sg7
S'TOrange'
p2384
sg9
I00
sg10
(lp2385
sg12
(lp2386
(S'TClassifier'
p2387
S'nodeClassifier'
p2388
S'node_classifier'
p2389
S'classifies an example'
p2390
I0
I0
I00
Ntp2391
a(S'TDistribution'
p2392
S'distribution'
p2393
g2393
S'distribution of classes in the node'
p2394
I0
I0
I00
Ntp2395
a(S'TDomainContingency'
p2396
S'contingency'
p2397
g2397
S'domain contingency for examples in the node'
p2398
I0
I0
I00
Ntp2399
a(S'TExampleGenerator'
p2400
S'examples'
p2401
g2401
S'learning examples (if stored)'
p2402
I0
I0
I00
Ntp2403
a(S'int'
p2404
S'weightID'
p2405
S'weight_ID'
p2406
S'weightID used to construct this node'
p2407
I0
I0
I01
Ntp2408
a(S'TClassifier'
p2409
S'branchSelector'
p2410
S'branch_selector'
p2411
S'classifier that select a branch for an example'
p2412
I0
I0
I00
Ntp2413
a(S'TTreeNodeList'
p2414
S'branches'
p2415
g2415
S'classifiers presenting the branches'
p2416
I0
I0
I00
Ntp2417
a(S'TStringList'
p2418
S'branchDescriptions'
p2419
S'branch_descriptions'
p2420
S'descriptions of branches'
p2421
I0
I0
I00
Ntp2422
a(S'TDiscDistribution'
p2423
S'branchSizes'
p2424
S'branch_sizes'
p2425
S'numbers of examples in branches'
p2426
I0
I0
I00
Ntp2427
asg29
(dp2428
sbsS'TTransformValue_IsDefined'
p2429
(i__main__
ClassDefinition
p2430
(dp2431
g4
I1
sg5
I0
sg6
g2429
sg7
S'TTransformValue'
p2432
sg9
I00
sg10
(lp2433
sg12
(lp2434
g318
asg29
(dp2435
sbsS'TFilter_hasClassValue'
p2436
(i__main__
ClassDefinition
p2437
(dp2438
g4
I1
sg5
I0
sg6
g2436
sg7
S'TFilter'
p2439
sg9
I00
sg10
(lp2440
sg12
(lp2441
g259
ag263
asg29
(dp2442
sbsS'TStopDistributionClustering_binary'
p2443
(i__main__
ClassDefinition
p2444
(dp2445
g4
I1
sg5
I0
sg6
g2443
sg7
S'TStopDistributionClustering'
p2446
sg9
I00
sg10
(lp2447
sg12
(lp2448
sg29
(dp2449
sbsS'TRuleFinder'
p2450
(i__main__
ClassDefinition
p2451
(dp2452
g4
I1
sg5
I0
sg6
g2450
sg7
S'TOrange'
p2453
sg9
I01
sg10
(lp2454
sg12
(lp2455
g1894
ag1897
asg29
(dp2456
sbsS'TClassifierByExampleTable'
p2457
(i__main__
ClassDefinition
p2458
(dp2459
g4
I1
sg5
I0
sg6
g2457
sg7
S'TClassifierFD'
p2460
sg9
I00
sg10
(lp2461
sg12
(lp2462
(S'TExampleTable'
p2463
S'sortedExamples'
p2464
S'sorted_examples'
p2465
S'a table of examples'
p2466
I0
I0
I00
Ntp2467
a(S'bool'
p2468
S'containsUnknowns'
p2469
S'contains_unknowns'
p2470
S'if true, the table contains unknown values'
p2471
I0
I0
I01
Ntp2472
a(S'TClassifier'
p2473
S'classifierForUnknown'
p2474
S'classifier_for_unknown'
p2475
S'a classifier for unknown cases'
p2476
I0
I0
I00
Ntp2477
a(S'TEFMDataDescription'
p2478
S'dataDescription'
p2479
S'data_description'
p2480
S'data description'
p2481
I0
I0
I00
Ntp2482
ag900
ag790
ag795
asg29
(dp2483
sbsS'TIMByRowsPreprocessor'
p2484
(i__main__
ClassDefinition
p2485
(dp2486
g4
I1
sg5
I0
sg6
g2484
sg7
S'TOrange'
p2487
sg9
I01
sg10
(lp2488
sg12
(lp2489
sg29
(dp2490
sbsS'TImputerConstructor_maximal'
p2491
(i__main__
ClassDefinition
p2492
(dp2493
g4
I1
sg5
I0
sg6
g2491
sg7
S'TImputerConstructor'
p2494
sg9
I00
sg10
(lp2495
sg12
(lp2496
g1483
asg29
(dp2497
sbsS'TRemoveRedundantOneValue'
p2498
(i__main__
ClassDefinition
p2499
(dp2500
g4
I1
sg5
I0
sg6
g2498
sg7
S'TRemoveRedundant'
p2501
sg9
I00
sg10
(lp2502
sg12
(lp2503
(S'bool'
p2504
S'onData'
p2505
S'on_data'
p2506
S'observe the actual number of value on the data (not on attribute definitions)'
p2507
I0
I0
I01
Ntp2508
ag545
asg29
(dp2509
sbsS'TDistributionAssessor_Relief'
p2510
(i__main__
ClassDefinition
p2511
(dp2512
g4
I1
sg5
I0
sg6
g2510
sg7
S'TDistributionAssessor'
p2513
sg9
I00
sg10
(lp2514
sg12
(lp2515
sg29
(dp2516
sbsS'TRuleBeamCandidateSelector'
p2517
(i__main__
ClassDefinition
p2518
(dp2519
g4
I1
sg5
I0
sg6
g2517
sg7
S'TOrange'
p2520
sg9
I01
sg10
(lp2521
sg12
(lp2522
sg29
(dp2523
sbsS'TSubsetsGenerator_minMaxSize'
p2524
(i__main__
ClassDefinition
p2525
(dp2526
g4
I1
sg5
I0
sg6
g2524
sg7
S'TSubsetsGenerator'
p2527
sg9
I00
sg10
(lp2528
sg12
(lp2529
(S'int'
p2530
S'min'
p2531
g2531
S'minimal subset size'
p2532
I0
I0
I01
Ntp2533
a(S'int'
p2534
S'max'
p2535
g2535
S'maximal subset size'
p2536
I0
I0
I01
Ntp2537
ag2346
asg29
(dp2538
sbsS'TContingencyClass'
p2539
(i__main__
ClassDefinition
p2540
(dp2541
g4
I1
sg5
I0
sg6
g2539
sg7
S'TContingency'
p2542
sg9
I01
sg10
(lp2543
sg12
(lp2544
g814
ag819
ag825
ag830
ag835
ag840
asg29
(dp2545
sbsS'TAssociationClassifier'
p2546
(i__main__
ClassDefinition
p2547
(dp2548
g4
I1
sg5
I0
sg6
g2546
sg7
S'TClassifierFD'
p2549
sg9
I00
sg10
(lp2550
sg12
(lp2551
(S'TAssociationRules'
p2552
S'rules'
p2553
g2553
S'association rules'
p2554
I0
I0
I00
Ntp2555
a(S'int'
p2556
S'voteWeight'
p2557
S'vote_weight'
p2558
S'vote weight (s=support, c=confidence, p=product)'
p2559
I0
I0
I01
Ntp2560
ag900
ag790
ag795
asg29
(dp2561
sbsS'TDomainDistributions'
p2562
(i__main__
ClassDefinition
p2563
(dp2564
g4
I1
sg5
I0
sg6
g2562
sg7
S'TOrange'
p2565
sg9
I00
sg10
(lp2566
sg12
(lp2567
sg29
(dp2568
sbsS'TSVMLearnerSparse'
p2569
(i__main__
ClassDefinition
p2570
(dp2571
g4
I1
sg5
I0
sg6
g2569
sg7
S'TSVMLearner'
p2572
sg9
I00
sg10
(lp2573
sg12
(lp2574
(S'bool'
p2575
S'useNonMeta'
p2576
S'use_non_meta'
p2577
S'include non meta attributes in the learning process'
p2578
I0
I0
I01
Ntp2579
ag2011
ag2016
ag2020
ag2024
ag2028
ag2032
ag2036
ag2040
ag2044
ag2047
ag2051
ag2055
ag2059
ag2064
ag47
asg29
(dp2580
sbsS'TSubsetsGenerator_constant_iterator'
p2581
(i__main__
ClassDefinition
p2582
(dp2583
g4
I1
sg5
I0
sg6
g2581
sg7
S'TSubsetsGenerator_iterator'
p2584
sg9
I00
sg10
(lp2585
sg12
(lp2586
(S'TVarList'
p2587
S'constant'
p2588
g2588
S'a subset that is returned (once!)'
p2589
I0
I0
I00
Ntp2590
a(S'bool'
p2591
S'moreToCome'
p2592
S'more_to_come'
p2593
g1294
I0
I0
I01
Ntp2594
ag192
asg29
(dp2595
sbsS'TExampleDistConstructor'
p2596
(i__main__
ClassDefinition
p2597
(dp2598
g4
I1
sg5
I0
sg6
g2596
sg7
S'TOrange'
p2599
sg9
I01
sg10
(lp2600
sg12
(lp2601
sg29
(dp2602
sbsS'TIMByIMByRows'
p2603
(i__main__
ClassDefinition
p2604
(dp2605
g4
I1
sg5
I0
sg6
g2603
sg7
S'TIMConstructor'
p2606
sg9
I00
sg10
(lp2607
sg12
(lp2608
(S'bool'
p2609
S'recordRowExamples'
p2610
S'record_row_examples'
p2611
S'enables creation of rowExample list'
p2612
I0
I0
I01
Ntp2613
asg29
(dp2614
sbsS'TDiscrete2Continuous'
p2615
(i__main__
ClassDefinition
p2616
(dp2617
g4
I1
sg5
I0
sg6
g2615
sg7
S'TTransformValue'
p2618
sg9
I00
sg10
(lp2619
sg12
(lp2620
(S'int'
p2621
S'value'
p2622
g2622
S'target value'
p2623
I0
I0
I01
Ntp2624
a(S'bool'
p2625
S'invert'
p2626
g2626
S'give 1.0 to values not equal to the target'
p2627
I0
I0
I01
Ntp2628
a(S'bool'
p2629
S'zeroBased'
p2630
S'zero_based'
p2631
S'if true (default) it gives values 0.0 and 1.0; else -1.0 and 1.0, 0.0 for undefined'
p2632
I0
I0
I01
Ntp2633
ag318
asg29
(dp2634
sbsS'TColumnAssessor_m'
p2635
(i__main__
ClassDefinition
p2636
(dp2637
g4
I1
sg5
I0
sg6
g2635
sg7
S'TColumnAssessor'
p2638
sg9
I00
sg10
(lp2639
sg12
(lp2640
(S'float'
p2641
g991
g991
S'm for m-estimate'
p2642
I0
I0
I01
Ntp2643
asg29
(dp2644
sbsS'TImputer_defaults'
p2645
(i__main__
ClassDefinition
p2646
(dp2647
g4
I1
sg5
I0
sg6
g2645
sg7
S'TImputer'
p2648
sg9
I00
sg10
(lp2649
sg12
(lp2650
(S'TExample'
p2651
S'defaults'
p2652
g2652
S'values that are to be inserted instead of missing ones'
p2653
I0
I0
I00
Ntp2654
asg29
(dp2655
sbsS'TContingency'
p2656
(i__main__
ClassDefinition
p2657
(dp2658
g4
I1
sg5
I0
sg6
g2656
sg7
S'TOrange'
p2659
sg9
I00
sg10
(lp2660
sg12
(lp2661
g814
ag819
ag825
ag830
ag835
ag840
asg29
(dp2662
sbsS'TStringValue'
p2663
(i__main__
ClassDefinition
p2664
(dp2665
g4
I1
sg5
I0
sg6
g2663
sg7
S'TSomeValue'
p2666
sg9
I00
sg10
(lp2667
sg12
(lp2668
sg29
(dp2669
sbsS'TClassifierGenerator'
p2670
(i__main__
ClassDefinition
p2671
(dp2672
g4
I1
sg5
I0
sg6
g2670
sg7
S'TExampleGenerator'
p2673
sg9
I00
sg10
(lp2674
sg12
(lp2675
(S'TClassifier'
p2676
S'classify'
p2677
g2677
S'classifier'
p2678
I0
I0
I00
Ntp2679
ag121
ag125
asg29
(dp2680
sbsS'TRuleDataStoppingCriteria_Python'
p2681
(i__main__
ClassDefinition
p2682
(dp2683
g4
I1
sg5
I0
sg6
g2681
sg7
S'TRuleDataStoppingCriteria'
p2684
sg9
I00
sg10
(lp2685
sg12
(lp2686
sg29
(dp2687
sbsS'TTreeDescender_UnknownToCommonSelector'
p2688
(i__main__
ClassDefinition
p2689
(dp2690
g4
I1
sg5
I0
sg6
g2688
sg7
g2213
sg9
I0
sg10
(lp2691
sg12
(lp2692
sg29
(dp2693
sbsS'TPreprocessIM'
p2694
(i__main__
ClassDefinition
p2695
(dp2696
g4
I1
sg5
I0
sg6
g2694
sg7
S'TOrange'
p2697
sg9
I01
sg10
(lp2698
sg12
(lp2699
sg29
(dp2700
sbsS'TRuleEvaluator_Laplace'
p2701
(i__main__
ClassDefinition
p2702
(dp2703
g4
I1
sg5
I0
sg6
g2701
sg7
S'TRuleEvaluator'
p2704
sg9
I00
sg10
(lp2705
sg12
(lp2706
sg29
(dp2707
sbsS'TColumnAssessor_N'
p2708
(i__main__
ClassDefinition
p2709
(dp2710
g4
I1
sg5
I0
sg6
g2708
sg7
S'TColumnAssessor'
p2711
sg9
I00
sg10
(lp2712
sg12
(lp2713
sg29
(dp2714
sbsS'TRuleEvaluator_mEVC'
p2715
(i__main__
ClassDefinition
p2716
(dp2717
g4
I1
sg5
I0
sg6
g2715
sg7
S'TRuleEvaluator'
p2718
sg9
I00
sg10
(lp2719
sg12
(lp2720
(S'float'
p2721
g991
g991
S'Parameter m for m-estimate after EVC correction'
p2722
I0
I0
I01
Ntp2723
a(S'TEVDistGetter'
p2724
S'evDistGetter'
p2725
S'ev_dist_getter'
p2726
S'get EVC distribution for chi correction'
p2727
I0
I0
I00
Ntp2728
a(S'TVariable'
p2729
S'probVar'
p2730
S'prob_var'
p2731
S'probability coverage variable (meta usually)'
p2732
I0
I0
I00
Ntp2733
a(S'TRuleValidator'
p2734
S'validator'
p2735
g2735
S'rule validator for best rule'
p2736
I0
I0
I00
Ntp2737
a(S'int'
p2738
S'min_improved'
p2739
g2739
S'minimal number of improved examples'
p2740
I0
I0
I01
Ntp2741
a(S'float'
p2742
S'min_improved_perc'
p2743
g2743
S'minimal percentage of improved examples'
p2744
I0
I0
I01
Ntp2745
a(S'TRule'
p2746
S'bestRule'
p2747
S'best_rule'
p2748
S'best rule found and evaluated given conditions (min_improved, validator)'
p2749
I0
I0
I00
Ntp2750
a(S'float'
p2751
S'ruleAlpha'
p2752
S'rule_alpha'
p2753
S"minimal 'true' rule significance"
p2754
I0
I0
I01
Ntp2755
a(S'float'
p2756
S'attributeAlpha'
p2757
S'attribute_alpha'
p2758
S'minimal attribute significance'
p2759
I0
I0
I01
Ntp2760
a(S'bool'
p2761
S'returnExpectedProb'
p2762
S'return_expected_prob'
p2763
S'if true, evaluator returns expected class probability, if false, current class probability'
p2764
I0
I0
I01
Ntp2765
a(S'int'
p2766
S'optimismReduction'
p2767
S'optimism_reduction'
p2768
S'to select optimstic (0), pessimistic (1) or EVC (2) evaluation'
p2769
I0
I0
I01
Ntp2770
asg29
(dp2771
sbsS'TExample'
p2772
(i__main__
ClassDefinition
p2773
(dp2774
g4
I1
sg5
I0
sg6
g2772
sg7
S'TOrange'
p2775
sg9
I00
sg10
(lp2776
sg12
(lp2777
(S'TDomain'
p2778
S'domain'
p2779
g2779
S"Example's domain"
p2780
I01
I0
I00
Ntp2781
a(S'int'
p2782
S'id'
p2783
g2783
g1294
I0
I0
I01
Ntp2784
asg29
(dp2785
sbsS'TOrdinal2Continuous'
p2786
(i__main__
ClassDefinition
p2787
(dp2788
g4
I1
sg5
I0
sg6
g2786
sg7
S'TTransformValue'
p2789
sg9
I00
sg10
(lp2790
sg12
(lp2791
(S'float'
p2792
S'factor'
p2793
g2793
S'number of values'
p2794
I0
I0
I01
Ntp2795
ag318
asg29
(dp2796
sbsS'TExampleDistBySorting'
p2797
(i__main__
ClassDefinition
p2798
(dp2799
g4
I1
sg5
I0
sg6
g2797
sg7
S'TExampleDistConstructor'
p2800
sg9
I00
sg10
(lp2801
sg12
(lp2802
sg29
(dp2803
sbsS'TValueFilter_discrete'
p2804
(i__main__
ClassDefinition
p2805
(dp2806
g4
I1
sg5
I0
sg6
g2804
sg7
S'TValueFilter'
p2807
sg9
I00
sg10
(lp2808
sg12
(lp2809
(S'TValueList'
p2810
S'values'
p2811
g2811
S'accepted values'
p2812
I0
I0
I00
Ntp2813
a(S'bool'
p2814
S'negate'
p2815
g2815
S'negate'
p2816
I0
I0
I01
Ntp2817
a(S'int'
p2818
S'position'
p2819
g2819
S"attribute's position in domain"
p2820
I0
I0
I01
Ntp2821
a(S'int'
p2822
S'acceptSpecial'
p2823
S'accept_special'
p2824
S'tells whether a special value (DK, DC...) is accepted (1), rejected (0) or ignored (-1)'
p2825
I0
I0
I01
Ntp2826
asg29
(dp2827
sbsS'TAssociationRulesInducer'
p2828
(i__main__
ClassDefinition
p2829
(dp2830
g4
I1
sg5
I0
sg6
g2828
sg7
S'TOrange'
p2831
sg9
I00
sg10
(lp2832
sg12
(lp2833
(S'int'
p2834
S'maxItemSets'
p2835
S'max_item_sets'
p2836
S'maximal number of itemsets (increase if you want)'
p2837
I0
I0
I01
Ntp2838
a(S'float'
p2839
S'confidence'
p2840
g2840
S'required confidence'
p2841
I0
I0
I01
Ntp2842
a(S'float'
p2843
S'support'
p2844
g2844
S'required support'
p2845
I0
I0
I01
Ntp2846
a(S'bool'
p2847
S'classificationRules'
p2848
S'classification_rules'
p2849
S'if true, rules will have the class and only the class attribute on the right-hand side'
p2850
I0
I0
I01
Ntp2851
a(S'bool'
p2852
S'storeExamples'
p2853
S'store_examples'
p2854
S'if true, each rule is going to have tables with references to examples which match its left side or both sides'
p2855
I0
I0
I01
Ntp2856
asg29
(dp2857
sbsS'TPreprocessor_addMissingClasses'
p2858
(i__main__
ClassDefinition
p2859
(dp2860
g4
I1
sg5
I0
sg6
g2858
sg7
S'TPreprocessor'
p2861
sg9
I00
sg10
(lp2862
sg12
(lp2863
(S'float'
p2864
S'proportion'
p2865
g2865
S'proportion of removed class values'
p2866
I0
I0
I01
Ntp2867
a(S'int'
p2868
S'specialType'
p2869
S'special_type'
p2870
S'special value type (1=DC, 2=DK)'
p2871
I0
I0
I01
Ntp2872
a(S'TRandomGenerator'
p2873
S'randomGenerator'
p2874
S'random_generator'
p2875
S'random number generator'
p2876
I0
I0
I00
Ntp2877
asg29
(dp2878
sbsS'TBasketExampleGenerator'
p2879
(i__main__
ClassDefinition
p2880
(dp2881
g4
I1
sg5
I0
sg6
g2879
sg7
S'TFileExampleGenerator'
p2882
sg9
I00
sg10
(lp2883
sg12
(lp2884
g736
ag741
ag746
ag121
ag125
asg29
(dp2885
sbsS'TRuleEvaluator_Entropy'
p2886
(i__main__
ClassDefinition
p2887
(dp2888
g4
I1
sg5
I0
sg6
g2886
sg7
S'TRuleEvaluator'
p2889
sg9
I00
sg10
(lp2890
sg12
(lp2891
sg29
(dp2892
sbsS'TExamplesDistance_DTW'
p2893
(i__main__
ClassDefinition
p2894
(dp2895
g4
I1
sg5
I0
sg6
g2893
sg7
S'TExamplesDistance_Normalized'
p2896
sg9
I00
sg10
(lp2897
sg12
(lp2898
(S'int'
p2899
S'dtwDistance'
p2900
S'dtw_distance'
p2901
S' distance measure between individual attributes (default: square of difference)'
p2902
I0
I0
I01
S'ExamplesDistance_DTW_DistanceType'
p2903
tp2904
ag136
ag140
ag144
ag148
ag153
ag157
ag162
asg29
(dp2905
S'DistanceType'
p2906
(lp2907
(S'Euclidean'
p2908
I0
tp2909
a(S'Derivative'
p2910
I1
tp2911
assbsS'TTreeExampleSplitter_UnknownsToRandom'
p2912
(i__main__
ClassDefinition
p2913
(dp2914
g4
I1
sg5
I0
sg6
g2912
sg7
S'TTreeExampleSplitter'
p2915
sg9
I00
sg10
(lp2916
sg12
(lp2917
sg29
(dp2918
sbsS'TTreeSplitConstructor_Combined'
p2919
(i__main__
ClassDefinition
p2920
(dp2921
g4
I1
sg5
I0
sg6
g2919
sg7
S'TTreeSplitConstructor'
p2922
sg9
I00
sg10
(lp2923
sg12
(lp2924
(S'TTreeSplitConstructor'
p2925
S'discreteSplitConstructor'
p2926
S'discrete_split_constructor'
p2927
S'split constructor for discrete attributes'
p2928
I0
I0
I00
Ntp2929
a(S'TTreeSplitConstructor'
p2930
S'continuousSplitConstructor'
p2931
S'continuous_split_constructor'
p2932
S'split constructor for continuous attributes'
p2933
I0
I0
I00
Ntp2934
ag1693
asg29
(dp2935
sbsS'TExamplesDistanceConstructor_DTW'
p2936
(i__main__
ClassDefinition
p2937
(dp2938
g4
I1
sg5
I0
sg6
g2936
sg7
S'TExamplesDistanceConstructor_Normalized'
p2939
sg9
I00
sg10
(lp2940
sg12
(lp2941
(S'int'
p2942
S'dtwDistance'
p2943
S'dtw_distance'
p2944
S'distance measure between individual attributes (default: square of difference)'
p2945
I0
I0
I01
Ntp2946
ag96
ag101
ag106
asg29
(dp2947
sbsS'TStopIMClusteringByAssessor_n'
p2948
(i__main__
ClassDefinition
p2949
(dp2950
g4
I1
sg5
I0
sg6
g2948
sg7
S'TStopIMClusteringByAssessor'
p2951
sg9
I00
sg10
(lp2952
sg12
(lp2953
(S'int'
p2954
g944
g944
S'number of clusters'
p2955
I0
I0
I01
Ntp2956
asg29
(dp2957
sbsS'TRandomGenerator'
p2958
(i__main__
ClassDefinition
p2959
(dp2960
g4
I1
sg5
I0
sg6
g2958
sg7
S'TOrange'
p2961
sg9
I00
sg10
(lp2962
sg12
(lp2963
(S'int'
p2964
S'initseed'
p2965
g2965
S'initial random seed'
p2966
I0
I0
I01
Ntp2967
a(S'int'
p2968
S'uses'
p2969
g2969
S'#times a number was returned'
p2970
I0
I0
I01
Ntp2971
asg29
(dp2972
sbsS'TPreprocessor_imputeByLearner'
p2973
(i__main__
ClassDefinition
p2974
(dp2975
g4
I1
sg5
I0
sg6
g2973
sg7
S'TPreprocessor'
p2976
sg9
I00
sg10
(lp2977
sg12
(lp2978
(S'TLearner'
p2979
S'learner'
p2980
g2980
S'learner used for inducing a model for imputation'
p2981
I0
I0
I00
Ntp2982
asg29
(dp2983
sbsS'TLogRegLearner'
p2984
(i__main__
ClassDefinition
p2985
(dp2986
g4
I1
sg5
I0
sg6
g2984
sg7
S'TLearner'
p2987
sg9
I00
sg10
(lp2988
sg12
(lp2989
(S'TLogRegFitter'
p2990
S'fitter'
p2991
g2991
S'fits beta coefficients and calculates beta errors.'
p2992
I0
I0
I00
Ntp2993
a(S'TImputerConstructor'
p2994
S'imputerConstructor'
p2995
S'imputer_constructor'
p2996
S'if present, it constructs an imputer for unknown values'
p2997
I0
I0
I00
Ntp2998
a(S'TDomainContinuizer'
p2999
S'domainContinuizer'
p3000
S'domain_continuizer'
p3001
S'if present, it constructs continuous domain if needed; if absent, default is used'
p3002
I0
I0
I00
Ntp3003
ag47
asg29
(dp3004
sbsS'TMeasureAttribute_IM'
p3005
(i__main__
ClassDefinition
p3006
(dp3007
g4
I1
sg5
I0
sg6
g3005
sg7
S'TMeasureAttribute'
p3008
sg9
I00
sg10
(lp3009
sg12
(lp3010
(S'TIMConstructor'
p3011
S'IMconstructor'
p3012
g3012
S'incompatibility matrix constructor'
p3013
I0
I0
I00
Ntp3014
a(S'TColumnAssessor'
p3015
S'columnAssessor'
p3016
S'column_assessor'
p3017
S'column quality assessor'
p3018
I0
I0
I00
Ntp3019
ag461
ag466
ag471
ag476
asg29
(dp3020
sbsS'TRuleStoppingCriteria_Python'
p3021
(i__main__
ClassDefinition
p3022
(dp3023
g4
I1
sg5
I0
sg6
g3021
sg7
S'TRuleStoppingCriteria'
p3024
sg9
I00
sg10
(lp3025
sg12
(lp3026
sg29
(dp3027
sbsS'TRemoveUnusedValues'
p3028
(i__main__
ClassDefinition
p3029
(dp3030
g4
I1
sg5
I0
sg6
g3028
sg7
S'TOrange'
p3031
sg9
I00
sg10
(lp3032
sg12
(lp3033
(S'bool'
p3034
S'removeOneValued'
p3035
S'remove_one_valued'
p3036
S'if true (default is false), one valued attributes are also removed'
p3037
I0
I0
I01
Ntp3038
asg29
(dp3039
sbsS'TExamplesDistance_Normalized'
p3040
(i__main__
ClassDefinition
p3041
(dp3042
g4
I1
sg5
I0
sg6
g3040
sg7
S'TExamplesDistance'
p3043
sg9
I01
sg10
(lp3044
sg12
(lp3045
g136
ag140
ag144
ag148
ag153
ag157
ag162
asg29
(dp3046
sbsS'TPreprocessor_take'
p3047
(i__main__
ClassDefinition
p3048
(dp3049
g4
I1
sg5
I0
sg6
g3047
sg7
S'TPreprocessor'
p3050
sg9
I00
sg10
(lp3051
sg12
(lp3052
(S'TVariableFilterMap'
p3053
S'values'
p3054
g3054
S'variable-filter pairs'
p3055
I0
I0
I00
Ntp3056
a(S'bool'
p3057
S'conjunction'
p3058
g3058
S'decides whether to take conjunction or disjunction of values'
p3059
I0
I0
I01
Ntp3060
asg29
(dp3061
sbsS'TRuleFinder_Python'
p3062
(i__main__
ClassDefinition
p3063
(dp3064
g4
I1
sg5
I0
sg6
g3062
sg7
S'TRuleFinder'
p3065
sg9
I00
sg10
(lp3066
sg12
(lp3067
g1894
ag1897
asg29
(dp3068
sbsS'TTabDelimExampleGenerator'
p3069
(i__main__
ClassDefinition
p3070
(dp3071
g4
I1
sg5
I0
sg6
g3069
sg7
S'TFileExampleGenerator'
p3072
sg9
I00
sg10
(lp3073
sg12
(lp3074
(S'TIntList'
p3075
S'attributeTypes'
p3076
S'attribute_types'
p3077
S'types of attributes (-1 normal, 0 skip, <-1 = meta ID)'
p3078
I0
I0
I00
Ntp3079
a(S'int'
p3080
S'classPos'
p3081
S'class_pos'
p3082
S'position of the class attribute'
p3083
I0
I0
I01
Ntp3084
a(S'TIntList'
p3085
S'classPoses'
p3086
S'class_poses'
p3087
S'positions of class attributes if there are multiple; otherwise None'
p3088
I0
I0
I00
Ntp3089
a(S'int'
p3090
S'basketPos'
p3091
S'basket_pos'
p3092
S'position of the (virtual) basket attribute'
p3093
I0
I0
I01
Ntp3094
a(S'int'
p3095
S'headerLines'
p3096
S'header_lines'
p3097
S'number of header lines (3 for .tab, 1 for .txt)'
p3098
I0
I0
I01
Ntp3099
a(S'bool'
p3100
S'csv'
p3101
g3101
S"also allow ',' as a separator"
p3102
I0
I0
I01
Ntp3103
a(S'TBasketFeeder'
p3104
S'basketFeeder'
p3105
S'basket_feeder'
p3106
S'takes care of inserting the meta attributes from the basket if need be'
p3107
I0
I0
I00
Ntp3108
ag736
ag741
ag746
ag121
ag125
asg29
(dp3109
sbsS'TkNNLearner'
p3110
(i__main__
ClassDefinition
p3111
(dp3112
g4
I1
sg5
I0
sg6
g3110
sg7
S'TLearner'
p3113
sg9
I00
sg10
(lp3114
sg12
(lp3115
(S'float'
p3116
g987
g987
S'number of neighbours (0 for sqrt of #examples)'
p3117
I0
I0
I01
Ntp3118
a(S'bool'
p3119
S'rankWeight'
p3120
S'rank_weight'
p3121
S'enable weighting by ranks'
p3122
I0
I0
I01
Ntp3123
a(S'TExamplesDistanceConstructor'
p3124
S'distanceConstructor'
p3125
S'distance_constructor'
p3126
S'metrics'
p3127
I0
I0
I00
Ntp3128
ag47
asg29
(dp3129
sbsS'TDistributionAssessor_mf'
p3130
(i__main__
ClassDefinition
p3131
(dp3132
g4
I1
sg5
I0
sg6
g3130
sg7
S'TDistributionAssessor'
p3133
sg9
I00
sg10
(lp3134
sg12
(lp3135
(S'float'
p3136
g991
g991
S'm for m-estimate'
p3137
I0
I0
I01
Ntp3138
asg29
(dp3139
sbsS'TEFMDataDescription'
p3140
(i__main__
ClassDefinition
p3141
(dp3142
g4
I1
sg5
I0
sg6
g3140
sg7
S'TOrange'
p3143
sg9
I00
sg10
(lp3144
S'domainDistributions'
p3145
asg12
(lp3146
(S'TDomain'
p3147
S'domain'
p3148
g3148
S'domain'
p3149
I01
I0
I00
Ntp3150
asg29
(dp3151
sbsS'TClassifierFD'
p3152
(i__main__
ClassDefinition
p3153
(dp3154
g4
I1
sg5
I0
sg6
g3152
sg7
S'TClassifier'
p3155
sg9
I00
sg10
(lp3156
sg12
(lp3157
g900
ag790
ag795
asg29
(dp3158
sbsS'TTreeDescender_UnknownToCommonBranch'
p3159
(i__main__
ClassDefinition
p3160
(dp3161
g4
I1
sg5
I0
sg6
g3159
sg7
g2213
sg9
I0
sg10
(lp3162
sg12
(lp3163
sg29
(dp3164
sbsS'TStopIMClusteringByAssessor_binary'
p3165
(i__main__
ClassDefinition
p3166
(dp3167
g4
I1
sg5
I0
sg6
g3165
sg7
S'TStopIMClusteringByAssessor'
p3168
sg9
I00
sg10
(lp3169
sg12
(lp3170
sg29
(dp3171
sbsS'TExamplesDistanceConstructor'
p3172
(i__main__
ClassDefinition
p3173
(dp3174
g4
I1
sg5
I0
sg6
g3172
sg7
S'TOrange'
p3175
sg9
I01
sg10
(lp3176
sg12
(lp3177
g106
asg29
(dp3178
sbsS'TRuleBeamCandidateSelector_Python'
p3179
(i__main__
ClassDefinition
p3180
(dp3181
g4
I1
sg5
I0
sg6
g3179
sg7
S'TRuleBeamCandidateSelector'
p3182
sg9
I00
sg10
(lp3183
sg12
(lp3184
sg29
(dp3185
sbsS'TEntropyDiscretization'
p3186
(i__main__
ClassDefinition
p3187
(dp3188
g4
I1
sg5
I0
sg6
g3186
sg7
S'TDiscretization'
p3189
sg9
I00
sg10
(lp3190
sg12
(lp3191
(S'int'
p3192
S'maxNumberOfIntervals'
p3193
S'max_number_of_intervals'
p3194
S'maximal number of intervals; default = 0 (no limits)'
p3195
I0
I0
I01
Ntp3196
a(S'bool'
p3197
S'forceAttribute'
p3198
S'force_attribute'
p3199
S'minimal number of intervals; default = 0 (no limits)'
p3200
I0
I0
I01
Ntp3201
asg29
(dp3202
sbsS'TIMBySorting'
p3203
(i__main__
ClassDefinition
p3204
(dp3205
g4
I1
sg5
I0
sg6
g3203
sg7
S'TIMConstructor'
p3206
sg9
I00
sg10
(lp3207
sg12
(lp3208
g2613
asg29
(dp3209
sbsS'TImputerConstructor_asValue'
p3210
(i__main__
ClassDefinition
p3211
(dp3212
g4
I1
sg5
I0
sg6
g3210
sg7
S'TImputerConstructor'
p3213
sg9
I00
sg10
(lp3214
sg12
(lp3215
g1483
asg29
(dp3216
sbsS'TExampleDistVector'
p3217
(i__main__
ClassDefinition
p3218
(dp3219
g4
I1
sg5
I0
sg6
g3217
sg7
S'TOrange'
p3220
sg9
I00
sg10
(lp3221
sg12
(lp3222
sg29
(dp3223
sbsS'TIMClustering'
p3224
(i__main__
ClassDefinition
p3225
(dp3226
g4
I1
sg5
I0
sg6
g3224
sg7
S'TOrange'
p3227
sg9
I00
sg10
(lp3228
sg12
(lp3229
(S'TIM'
p3230
S'im'
p3231
g3231
S'incompatibilty matrix'
p3232
I0
I0
I00
Ntp3233
a(S'TIntList'
p3234
S'clusters'
p3235
g3235
S'cluster index for each matrix column'
p3236
I0
I0
I00
Ntp3237
a(S'int'
p3238
S'maxCluster'
p3239
S'max_cluster'
p3240
S'the highest cluster index'
p3241
I0
I0
I01
Ntp3242
a(S'float'
p3243
S'quality'
p3244
g3244
S'cluster quality'
p3245
I0
I0
I01
Ntp3246
asg29
(dp3247
sbsS'TRuleStoppingCriteria'
p3248
(i__main__
ClassDefinition
p3249
(dp3250
g4
I1
sg5
I0
sg6
g3248
sg7
S'TOrange'
p3251
sg9
I01
sg10
(lp3252
sg12
(lp3253
sg29
(dp3254
sbsS'TImputerConstructor_model'
p3255
(i__main__
ClassDefinition
p3256
(dp3257
g4
I1
sg5
I0
sg6
g3255
sg7
S'TImputerConstructor'
p3258
sg9
I00
sg10
(lp3259
sg12
(lp3260
(S'TLearner'
p3261
S'learnerDiscrete'
p3262
S'learner_discrete'
p3263
S'learner for discrete attributes'
p3264
I0
I0
I00
Ntp3265
a(S'TLearner'
p3266
S'learnerContinuous'
p3267
S'learner_continuous'
p3268
S'learner for continuous attributes'
p3269
I0
I0
I00
Ntp3270
a(S'bool'
p3271
S'useClass'
p3272
S'use_class'
p3273
S'tells whether to use class value in imputation (default: false)'
p3274
I0
I0
I01
Ntp3275
ag1483
asg29
(dp3276
sbsS'TFindNearestConstructor_BruteForce'
p3277
(i__main__
ClassDefinition
p3278
(dp3279
g4
I1
sg5
I0
sg6
g3277
sg7
S'TFindNearestConstructor'
p3280
sg9
I00
sg10
(lp3281
sg12
(lp3282
g1035
ag1040
asg29
(dp3283
sbsS'TImputerConstructor'
p3284
(i__main__
ClassDefinition
p3285
(dp3286
g4
I1
sg5
I0
sg6
g3284
sg7
S'TOrange'
p3287
sg9
I01
sg10
(lp3288
sg12
(lp3289
g1483
asg29
(dp3290
sbsS'TDiscretizer'
p3291
(i__main__
ClassDefinition
p3292
(dp3293
g4
I1
sg5
I0
sg6
g3291
sg7
S'TTransformValue'
p3294
sg9
I01
sg10
(lp3295
sg12
(lp3296
g318
asg29
(dp3297
sbsS'TTreeStopCriteria_common'
p3298
(i__main__
ClassDefinition
p3299
(dp3300
g4
I1
sg5
I0
sg6
g3298
sg7
S'TTreeStopCriteria'
p3301
sg9
I00
sg10
(lp3302
sg12
(lp3303
(S'float'
p3304
S'maxMajority'
p3305
S'max_majority'
p3306
S'a maximal proportion of majority class for division to continue'
p3307
I0
I0
I01
Ntp3308
a(S'float'
p3309
S'minExamples'
p3310
S'min_examples'
p3311
S'a minimal number of examples for division to continue'
p3312
I0
I0
I01
Ntp3313
asg29
(dp3314
sbsS'TTreeStopCriteria_Python'
p3315
(i__main__
ClassDefinition
p3316
(dp3317
g4
I1
sg5
I0
sg6
g3315
sg7
S'TTreeStopCriteria'
p3318
sg9
I00
sg10
(lp3319
sg12
(lp3320
sg29
(dp3321
sbsS'TIGByIM'
p3322
(i__main__
ClassDefinition
p3323
(dp3324
g4
I1
sg5
I0
sg6
g3322
sg7
S'TIGConstructor'
p3325
sg9
I00
sg10
(lp3326
sg12
(lp3327
(S'TIMConstructor'
p3328
S'IMconstructor'
p3329
g3329
S'IM constructor'
p3330
I0
I0
I00
Ntp3331
asg29
(dp3332
sbsS'TRuleEvaluator_LRS'
p3333
(i__main__
ClassDefinition
p3334
(dp3335
g4
I1
sg5
I0
sg6
g3333
sg7
S'TRuleEvaluator'
p3336
sg9
I00
sg10
(lp3337
sg12
(lp3338
(S'TRuleList'
p3339
S'rules'
p3340
g3340
g1294
I0
I0
I00
Ntp3341
a(S'bool'
p3342
S'storeRules'
p3343
S'store_rules'
p3344
g1294
I0
I0
I01
Ntp3345
asg29
(dp3346
sbsS'TExampleCluster'
p3347
(i__main__
ClassDefinition
p3348
(dp3349
g4
I1
sg5
I0
sg6
g3347
sg7
S'TOrange'
p3350
sg9
I00
sg10
(lp3351
sg12
(lp3352
(S'TExampleCluster'
p3353
S'left'
p3354
g3354
S"'left' cluster"
p3355
I0
I0
I00
Ntp3356
a(S'TExampleCluster'
p3357
S'right'
p3358
g3358
S"'right' cluster"
p3359
I0
I0
I00
Ntp3360
a(S'float'
p3361
S'distance'
p3362
g3362
S'distance between the two clusters (not defined for leaves)'
p3363
I0
I0
I01
Ntp3364
a(S'TExample'
p3365
S'centroid'
p3366
g3366
S"cluster's centroid (always defined for leaves)"
p3367
I0
I0
I00
Ntp3368
asg29
(dp3369
sbsS'TClassifierByLookupTableN'
p3370
(i__main__
ClassDefinition
p3371
(dp3372
g4
I1
sg5
I0
sg6
g3370
sg7
S'TClassifierByLookupTable'
p3373
sg9
I00
sg10
(lp3374
sg12
(lp3375
(S'TVarList'
p3376
S'variables'
p3377
g3377
S'attributes'
p3378
I01
I0
I00
Ntp3379
a(S'TIntList'
p3380
S'noOfValues'
p3381
S'no_of_values'
p3382
S'number of values for each attribute'
p3383
I01
I0
I00
Ntp3384
a(S'TEFMDataDescription'
p3385
S'dataDescription'
p3386
S'data_description'
p3387
S'data description'
p3388
I0
I0
I00
Ntp3389
ag781
ag785
ag790
ag795
asg29
(dp3390
sbsS'TP2NN'
p3391
(i__main__
ClassDefinition
p3392
(dp3393
g4
I1
sg5
I0
sg6
g3391
sg7
S'TPNN'
p3394
sg9
I00
sg10
(lp3395
sg12
(lp3396
(S'int'
p3397
S'dimensions'
p3398
g3398
S'the number of dimensions'
p3399
I01
I0
I01
Ntp3400
a(S'TFloatList'
p3401
S'offsets'
p3402
g3402
S'offsets to subtract from the attribute values'
p3403
I0
I0
I00
Ntp3404
a(S'TFloatList'
p3405
S'normalizers'
p3406
g3406
S'number to divide the values by'
p3407
I0
I0
I00
Ntp3408
a(S'TFloatList'
p3409
S'averages'
p3410
g3410
S'numbers to use instead of the missing'
p3411
I0
I0
I00
Ntp3412
a(S'bool'
p3413
S'normalizeExamples'
p3414
S'normalize_examples'
p3415
S'if true, attribute values are divided to sum up to 1'
p3416
I0
I0
I01
Ntp3417
a(S'int'
p3418
S'nExamples'
p3419
S'n_examples'
p3420
S'the number of examples'
p3421
I01
I0
I01
Ntp3422
a(S'int'
p3423
S'law'
p3424
g3424
S'law'
p3425
I0
I0
I01
Ntp3426
ag900
ag790
ag795
asg29
(dp3427
sbsS'TImputerConstruct_Python'
p3428
(i__main__
ClassDefinition
p3429
(dp3430
g4
I1
sg5
I0
sg6
g3428
sg7
S'TImputerConstructor'
p3431
sg9
I00
sg10
(lp3432
sg12
(lp3433
g1483
asg29
(dp3434
sbsS'TSubsetsGenerator_withRestrictions'
p3435
(i__main__
ClassDefinition
p3436
(dp3437
g4
I1
sg5
I0
sg6
g3435
sg7
S'TSubsetsGenerator'
p3438
sg9
I00
sg10
(lp3439
sg12
(lp3440
(S'TSubsetsGenerator'
p3441
S'subGenerator'
p3442
S'sub_generator'
p3443
S'subset generator'
p3444
I0
I0
I00
Ntp3445
a(S'TVarList'
p3446
S'required'
p3447
g3447
S'set of required attributes'
p3448
I0
I0
I00
Ntp3449
a(S'TVarList'
p3450
S'forbidden'
p3451
g3451
S'set of forbidden attributes'
p3452
I0
I0
I00
Ntp3453
a(S'TVarListList'
p3454
S'forbiddenSubSubsets'
p3455
S'forbidden_sub_subsets'
p3456
S'set of forbidden subsets (attributes that must not occur together)'
p3457
I0
I0
I00
Ntp3458
ag2346
asg29
(dp3459
sbsS'TRuleBeamFilter_Python'
p3460
(i__main__
ClassDefinition
p3461
(dp3462
g4
I1
sg5
I0
sg6
g3460
sg7
S'TRuleBeamFilter'
p3463
sg9
I00
sg10
(lp3464
sg12
(lp3465
sg29
(dp3466
sbsS'TTreeExampleSplitter'
p3467
(i__main__
ClassDefinition
p3468
(dp3469
g4
I1
sg5
I0
sg6
g3467
sg7
S'TOrange'
p3470
sg9
I01
sg10
(lp3471
sg12
(lp3472
sg29
(dp3473
sbsS'TSVMClassifier'
p3474
(i__main__
ClassDefinition
p3475
(dp3476
g4
I1
sg5
I0
sg6
g3474
sg7
S'TClassifierFD'
p3477
sg9
I00
sg10
(lp3478
sg12
(lp3479
(S'TIntList'
p3480
S'nSV'
p3481
S'n_SV'
p3482
S'nSV'
p3483
I0
I0
I00
Ntp3484
a(S'TFloatList'
p3485
S'rho'
p3486
g3486
S'rho'
p3487
I0
I0
I00
Ntp3488
a(S'TFloatListList'
p3489
S'coef'
p3490
g3490
S'coef'
p3491
I0
I0
I00
Ntp3492
a(S'TFloatList'
p3493
S'probA'
p3494
S'prob_a'
p3495
S'probA - pairwise probability information'
p3496
I0
I0
I00
Ntp3497
a(S'TFloatList'
p3498
S'probB'
p3499
S'prob_b'
p3500
S'probB - pairwise probability information'
p3501
I0
I0
I00
Ntp3502
a(S'TExampleTable'
p3503
S'supportVectors'
p3504
S'support_vectors'
p3505
S'support vectors'
p3506
I0
I0
I00
Ntp3507
a(S'TExampleTable'
p3508
S'examples'
p3509
g3509
S'examples used to train the classifier'
p3510
I0
I0
I00
Ntp3511
a(S'TKernelFunc'
p3512
S'kernelFunc'
p3513
S'kernel_func'
p3514
S'custom kernel function'
p3515
I0
I0
I00
Ntp3516
a(S'int'
p3517
S'svm_type'
p3518
g3518
S'  SVM type (C_SVC=0, NU_SVC, ONE_CLASS, EPSILON_SVR=3, NU_SVR=4)'
p3519
I0
I0
I01
S'SVMLearner_SVMType'
p3520
tp3521
a(S'int'
p3522
S'kernel_type'
p3523
g3523
S'  kernel type (LINEAR=0, POLY, RBF, SIGMOID, CUSTOM=4)'
p3524
I0
I0
I01
S'SVMLearner_Kernel'
p3525
tp3526
ag900
ag790
ag795
asg29
(dp3527
sbsS'TTreeLearner'
p3528
(i__main__
ClassDefinition
p3529
(dp3530
g4
I1
sg5
I0
sg6
g3528
sg7
S'TLearner'
p3531
sg9
I00
sg10
(lp3532
sg12
(lp3533
(S'TTreeSplitConstructor'
p3534
S'split'
p3535
g3535
S'split criterion'
p3536
I0
I0
I00
Ntp3537
a(S'TTreeStopCriteria'
p3538
S'stop'
p3539
g3539
S'stop criterion'
p3540
I0
I0
I00
Ntp3541
a(S'TComputeDomainContingency'
p3542
S'contingencyComputer'
p3543
S'contingency_computer'
p3544
S'computes contingency matrix'
p3545
I0
I0
I00
Ntp3546
a(S'TLearner'
p3547
S'nodeLearner'
p3548
S'node_learner'
p3549
S'node learner'
p3550
I0
I0
I00
Ntp3551
a(S'TTreeExampleSplitter'
p3552
S'exampleSplitter'
p3553
S'example_splitter'
p3554
S'splits examples to branches'
p3555
I0
I0
I00
Ntp3556
a(S'int'
p3557
S'maxDepth'
p3558
S'max_depth'
p3559
S'maximal tree depth (0 = root only, -1 = no limit)'
p3560
I0
I0
I01
Ntp3561
a(S'bool'
p3562
S'storeExamples'
p3563
S'store_examples'
p3564
S'if true (default: false), learning examples in nodes are stored'
p3565
I0
I0
I01
Ntp3566
a(S'bool'
p3567
S'storeDistributions'
p3568
S'store_distributions'
p3569
S'if true (default), class distributions of learning examples in nodes are stored'
p3570
I0
I0
I01
Ntp3571
a(S'bool'
p3572
S'storeContingencies'
p3573
S'store_contingencies'
p3574
S'if true (default), contingency matrices for examples are stored'
p3575
I0
I0
I01
Ntp3576
a(S'bool'
p3577
S'storeNodeClassifier'
p3578
S'store_node_classifier'
p3579
S'if true (default), the internal nodes have classifiers; needed for pruning'
p3580
I0
I0
I01
Ntp3581
a(S'TTreeDescender'
p3582
S'descender'
p3583
g3583
S'descends down the tree'
p3584
I0
I0
I00
Ntp3585
ag47
asg29
(dp3586
sbsS'TPreprocessor_shuffle'
p3587
(i__main__
ClassDefinition
p3588
(dp3589
g4
I1
sg5
I0
sg6
g3587
sg7
S'TPreprocessor'
p3590
sg9
I00
sg10
(lp3591
sg12
(lp3592
(S'TVarList'
p3593
S'attributes'
p3594
g3594
S'tells which attributes to shuffle'
p3595
I0
I0
I00
Ntp3596
a(S'TRandomGenerator'
p3597
S'randomGenerator'
p3598
S'random_generator'
p3599
S'random number generator'
p3600
I0
I0
I00
Ntp3601
asg29
(dp3602
sbsS'TLearner'
p3603
(i__main__
ClassDefinition
p3604
(dp3605
g4
I1
sg5
I0
sg6
g3603
sg7
S'TOrange'
p3606
sg9
I00
sg10
(lp3607
sg12
(lp3608
g47
asg29
(dp3609
sbsS'TRuleClassifier_logit'
p3610
(i__main__
ClassDefinition
p3611
(dp3612
g4
I1
sg5
I0
sg6
g3610
sg7
S'TRuleClassifier'
p3613
sg9
I00
sg10
(lp3614
sg12
(lp3615
(S'TDistribution'
p3616
S'prior'
p3617
g3617
S'prior distribution'
p3618
I0
I0
I00
Ntp3619
a(S'TDomain'
p3620
S'domain'
p3621
g3621
S'Domain'
p3622
I0
I0
I00
Ntp3623
a(S'TFloatList'
p3624
S'ruleBetas'
p3625
S'rule_betas'
p3626
S'Rule betas'
p3627
I0
I0
I00
Ntp3628
a(S'float'
p3629
S'minStep'
p3630
S'min_step'
p3631
S'minimal step value'
p3632
I0
I0
I01
Ntp3633
a(S'float'
p3634
S'minSignificance'
p3635
S'min_significance'
p3636
S'minimum requested significance for betas. '
p3637
I0
I0
I01
Ntp3638
a(S'float'
p3639
S'minBeta'
p3640
S'min_beta'
p3641
S'minimum beta by rule to be included in the model. '
p3642
I0
I0
I01
Ntp3643
a(S'TClassifier'
p3644
S'priorClassifier'
p3645
S'prior_classifier'
p3646
S'prior classifier used if provided'
p3647
I0
I0
I00
Ntp3648
a(S'TRuleList'
p3649
S'prefixRules'
p3650
S'prefix_rules'
p3651
S'rules that trigger before logit sum.'
p3652
I0
I0
I00
Ntp3653
ag1963
ag1966
ag1970
ag790
ag795
asg29
(dp3654
sbsS'TStopDistributionClustering'
p3655
(i__main__
ClassDefinition
p3656
(dp3657
g4
I1
sg5
I0
sg6
g3655
sg7
S'TOrange'
p3658
sg9
I01
sg10
(lp3659
sg12
(lp3660
sg29
(dp3661
sbsS'TPythonValue'
p3662
(i__main__
ClassDefinition
p3663
(dp3664
g4
I1
sg5
I0
sg6
g3662
sg7
S'TSomeValue'
p3665
sg9
I00
sg10
(lp3666
sg12
(lp3667
sg29
(dp3668
sbsS'TDistributionAssessor_Kramer'
p3669
(i__main__
ClassDefinition
p3670
(dp3671
g4
I1
sg5
I0
sg6
g3669
sg7
S'TDistributionAssessor'
p3672
sg9
I00
sg10
(lp3673
sg12
(lp3674
sg29
(dp3675
sbsS'TTreeExampleSplitter_UnknownsToBranch'
p3676
(i__main__
ClassDefinition
p3677
(dp3678
g4
I1
sg5
I0
sg6
g3676
sg7
S'TTreeExampleSplitter'
p3679
sg9
I00
sg10
(lp3680
sg12
(lp3681
sg29
(dp3682
sbsS'TMajorityLearner'
p3683
(i__main__
ClassDefinition
p3684
(dp3685
g4
I1
sg5
I0
sg6
g3683
sg7
S'TLearner'
p3686
sg9
I00
sg10
(lp3687
sg12
(lp3688
(S'TProbabilityEstimatorConstructor'
p3689
S'estimatorConstructor'
p3690
S'estimator_constructor'
p3691
S'constructs probability estimator'
p3692
I0
I0
I00
Ntp3693
a(S'TDistribution'
p3694
S'aprioriDistribution'
p3695
S'apriori_distribution'
p3696
S'apriori class distribution'
p3697
I0
I0
I00
Ntp3698
ag47
asg29
(dp3699
sbsS'TMeasureAttributeFromProbabilities'
p3700
(i__main__
ClassDefinition
p3701
(dp3702
g4
I1
sg5
I0
sg6
g3700
sg7
S'TMeasureAttribute'
p3703
sg9
I01
sg10
(lp3704
sg12
(lp3705
g445
ag450
ag456
ag461
ag466
ag471
ag476
asg29
(dp3706
sbsS'TProbabilityEstimatorConstructor_relative'
p3707
(i__main__
ClassDefinition
p3708
(dp3709
g4
I1
sg5
I0
sg6
g3707
sg7
S'TProbabilityEstimatorConstructor'
p3710
sg9
I00
sg10
(lp3711
sg12
(lp3712
sg29
(dp3713
sbsS'TClassifierByLookupTable3'
p3714
(i__main__
ClassDefinition
p3715
(dp3716
g4
I1
sg5
I0
sg6
g3714
sg7
S'TClassifierByLookupTable'
p3717
sg9
I00
sg10
(lp3718
sg12
(lp3719
(S'TVariable'
p3720
S'variable1'
p3721
g3721
S'the first attribute used for classification'
p3722
I01
I0
I00
Ntp3723
a(S'TVariable'
p3724
S'variable2'
p3725
g3725
S'the second attribute used for classification'
p3726
I01
I0
I00
Ntp3727
a(S'TVariable'
p3728
S'variable3'
p3729
g3729
S'the third attribute used for classification'
p3730
I01
I0
I00
Ntp3731
a(S'int'
p3732
S'noOfValues1'
p3733
S'no_of_values1'
p3734
S'number of values of the first attribute'
p3735
I01
I0
I01
Ntp3736
a(S'int'
p3737
S'noOfValues2'
p3738
S'no_of_values2'
p3739
S'number of values of the second attribute'
p3740
I01
I0
I01
Ntp3741
a(S'int'
p3742
S'noOfValues3'
p3743
S'no_of_values3'
p3744
S'number of values of the third attribute'
p3745
I01
I0
I01
Ntp3746
a(S'TEFMDataDescription'
p3747
S'dataDescription'
p3748
S'data_description'
p3749
S'data description'
p3750
I0
I0
I00
Ntp3751
ag781
ag785
ag790
ag795
asg29
(dp3752
sbsS'TThresholdCA'
p3753
(i__main__
ClassDefinition
p3754
(dp3755
g4
I1
sg5
I0
sg6
g3753
sg7
S'TOrange'
p3756
sg9
I00
sg10
(lp3757
sg12
(lp3758
sg29
(dp3759
sbsS'TClassifierByLookupTable1'
p3760
(i__main__
ClassDefinition
p3761
(dp3762
g4
I1
sg5
I0
sg6
g3760
sg7
S'TClassifierByLookupTable'
p3763
sg9
I00
sg10
(lp3764
sg12
(lp3765
(S'TVariable'
p3766
S'variable1'
p3767
(g3767
S'variable'
p3768
tp3769
S' attribute used for classification'
p3770
I01
I0
I00
Ntp3771
ag781
ag785
ag790
ag795
asg29
(dp3772
sbsS'TValueFilter_string'
p3773
(i__main__
ClassDefinition
p3774
(dp3775
g4
I1
sg5
I0
sg6
g3773
sg7
S'TValueFilter'
p3776
sg9
I00
sg10
(lp3777
sg12
(lp3778
(S'string'
p3779
S'min'
p3780
(g3780
S'ref'
p3781
tp3782
S' reference value (lower bound for interval operators)'
p3783
I0
I0
I01
Ntp3784
a(S'string'
p3785
S'max'
p3786
g3786
S'upper bound for interval operators'
p3787
I0
I0
I01
Ntp3788
a(S'int'
p3789
S'oper'
p3790
g3790
S' operator'
p3791
I0
I0
I01
S'ValueFilter_Operator'
p3792
tp3793
a(S'bool'
p3794
S'caseSensitive'
p3795
S'case_sensitive'
p3796
S'if true (default), the operator is case sensitive'
p3797
I0
I0
I01
Ntp3798
ag2821
ag2826
asg29
(dp3799
sbsS'TGraphAsMatrix'
p3800
(i__main__
ClassDefinition
p3801
(dp3802
g4
I1
sg5
I0
sg6
g3800
sg7
S'TGraph'
p3803
sg9
I00
sg10
(lp3804
sg12
(lp3805
g681
ag686
ag690
asg29
(dp3806
sbsS'TFilter_hasSpecial'
p3807
(i__main__
ClassDefinition
p3808
(dp3809
g4
I1
sg5
I0
sg6
g3807
sg7
S'TFilter'
p3810
sg9
I00
sg10
(lp3811
sg12
(lp3812
g259
ag263
asg29
(dp3813
sbsS'TIMByRelief'
p3814
(i__main__
ClassDefinition
p3815
(dp3816
g4
I1
sg5
I0
sg6
g3814
sg7
S'TIMConstructor'
p3817
sg9
I00
sg10
(lp3818
sg12
(lp3819
(S'TExamplesDistance_Relief'
p3820
S'distance'
p3821
g3821
S'distance measure'
p3822
I0
I0
I00
Ntp3823
a(S'float'
p3824
g987
g987
S'number of neighbours'
p3825
I0
I0
I01
Ntp3826
a(S'float'
p3827
g991
g991
S'number of reference examples'
p3828
I0
I0
I01
Ntp3829
a(S'float'
p3830
S'kFromColumns'
p3831
S'k_from_columns'
p3832
S'if positive, number of neighbours is #columns*kFromColumns'
p3833
I0
I0
I01
Ntp3834
a(S'bool'
p3835
S'ignoreSameExample'
p3836
S'ignore_same_example'
p3837
S'does not put reference example into M'
p3838
I0
I0
I01
Ntp3839
a(S'bool'
p3840
S'convertToBinary'
p3841
S'convert_to_binary'
p3842
S'convert to binary class (hit-miss)'
p3843
I0
I0
I01
Ntp3844
a(S'bool'
p3845
S'correctClassFirst'
p3846
S'correct_class_first'
p3847
S'puts the correct class proportion to the first place'
p3848
I0
I0
I01
Ntp3849
a(S'bool'
p3850
S'allExamples'
p3851
S'all_examples'
p3852
S'uses all examples for reference examples'
p3853
I0
I0
I01
Ntp3854
a(S'bool'
p3855
S'allSameNeighbours'
p3856
S'all_same_neighbours'
p3857
S'uses all the examples same to the reference as neighbours'
p3858
I0
I0
I01
Ntp3859
ag2613
asg29
(dp3860
sbsS'TPreprocessor_addGaussianNoise'
p3861
(i__main__
ClassDefinition
p3862
(dp3863
g4
I1
sg5
I0
sg6
g3861
sg7
S'TPreprocessor'
p3864
sg9
I00
sg10
(lp3865
sg12
(lp3866
(S'TVariableFloatMap'
p3867
S'deviations'
p3868
g3868
S'deviations individual attribute values'
p3869
I0
I0
I00
Ntp3870
a(S'float'
p3871
S'defaultDeviation'
p3872
S'default_deviation'
p3873
S'default deviation'
p3874
I0
I0
I01
Ntp3875
a(S'TRandomGenerator'
p3876
S'randomGenerator'
p3877
S'random_generator'
p3878
S'random number generator'
p3879
I0
I0
I00
Ntp3880
asg29
(dp3881
sbsS'TRuleStoppingCriteria_NegativeDistribution'
p3882
(i__main__
ClassDefinition
p3883
(dp3884
g4
I1
sg5
I0
sg6
g3882
sg7
S'TRuleStoppingCriteria'
p3885
sg9
I00
sg10
(lp3886
sg12
(lp3887
sg29
(dp3888
sbsS'TTreeSplitConstructor_ExhaustiveBinary'
p3889
(i__main__
ClassDefinition
p3890
(dp3891
g4
I1
sg5
I0
sg6
g3889
sg7
S'TTreeSplitConstructor_Measure'
p3892
sg9
I00
sg10
(lp3893
sg12
(lp3894
g2374
ag2379
ag1693
asg29
(dp3895
sbsS'TTreeClassifier'
p3896
(i__main__
ClassDefinition
p3897
(dp3898
g4
I1
sg5
I0
sg6
g3896
sg7
S'TClassifierFD'
p3899
sg9
I00
sg10
(lp3900
sg12
(lp3901
(S'TTreeNode'
p3902
S'tree'
p3903
g3903
S'decision tree'
p3904
I0
I0
I00
Ntp3905
a(S'TTreeDescender'
p3906
S'descender'
p3907
g3907
S'object that descends down the tree'
p3908
I0
I0
I00
Ntp3909
ag900
ag790
ag795
asg29
(dp3910
sbsS'TSomeValue'
p3911
(i__main__
ClassDefinition
p3912
(dp3913
g4
I1
sg5
I0
sg6
g3911
sg7
S'TOrange'
p3914
sg9
I01
sg10
(lp3915
sg12
(lp3916
sg29
(dp3917
sbsS'TDiscDistribution'
p3918
(i__main__
ClassDefinition
p3919
(dp3920
g4
I1
sg5
I0
sg6
g3918
sg7
S'TDistribution'
p3921
sg9
I00
sg10
(lp3922
sg12
(lp3923
(S'TFloatList'
p3924
S'variances'
p3925
g3925
S'variances'
p3926
I0
I0
I00
Ntp3927
ag2177
ag2181
ag2185
ag2189
ag2193
ag2198
ag2203
ag2208
asg29
(dp3928
sbsS'TTreeDescender_UnknownMergeAsBranchSizes'
p3929
(i__main__
ClassDefinition
p3930
(dp3931
g4
I1
sg5
I0
sg6
g3929
sg7
g2213
sg9
I0
sg10
(lp3932
sg12
(lp3933
sg29
(dp3934
sbsS'THierarchicalClusterOrdering'
p3935
(i__main__
ClassDefinition
p3936
(dp3937
g4
I1
sg5
I0
sg6
g3935
sg7
S'TOrange'
p3938
sg9
I00
sg10
(lp3939
sg12
(lp3940
(S'TProgressCallback'
p3941
S'progress_callback'
p3942
g3942
S'progress callback function'
p3943
I0
I0
I00
Ntp3944
asg29
(dp3945
sbsS'TLogitClassifierState'
p3946
(i__main__
ClassDefinition
p3947
(dp3948
g4
I1
sg5
I0
sg6
g3946
sg7
S'TOrange'
p3949
sg9
I00
sg10
(lp3950
sg12
(lp3951
sg29
(dp3952
sbsS'TColorIG'
p3953
(i__main__
ClassDefinition
p3954
(dp3955
g4
I1
sg5
I0
sg6
g3953
sg7
S'TOrange'
p3956
sg9
I01
sg10
(lp3957
sg12
(lp3958
sg29
(dp3959
sbsS'TSimpleTreeLearner'
p3960
(i__main__
ClassDefinition
p3961
(dp3962
g4
I1
sg5
I0
sg6
g3960
sg7
S'TLearner'
p3963
sg9
I00
sg10
(lp3964
sg12
(lp3965
(S'float'
p3966
S'maxMajority'
p3967
S'max_majority'
p3968
g1294
I0
I0
I01
Ntp3969
a(S'int'
p3970
S'minInstances'
p3971
S'min_instances'
p3972
g1294
I0
I0
I01
Ntp3973
a(S'int'
p3974
S'maxDepth'
p3975
S'max_depth'
p3976
g1294
I0
I0
I01
Ntp3977
a(S'float'
p3978
S'skipProb'
p3979
S'skip_prob'
p3980
g1294
I0
I0
I01
Ntp3981
a(S'TRandomGenerator'
p3982
S'randomGenerator'
p3983
S'random_generator'
p3984
g1294
I0
I0
I00
Ntp3985
ag47
asg29
(dp3986
sbsS'TFilter_disjunction'
p3987
(i__main__
ClassDefinition
p3988
(dp3989
g4
I1
sg5
I0
sg6
g3987
sg7
S'TFilter'
p3990
sg9
I00
sg10
(lp3991
sg12
(lp3992
(S'TFilterList'
p3993
S'filters'
p3994
g3994
S'a list of filters;'
p3995
I0
I0
I00
Ntp3996
ag259
ag263
asg29
(dp3997
sbsS'TColumnAssessor'
p3998
(i__main__
ClassDefinition
p3999
(dp4000
g4
I1
sg5
I0
sg6
g3998
sg7
S'TOrange'
p4001
sg9
I01
sg10
(lp4002
sg12
(lp4003
sg29
(dp4004
sbsS'TComputeDomainContingency_Preprocessor'
p4005
(i__main__
ClassDefinition
p4006
(dp4007
g4
I1
sg5
I0
sg6
g4005
sg7
S'TComputeDomainContingency'
p4008
sg9
I00
sg10
(lp4009
sg12
(lp4010
(S'TPreprocessor'
p4011
S'preprocessor'
p4012
g4012
S'preprocesses the exmaples (see the manual for restrictions!)'
p4013
I0
I0
I00
Ntp4014
a(S'bool'
p4015
S'resultInOriginalDomain'
p4016
S'result_in_original_domain'
p4017
S'tells whether the resulting DomainContingency should consist of original attributes'
p4018
I0
I0
I01
Ntp4019
ag28
asg29
(dp4020
sbsS'TMeasureAttribute_MSE'
p4021
(i__main__
ClassDefinition
p4022
(dp4023
g4
I1
sg5
I0
sg6
g4021
sg7
S'TMeasureAttribute'
p4024
sg9
I00
sg10
(lp4025
sg12
(lp4026
(S'float'
p4027
g991
g991
S'm for m-estimate'
p4028
I0
I0
I01
Ntp4029
a(S'int'
p4030
S'unknownsTreatment'
p4031
S'unknowns_treatment'
p4032
S' treatment of unknown values'
p4033
I0
I0
I01
S'MeasureAttribute_UnknownsTreatment'
p4034
tp4035
ag461
ag466
ag471
ag476
asg29
(dp4036
sbsS'TNormalizeContinuous'
p4037
(i__main__
ClassDefinition
p4038
(dp4039
g4
I1
sg5
I0
sg6
g4037
sg7
S'TTransformValue'
p4040
sg9
I00
sg10
(lp4041
sg12
(lp4042
(S'float'
p4043
S'average'
p4044
g4044
S'the average value'
p4045
I0
I0
I01
Ntp4046
a(S'float'
p4047
S'span'
p4048
g4048
S'the value span'
p4049
I0
I0
I01
Ntp4050
ag318
asg29
(dp4051
sbsS'TPNN'
p4052
(i__main__
ClassDefinition
p4053
(dp4054
g4
I1
sg5
I0
sg6
g4052
sg7
S'TClassifierFD'
p4055
sg9
I00
sg10
(lp4056
sg12
(lp4057
g3400
ag3404
ag3408
ag3412
ag3417
ag3422
ag3426
ag900
ag790
ag795
asg29
(dp4058
sbsS'TBiModalDiscretizer'
p4059
(i__main__
ClassDefinition
p4060
(dp4061
g4
I1
sg5
I0
sg6
g4059
sg7
S'TDiscretizer'
p4062
sg9
I00
sg10
(lp4063
sg12
(lp4064
(S'float'
p4065
S'low'
p4066
g4066
S'low threshold'
p4067
I0
I0
I01
Ntp4068
a(S'float'
p4069
S'high'
p4070
g4070
S'high threshold'
p4071
I0
I0
I01
Ntp4072
ag318
asg29
(dp4073
sbsS'TProbabilityEstimatorConstructor_Laplace'
p4074
(i__main__
ClassDefinition
p4075
(dp4076
g4
I1
sg5
I0
sg6
g4074
sg7
S'TProbabilityEstimatorConstructor'
p4077
sg9
I00
sg10
(lp4078
sg12
(lp4079
(S'float'
p4080
S'l'
p4081
g4081
S'number of examples added to each class (default: 1)'
p4082
I0
I0
I01
Ntp4083
a(S'bool'
p4084
S'renormalize'
p4085
g4085
S'computes the estimate on the original (not the normalized) distribution'
p4086
I0
I0
I01
Ntp4087
asg29
(dp4088
sbsS'TEnumVariable'
p4089
(i__main__
ClassDefinition
p4090
(dp4091
g4
I1
sg5
I0
sg6
g4089
sg7
S'TVariable'
p4092
sg9
I00
sg10
(lp4093
sg12
(lp4094
(S'TStringList'
p4095
S'values'
p4096
g4096
S"attribute's values"
p4097
I0
I0
I00
Ntp4098
a(S'int'
p4099
S'baseValue'
p4100
S'base_value'
p4101
S'the index of the base value'
p4102
I0
I0
I01
Ntp4103
ag641
ag645
ag649
ag654
ag659
ag664
ag669
asg29
(dp4104
sbsS'TExamplesDistanceConstructor_Manhattan'
p4105
(i__main__
ClassDefinition
p4106
(dp4107
g4
I1
sg5
I0
sg6
g4105
sg7
S'TExamplesDistanceConstructor_Normalized'
p4108
sg9
I00
sg10
(lp4109
sg12
(lp4110
g96
ag101
ag106
asg29
(dp4111
sbsS'TC45Learner'
p4112
(i__main__
ClassDefinition
p4113
(dp4114
g4
I1
sg5
I0
sg6
g4112
sg7
S'TLearner'
p4115
sg9
I00
sg10
(lp4116
sg12
(lp4117
(S'bool'
p4118
S'gainRatio'
p4119
(g4119
S'g'
p4120
tp4121
S' use gain ratio (instead of information gain)'
p4122
I0
I0
I01
Ntp4123
a(S'bool'
p4124
S'subset'
p4125
(g4125
S's'
p4126
tp4127
S' use subsetting'
p4128
I0
I0
I01
Ntp4129
a(S'bool'
p4130
S'batch'
p4131
(g4131
S'b'
p4132
tp4133
S' batch'
p4134
I0
I0
I01
Ntp4135
a(S'bool'
p4136
S'probThresh'
p4137
(g4137
g91
tp4138
S' probability threshold'
p4139
I0
I0
I01
Ntp4140
a(S'int'
p4141
S'minObjs'
p4142
(g4142
g991
tp4143
S' minimal number of objects (examples) in leaves'
p4144
I0
I0
I01
Ntp4145
a(S'int'
p4146
S'window'
p4147
(g4147
S'w'
p4148
tp4149
S' window'
p4150
I0
I0
I01
Ntp4151
a(S'int'
p4152
S'increment'
p4153
(g4153
S'i'
p4154
tp4155
S' increment'
p4156
I0
I0
I01
Ntp4157
a(S'float'
p4158
S'cf'
p4159
(g4159
S'c'
p4160
tp4161
S' cf'
p4162
I0
I0
I01
Ntp4163
a(S'int'
p4164
S'trials'
p4165
(g4165
g1836
tp4166
S' trials'
p4167
I0
I0
I01
Ntp4168
a(S'bool'
p4169
S'prune'
p4170
g4170
S'return pruned tree'
p4171
I0
I0
I01
Ntp4172
a(S'bool'
p4173
S'convertToOrange'
p4174
S'convert_to_orange'
p4175
S'return TreeClassifier instead of C45TreeClassifier'
p4176
I0
I0
I01
Ntp4177
a(S'bool'
p4178
S'storeExamples'
p4179
S'store_examples'
p4180
S'stores examples when (if) converting to TreeClassifier'
p4181
I0
I0
I01
Ntp4182
a(S'bool'
p4183
S'storeContingencies'
p4184
S'store_contingencies'
p4185
S'stores contingencies when (if) converting to TreeClassifier'
p4186
I0
I0
I01
Ntp4187
ag47
asg29
(dp4188
sbsS'TExamplesDistance_Python'
p4189
(i__main__
ClassDefinition
p4190
(dp4191
g4
I1
sg5
I0
sg6
g4189
sg7
S'TExamplesDistance'
p4192
sg9
I00
sg10
(lp4193
sg12
(lp4194
sg29
(dp4195
sbsS'TTreeStopCriteria'
p4196
(i__main__
ClassDefinition
p4197
(dp4198
g4
I1
sg5
I0
sg6
g4196
sg7
S'TOrange'
p4199
sg9
I00
sg10
(lp4200
sg12
(lp4201
sg29
(dp4202
sbsS'TExamplesDistanceConstructor_Relief'
p4203
(i__main__
ClassDefinition
p4204
(dp4205
g4
I1
sg5
I0
sg6
g4203
sg7
S'TExamplesDistanceConstructor'
p4206
sg9
I00
sg10
(lp4207
sg12
(lp4208
g106
asg29
(dp4209
sbsS'TMissValuesGenerator'
p4210
(i__main__
ClassDefinition
p4211
(dp4212
g4
I1
sg5
I0
sg6
g4210
sg7
S'TChangeExampleGenerator'
p4213
sg9
I00
sg10
(lp4214
sg12
(lp4215
(S'TIntFloatList'
p4216
S'replaceProbabilities'
p4217
S'replace_probabilities'
p4218
S"probabilities for replacing attributes' values"
p4219
I0
I0
I00
Ntp4220
a(S'TRandomGenerator'
p4221
S'randomGenerator'
p4222
S'random_generator'
p4223
S'random generator'
p4224
I0
I0
I00
Ntp4225
ag121
ag125
asg29
(dp4226
sbsS'TRuleValidator_Python'
p4227
(i__main__
ClassDefinition
p4228
(dp4229
g4
I1
sg5
I0
sg6
g4227
sg7
S'TRuleValidator'
p4230
sg9
I00
sg10
(lp4231
sg12
(lp4232
sg29
(dp4233
sbsS'TSubsetsGenerator_constSize_iterator'
p4234
(i__main__
ClassDefinition
p4235
(dp4236
g4
I1
sg5
I0
sg6
g4234
sg7
S'TSubsetsGenerator_iterator'
p4237
sg9
I00
sg10
(lp4238
sg12
(lp4239
(S'bool'
p4240
S'moreToCome'
p4241
S'more_to_come'
p4242
g1294
I01
I0
I01
Ntp4243
ag192
asg29
(dp4244
sbsS'TRuleClassifier_firstRule'
p4245
(i__main__
ClassDefinition
p4246
(dp4247
g4
I1
sg5
I0
sg6
g4245
sg7
S'TRuleClassifier'
p4248
sg9
I00
sg10
(lp4249
sg12
(lp4250
(S'TDistribution'
p4251
S'prior'
p4252
g4252
S'prior distribution'
p4253
I0
I0
I00
Ntp4254
ag1963
ag1966
ag1970
ag790
ag795
asg29
(dp4255
sbsS'TEVDist'
p4256
(i__main__
ClassDefinition
p4257
(dp4258
g4
I1
sg5
I0
sg6
g4256
sg7
S'TOrange'
p4259
sg9
I00
sg10
(lp4260
sg12
(lp4261
(S'float'
p4262
S'mu'
p4263
g4263
S'mu of Fisher-Tippett distribution'
p4264
I0
I0
I01
Ntp4265
a(S'float'
p4266
S'beta'
p4267
g4267
S'beta of Fisher-Tippett distribution'
p4268
I0
I0
I01
Ntp4269
a(S'TFloatList'
p4270
S'percentiles'
p4271
g4271
S'usually 10 values - 0 = 5th percentile, 1 = 15th percentile, 9 = 95th percentile, change maxPercentile and step for other settings'
p4272
I0
I0
I00
Ntp4273
a(S'float'
p4274
S'maxPercentile'
p4275
S'max_percentile'
p4276
S'maxPercentile Value, default 0.95'
p4277
I0
I0
I01
Ntp4278
a(S'float'
p4279
S'step'
p4280
g4280
S'step of percentiles, default 0.1'
p4281
I0
I0
I01
Ntp4282
asg29
(dp4283
sbsS'TAssociationLearner'
p4284
(i__main__
ClassDefinition
p4285
(dp4286
g4
I1
sg5
I0
sg6
g4284
sg7
S'TLearner'
p4287
sg9
I00
sg10
(lp4288
sg12
(lp4289
(S'float'
p4290
S'confidence'
p4291
g4291
S'required confidence'
p4292
I0
I0
I01
Ntp4293
a(S'float'
p4294
S'support'
p4295
g4295
S'required support'
p4296
I0
I0
I01
Ntp4297
a(S'int'
p4298
S'voteWeight'
p4299
S'vote_weight'
p4300
S'vote weight (s=support, c=confidence, p=product)'
p4301
I0
I0
I01
Ntp4302
a(S'int'
p4303
S'maxItemSets'
p4304
S'max_item_sets'
p4305
S'maximal number of itemsets (increase if you want)'
p4306
I0
I0
I01
Ntp4307
ag47
asg29
(dp4308
sbsS'TDistributionAssessor'
p4309
(i__main__
ClassDefinition
p4310
(dp4311
g4
I1
sg5
I0
sg6
g4309
sg7
S'TOrange'
p4312
sg9
I01
sg10
(lp4313
sg12
(lp4314
sg29
(dp4315
sbsS'TEquiDistDiscretization'
p4316
(i__main__
ClassDefinition
p4317
(dp4318
g4
I1
sg5
I0
sg6
g4316
sg7
S'TDiscretization'
p4319
sg9
I00
sg10
(lp4320
sg12
(lp4321
(S'int'
p4322
S'numberOfIntervals'
p4323
S'number_of_intervals'
p4324
S'number of intervals'
p4325
I0
I0
I01
Ntp4326
asg29
(dp4327
sbsS'TConditionalProbabilityEstimatorConstructor_ByRows'
p4328
(i__main__
ClassDefinition
p4329
(dp4330
g4
I1
sg5
I0
sg6
g4328
sg7
S'TConditionalProbabilityEstimatorConstructor'
p4331
sg9
I00
sg10
(lp4332
sg12
(lp4333
(S'TProbabilityEstimatorConstructor'
p4334
S'estimatorConstructor'
p4335
S'estimator_constructor'
p4336
S'ProbabilityEstimator to be used '
p4337
I0
I0
I00
Ntp4338
asg29
(dp4339
sbsS'TTreeSplitConstructor'
p4340
(i__main__
ClassDefinition
p4341
(dp4342
g4
I1
sg5
I0
sg6
g4340
sg7
S'TOrange'
p4343
sg9
I01
sg10
(lp4344
sg12
(lp4345
g1693
asg29
(dp4346
sbsS'TSubsetsGenerator_constSize'
p4347
(i__main__
ClassDefinition
p4348
(dp4349
g4
I1
sg5
I0
sg6
g4347
sg7
S'TSubsetsGenerator'
p4350
sg9
I00
sg10
(lp4351
sg12
(lp4352
(S'int'
p4353
S'B'
p4354
g4354
S'subset size'
p4355
I0
I0
I01
Ntp4356
ag2346
asg29
(dp4357
sbsS'TColorIG_MCF'
p4358
(i__main__
ClassDefinition
p4359
(dp4360
g4
I1
sg5
I0
sg6
g4358
sg7
S'TColorIG'
p4361
sg9
I00
sg10
(lp4362
sg12
(lp4363
sg29
(dp4364
sbsS'TSVMClassifierSparse'
p4365
(i__main__
ClassDefinition
p4366
(dp4367
g4
I1
sg5
I0
sg6
g4365
sg7
S'TSVMClassifier'
p4368
sg9
I00
sg10
(lp4369
sg12
(lp4370
(S'bool'
p4371
S'useNonMeta'
p4372
S'use_non_meta'
p4373
S'include non meta attributes'
p4374
I0
I0
I01
Ntp4375
ag3484
ag3488
ag3492
ag3497
ag3502
ag3507
ag3511
ag3516
ag3521
ag3526
ag900
ag790
ag795
asg29
(dp4376
sbsS'TRuleBeamFilter'
p4377
(i__main__
ClassDefinition
p4378
(dp4379
g4
I1
sg5
I0
sg6
g4377
sg7
S'TOrange'
p4380
sg9
I01
sg10
(lp4381
sg12
(lp4382
sg29
(dp4383
sbsS'TPreprocessor_addClassWeight'
p4384
(i__main__
ClassDefinition
p4385
(dp4386
g4
I1
sg5
I0
sg6
g4384
sg7
S'TPreprocessor'
p4387
sg9
I00
sg10
(lp4388
sg12
(lp4389
(S'TFloatList'
p4390
S'classWeights'
p4391
S'class_weights'
p4392
S'weights of examples of particular classes'
p4393
I0
I0
I00
Ntp4394
a(S'bool'
p4395
S'equalize'
p4396
g4396
S'reweight examples to equalize class proportions'
p4397
I0
I0
I01
Ntp4398
a(S'TRandomGenerator'
p4399
S'randomGenerator'
p4400
S'random_generator'
p4401
S'random number generator'
p4402
I0
I0
I00
Ntp4403
asg29
(dp4404
sbsS'TValueFilter_continuous'
p4405
(i__main__
ClassDefinition
p4406
(dp4407
g4
I1
sg5
I0
sg6
g4405
sg7
S'TValueFilter'
p4408
sg9
I00
sg10
(lp4409
sg12
(lp4410
(S'float'
p4411
S'min'
p4412
(g4412
S'ref'
p4413
tp4414
S' reference value (lower bound for interval operators)'
p4415
I0
I0
I01
Ntp4416
a(S'float'
p4417
S'max'
p4418
g4418
S'upper bound for interval operators'
p4419
I0
I0
I01
Ntp4420
a(S'bool'
p4421
S'outside'
p4422
g4422
S'obsolete: if true, the filter accepts the values outside the interval, not inside'
p4423
I0
I0
I01
Ntp4424
a(S'int'
p4425
S'oper'
p4426
g4426
S' operator'
p4427
I0
I0
I01
S'ValueFilter_Operator'
p4428
tp4429
ag2821
ag2826
asg29
(dp4430
sbsS'TAssociationRule'
p4431
(i__main__
ClassDefinition
p4432
(dp4433
g4
I1
sg5
I0
sg6
g4431
sg7
S'TOrange'
p4434
sg9
I00
sg10
(lp4435
sg12
(lp4436
(S'TExample'
p4437
S'left'
p4438
g4438
S'left side of the rule'
p4439
I01
I0
I00
Ntp4440
a(S'TExample'
p4441
S'right'
p4442
g4442
S'right side of the rule'
p4443
I01
I0
I00
Ntp4444
a(S'float'
p4445
S'support'
p4446
g4446
S'support for the rule'
p4447
I0
I0
I01
Ntp4448
a(S'float'
p4449
S'confidence'
p4450
g4450
S'confidence of the rule'
p4451
I0
I0
I01
Ntp4452
a(S'float'
p4453
S'coverage'
p4454
g4454
S"rule's coverage"
p4455
I0
I0
I01
Ntp4456
a(S'float'
p4457
S'strength'
p4458
g4458
S"rule's strength"
p4459
I0
I0
I01
Ntp4460
a(S'float'
p4461
S'lift'
p4462
g4462
S"rule's lift"
p4463
I0
I0
I01
Ntp4464
a(S'float'
p4465
S'leverage'
p4466
g4466
S"rule's leverage"
p4467
I0
I0
I01
Ntp4468
a(S'float'
p4469
S'nAppliesLeft'
p4470
S'n_applies_left'
p4471
S"number of examples covered by the rule's left side"
p4472
I0
I0
I01
Ntp4473
a(S'float'
p4474
S'nAppliesRight'
p4475
S'n_applies_right'
p4476
S"number of examples covered by the rule's right side"
p4477
I0
I0
I01
Ntp4478
a(S'float'
p4479
S'nAppliesBoth'
p4480
S'n_applies_both'
p4481
S'number of examples covered by the rule'
p4482
I0
I0
I01
Ntp4483
a(S'float'
p4484
S'nExamples'
p4485
S'n_examples'
p4486
S'number of learning examples'
p4487
I0
I0
I01
Ntp4488
a(S'int'
p4489
S'nLeft'
p4490
S'n_left'
p4491
S"number of items on the rule's left side"
p4492
I01
I0
I01
Ntp4493
a(S'int'
p4494
S'nRight'
p4495
S'n_right'
p4496
S"number of items on the rule's right side"
p4497
I01
I0
I01
Ntp4498
a(S'TExampleTable'
p4499
S'examples'
p4500
g4500
S'examples which the rule was built from'
p4501
I01
I0
I00
Ntp4502
a(S'TIntList'
p4503
S'matchLeft'
p4504
S'match_left'
p4505
S'indices of examples that match the left side of the rule'
p4506
I01
I0
I00
Ntp4507
a(S'TIntList'
p4508
S'matchBoth'
p4509
S'match_both'
p4510
S'indices to examples that match both sides of the rule'
p4511
I01
I0
I00
Ntp4512
asg29
(dp4513
sbsS'TValueFilter'
p4514
(i__main__
ClassDefinition
p4515
(dp4516
g4
I1
sg5
I0
sg6
g4514
sg7
S'TOrange'
p4517
sg9
I01
sg10
(lp4518
sg12
(lp4519
g2821
ag2826
asg29
(dp4520
S'Operator'
p4521
(lp4522
(S'None'
p4523
I0
tp4524
a(S'Equal'
p4525
I1
tp4526
a(S'NotEqual'
p4527
I2
tp4528
a(S'Less'
p4529
I3
tp4530
a(S'LessEqual'
p4531
I4
tp4532
a(S'Greater'
p4533
I5
tp4534
a(S'GreaterEqual'
p4535
I6
tp4536
a(S'Between'
p4537
I7
tp4538
a(S'Outside'
p4539
I8
tp4540
a(S'Contains'
p4541
I9
tp4542
a(S'NotContains'
p4543
I10
tp4544
a(S'BeginsWith'
p4545
I11
tp4546
a(S'EndsWith'
p4547
I12
tp4548
a(S'Listed'
p4549
I13
tp4550
assbsS'TNoiseValuesGenerator'
p4551
(i__main__
ClassDefinition
p4552
(dp4553
g4
I1
sg5
I0
sg6
g4551
sg7
S'TChangeExampleGenerator'
p4554
sg9
I00
sg10
(lp4555
sg12
(lp4556
(S'TIntFloatList'
p4557
S'replaceProbabilities'
p4558
S'replace_probabilities'
p4559
S"probabilities for replacing attributes' values"
p4560
I0
I0
I00
Ntp4561
a(S'TRandomGenerator'
p4562
S'randomGenerator'
p4563
S'random_generator'
p4564
S'random generator'
p4565
I0
I0
I00
Ntp4566
ag121
ag125
asg29
(dp4567
sbsS'TTreeExampleSplitter_UnknownsToAll'
p4568
(i__main__
ClassDefinition
p4569
(dp4570
g4
I1
sg5
I0
sg6
g4568
sg7
S'TTreeExampleSplitter'
p4571
sg9
I00
sg10
(lp4572
sg12
(lp4573
sg29
(dp4574
sbsS'TEquiNDiscretization'
p4575
(i__main__
ClassDefinition
p4576
(dp4577
g4
I1
sg5
I0
sg6
g4575
sg7
S'TDiscretization'
p4578
sg9
I00
sg10
(lp4579
sg12
(lp4580
(S'int'
p4581
S'numberOfIntervals'
p4582
S'number_of_intervals'
p4583
S'number of intervals'
p4584
I0
I0
I01
Ntp4585
a(S'bool'
p4586
S'recursiveDivision'
p4587
S'recursive_division'
p4588
S'find cut-off points by recursive division (default = true)'
p4589
I0
I0
I01
Ntp4590
asg29
(dp4591
sbsS'TDomainBasicAttrStat'
p4592
(i__main__
ClassDefinition
p4593
(dp4594
g4
I1
sg5
I0
sg6
g4592
sg7
g2565
sg9
I00
sg10
(lp4595
sg12
(lp4596
(S'bool'
p4597
S'hasClassVar'
p4598
S'has_class_var'
p4599
S'has class var'
p4600
I0
I0
I01
Ntp4601
asg29
(dp4602
sbsS'TBayesClassifier'
p4603
(i__main__
ClassDefinition
p4604
(dp4605
g4
I1
sg5
I0
sg6
g4603
sg7
S'TClassifierFD'
p4606
sg9
I00
sg10
(lp4607
sg12
(lp4608
(S'TDistribution'
p4609
S'distribution'
p4610
g4610
S'class distributions (P(C))'
p4611
I0
I0
I00
Ntp4612
a(S'TDomainContingency'
p4613
S'conditionalDistributions'
p4614
S'conditional_distributions'
p4615
S'conditional distributions, P(C|A)'
p4616
I0
I0
I00
Ntp4617
a(S'TProbabilityEstimator'
p4618
S'estimator'
p4619
g4619
S'a probability estimator for P(C)'
p4620
I0
I0
I00
Ntp4621
a(S'TConditionalProbabilityEstimatorList'
p4622
S'conditionalEstimators'
p4623
S'conditional_estimators'
p4624
S'a probability estimator for P(C|A)'
p4625
I0
I0
I00
Ntp4626
a(S'bool'
p4627
S'normalizePredictions'
p4628
S'normalize_predictions'
p4629
S'if true, classifier will normalize predictions'
p4630
I0
I0
I01
Ntp4631
a(S'float'
p4632
S'threshold'
p4633
g4633
S'threshold probability for class 1 (for binary classes only)'
p4634
I0
I0
I01
Ntp4635
ag900
ag790
ag795
asg29
(dp4636
sbsS'TCostWrapperClassifier'
p4637
(i__main__
ClassDefinition
p4638
(dp4639
g4
I1
sg5
I0
sg6
g4637
sg7
S'TClassifier'
p4640
sg9
I00
sg10
(lp4641
sg12
(lp4642
(S'TClassifier'
p4643
S'classifier'
p4644
g4644
S'basic classifier'
p4645
I0
I0
I00
Ntp4646
a(S'TCostMatrix'
p4647
S'costMatrix'
p4648
S'cost_matrix'
p4649
S'cost matrix'
p4650
I0
I0
I00
Ntp4651
ag790
ag795
asg29
(dp4652
sbsS'TPreprocessor_ignore'
p4653
(i__main__
ClassDefinition
p4654
(dp4655
g4
I1
sg5
I0
sg6
g4653
sg7
S'TPreprocessor'
p4656
sg9
I00
sg10
(lp4657
sg12
(lp4658
(S'TVarList'
p4659
S'attributes'
p4660
g4660
S'tells which attributes to remove'
p4661
I0
I0
I00
Ntp4662
asg29
(dp4663
sbsS'TC45TreeNode'
p4664
(i__main__
ClassDefinition
p4665
(dp4666
g4
I1
sg5
I0
sg6
g4664
sg7
S'TOrange'
p4667
sg9
I00
sg10
(lp4668
sg12
(lp4669
(S'int'
p4670
S'nodeType'
p4671
S'node_type'
p4672
S' 0 = leaf,  1 = branch,  2 = cut,  3 = subset'
p4673
I0
I0
I01
S'C45TreeNode_NodeType'
p4674
tp4675
a(S'TValue'
p4676
S'leaf'
p4677
g4677
S'most frequent class at this node'
p4678
I0
I0
I01
Ntp4679
a(S'float'
p4680
S'items'
p4681
g4681
S'no of items at this node'
p4682
I0
I0
I01
Ntp4683
a(S'TDiscDistribution'
p4684
S'classDist'
p4685
S'class_dist'
p4686
S'class distribution of items'
p4687
I0
I0
I00
Ntp4688
a(S'TVariable'
p4689
S'tested'
p4690
g4690
S'attribute referenced in test'
p4691
I0
I0
I00
Ntp4692
a(S'float'
p4693
S'cut'
p4694
g4694
S'threshold for continuous attribute'
p4695
I0
I0
I01
Ntp4696
a(S'float'
p4697
S'lower'
p4698
g4698
S'lower limit of soft threshold'
p4699
I0
I0
I01
Ntp4700
a(S'float'
p4701
S'upper'
p4702
g4702
S'upper limit of soft threshold'
p4703
I0
I0
I01
Ntp4704
a(S'TIntList'
p4705
S'mapping'
p4706
g4706
S'mapping for discrete value'
p4707
I0
I0
I00
Ntp4708
a(S'TC45TreeNodeList'
p4709
S'branch'
p4710
g4710
S'branch[x] = (sub)tree for outcome x */'
p4711
I0
I0
I00
Ntp4712
asg29
(dp4713
S'NodeType'
p4714
(lp4715
(S'Leaf'
p4716
S'0'
p4717
tp4718
a(S'Branch'
p4719
I1
tp4720
a(S'Cut'
p4721
I2
tp4722
a(S'Subset'
p4723
I3
tp4724
assbsS'TMeasureAttribute_Python'
p4725
(i__main__
ClassDefinition
p4726
(dp4727
g4
I1
sg5
I0
sg6
g4725
sg7
S'TMeasureAttribute'
p4728
sg9
I00
sg10
(lp4729
sg12
(lp4730
g461
ag466
ag471
ag476
asg29
(dp4731
sbsS'TDistributionAssessor_Measure'
p4732
(i__main__
ClassDefinition
p4733
(dp4734
g4
I1
sg5
I0
sg6
g4732
sg7
S'TDistributionAssessor'
p4735
sg9
I00
sg10
(lp4736
sg12
(lp4737
(S'TMeasureAttribute'
p4738
S'measure'
p4739
g4739
S'attribute quality measure'
p4740
I0
I0
I00
Ntp4741
asg29
(dp4742
sbsS'TDistributionAssessor_m'
p4743
(i__main__
ClassDefinition
p4744
(dp4745
g4
I1
sg5
I0
sg6
g4743
sg7
S'TDistributionAssessor'
p4746
sg9
I00
sg10
(lp4747
sg12
(lp4748
(S'float'
p4749
g991
g991
S'm for m-estimate'
p4750
I0
I0
I01
Ntp4751
asg29
(dp4752
sbsS'TEVDistGetter'
p4753
(i__main__
ClassDefinition
p4754
(dp4755
g4
I1
sg5
I0
sg6
g4753
sg7
S'TOrange'
p4756
sg9
I01
sg10
(lp4757
sg12
(lp4758
sg29
(dp4759
sbsS'TStopDistributionClustering_n'
p4760
(i__main__
ClassDefinition
p4761
(dp4762
g4
I1
sg5
I0
sg6
g4760
sg7
S'TStopDistributionClustering'
p4763
sg9
I00
sg10
(lp4764
sg12
(lp4765
(S'int'
p4766
g944
g944
S'number of clusters'
p4767
I0
I0
I01
Ntp4768
asg29
(dp4769
sbsS'TTreeExampleSplitter_UnknownsAsSelector'
p4770
(i__main__
ClassDefinition
p4771
(dp4772
g4
I1
sg5
I0
sg6
g4770
sg7
S'TTreeExampleSplitter'
p4773
sg9
I00
sg10
(lp4774
sg12
(lp4775
sg29
(dp4776
sbsS'TClassifier_Python'
p4777
(i__main__
ClassDefinition
p4778
(dp4779
g4
I1
sg5
I0
sg6
g4777
sg7
S'TClassifier'
p4780
sg9
I00
sg10
(lp4781
sg12
(lp4782
g790
ag795
asg29
(dp4783
sbsS'TFilter_isDefined'
p4784
(i__main__
ClassDefinition
p4785
(dp4786
g4
I1
sg5
I0
sg6
g4784
sg7
S'TFilter'
p4787
sg9
I00
sg10
(lp4788
sg12
(lp4789
(S'TAttributedBoolList'
p4790
S'check'
p4791
g4791
S'tells which attributes to check; checks all if the list is empty'
p4792
I0
I0
I00
Ntp4793
ag259
ag263
asg29
(dp4794
sbsS'TProbabilityEstimatorConstructor_m'
p4795
(i__main__
ClassDefinition
p4796
(dp4797
g4
I1
sg5
I0
sg6
g4795
sg7
S'TProbabilityEstimatorConstructor'
p4798
sg9
I00
sg10
(lp4799
sg12
(lp4800
(S'float'
p4801
g991
g991
S'parameter m for m-estimation'
p4802
I0
I0
I01
Ntp4803
a(S'bool'
p4804
S'renormalize'
p4805
g4805
S'computes the estimate on the original (not the normalized) distribution'
p4806
I0
I0
I01
Ntp4807
asg29
(dp4808
sbsS'TStopDistributionClustering_noBigChange'
p4809
(i__main__
ClassDefinition
p4810
(dp4811
g4
I1
sg5
I0
sg6
g4809
sg7
S'TStopDistributionClustering'
p4812
sg9
I00
sg10
(lp4813
sg12
(lp4814
sg29
(dp4815
sbsS'TRuleLearner'
p4816
(i__main__
ClassDefinition
p4817
(dp4818
g4
I1
sg5
I0
sg6
g4816
sg7
S'TLearner'
p4819
sg9
I00
sg10
(lp4820
sg12
(lp4821
(S'TRuleDataStoppingCriteria'
p4822
S'dataStopping'
p4823
S'data_stopping'
p4824
g1294
I0
I0
I00
Ntp4825
a(S'TRuleStoppingCriteria'
p4826
S'ruleStopping'
p4827
S'rule_stopping'
p4828
g1294
I0
I0
I00
Ntp4829
a(S'TRuleCovererAndRemover'
p4830
S'coverAndRemove'
p4831
S'cover_and_remove'
p4832
g1294
I0
I0
I00
Ntp4833
a(S'TRuleFinder'
p4834
S'ruleFinder'
p4835
S'rule_finder'
p4836
g1294
I0
I0
I00
Ntp4837
a(S'TRuleClassifierConstructor'
p4838
S'classifierConstructor'
p4839
S'classifier_constructor'
p4840
S'classifier'
p4841
I0
I0
I00
Ntp4842
a(S'TProgressCallback'
p4843
S'progressCallback'
p4844
S'progress_callback'
p4845
S'progress callback function'
p4846
I0
I0
I00
Ntp4847
a(S'bool'
p4848
S'storeExamples'
p4849
S'store_examples'
p4850
g1294
I0
I0
I01
Ntp4851
a(S'int'
p4852
S'targetClass'
p4853
S'target_class'
p4854
g1294
I0
I0
I01
Ntp4855
a(S'TRuleList'
p4856
S'baseRules'
p4857
S'base_rules'
p4858
g1294
I0
I0
I00
Ntp4859
ag47
asg29
(dp4860
sbsS'TLinearLearner'
p4861
(i__main__
ClassDefinition
p4862
(dp4863
g4
I1
sg5
I0
sg6
g4861
sg7
S'TLearner'
p4864
sg9
I00
sg10
(lp4865
sg12
(lp4866
(S'int'
p4867
S'solver_type'
p4868
g4868
S' Solver type (loss function1)'
p4869
I0
I0
I01
S'LinearLearner_Lossfunction1'
p4870
tp4871
a(S'float'
p4872
S'eps'
p4873
g4873
S'Stopping criteria'
p4874
I0
I0
I01
Ntp4875
a(S'float'
p4876
g2038
g2038
S'Regularization parameter'
p4877
I0
I0
I01
Ntp4878
ag47
asg29
(dp4879
S'LIBLINEAR_VERSION'
p4880
(lp4881
(S'VERSION'
p4882
S'180'
p4883
tp4884
asS'Lossfunction1'
p4885
(lp4886
(S'L2R_LR'
p4887
I0
tp4888
a(S'L2R_L2Loss_SVC_Dual'
p4889
I1
tp4890
a(S'L2R_L2Loss_SVC'
p4891
I2
tp4892
a(S'L2R_L1Loss_SVC_Dual'
p4893
I3
tp4894
a(S'MCSVM_CS'
p4895
I4
tp4896
a(S'L1R_L2Loss_SVC'
p4897
I5
tp4898
a(S'L1R_LR'
p4899
I6
tp4900
a(S'L2R_LR_Dual'
p4901
I7
tp4902
asS'Lossfunction1_old_'
p4903
(lp4904
(S'L2_LR'
p4905
I0
tp4906
a(S'L2Loss_SVM_Dual'
p4907
I1
tp4908
a(S'L2Loss_SVM'
p4909
I2
tp4910
a(S'L1Loss_SVM_Dual'
p4911
I3
tp4912
assbsS'TImputer'
p4913
(i__main__
ClassDefinition
p4914
(dp4915
g4
I1
sg5
I0
sg6
g4913
sg7
S'TOrange'
p4916
sg9
I01
sg10
(lp4917
sg12
(lp4918
sg29
(dp4919
sbsS'TTransformValue_Python'
p4920
(i__main__
ClassDefinition
p4921
(dp4922
g4
I1
sg5
I0
sg6
g4920
sg7
S'TTransformValue'
p4923
sg9
I00
sg10
(lp4924
sg12
(lp4925
g318
asg29
(dp4926
sbsS'TStopIMClusteringByAssessor_noProfit'
p4927
(i__main__
ClassDefinition
p4928
(dp4929
g4
I1
sg5
I0
sg6
g4927
sg7
S'TStopIMClusteringByAssessor'
p4930
sg9
I00
sg10
(lp4931
sg12
(lp4932
(S'float'
p4933
S'minProfitProportion'
p4934
S'min_profit_proportion'
p4935
S'minimal allowable profit proportion'
p4936
I0
I0
I01
Ntp4937
asg29
(dp4938
sbsS'TRuleBeamFilter_Width'
p4939
(i__main__
ClassDefinition
p4940
(dp4941
g4
I1
sg5
I0
sg6
g4939
sg7
S'TRuleBeamFilter'
p4942
sg9
I00
sg10
(lp4943
sg12
(lp4944
(S'int'
p4945
S'width'
p4946
g4946
g1294
I0
I0
I01
Ntp4947
asg29
(dp4948
sbsS'TRandomClassifier'
p4949
(i__main__
ClassDefinition
p4950
(dp4951
g4
I1
sg5
I0
sg6
g4949
sg7
S'TClassifier'
p4952
sg9
I00
sg10
(lp4953
sg12
(lp4954
(S'TDistribution'
p4955
S'probabilities'
p4956
g4956
S'probabilities of predictions'
p4957
I0
I0
I00
Ntp4958
ag790
ag795
asg29
(dp4959
sbsS'TFindNearest'
p4960
(i__main__
ClassDefinition
p4961
(dp4962
g4
I1
sg5
I0
sg6
g4960
sg7
S'TOrange'
p4963
sg9
I01
sg10
(lp4964
sg12
(lp4965
g421
ag426
asg29
(dp4966
sbsS'TLogRegFitter_Cholesky'
p4967
(i__main__
ClassDefinition
p4968
(dp4969
g4
I1
sg5
I0
sg6
g4967
sg7
S'TLogRegFitter'
p4970
sg9
I00
sg10
(lp4971
sg12
(lp4972
sg29
(dp4973
sbsS'TClassifierFromVar'
p4974
(i__main__
ClassDefinition
p4975
(dp4976
g4
I1
sg5
I0
sg6
g4974
sg7
S'TClassifier'
p4977
sg9
I00
sg10
(lp4978
sg12
(lp4979
(S'TVariable'
p4980
S'whichVar'
p4981
(g4981
S'variable'
p4982
tp4983
S' variable'
p4984
I0
I0
I00
Ntp4985
a(S'TTransformValue'
p4986
S'transformer'
p4987
g4987
S'transformer'
p4988
I0
I0
I00
Ntp4989
a(S'TDistribution'
p4990
S'distributionForUnknown'
p4991
S'distribution_for_unknown'
p4992
S'distribution for unknown value'
p4993
I0
I0
I00
Ntp4994
a(S'bool'
p4995
S'transformUnknowns'
p4996
S'transform_unknowns'
p4997
S'if false (default), unknowns stay unknown or are changed into distribution if given'
p4998
I0
I0
I01
Ntp4999
ag790
ag795
asg29
(dp5000
sbsS'TIM'
p5001
(i__main__
ClassDefinition
p5002
(dp5003
g4
I1
sg5
I0
sg6
g5001
sg7
S'TOrange'
p5004
sg9
I00
sg10
(lp5005
sg12
(lp5006
(S'int'
p5007
S'varType'
p5008
S'var_type'
p5009
S' class variable type'
p5010
I0
I0
I01
S'Variable_Type'
p5011
tp5012
a(S'TExampleTable'
p5013
S'rowExamples'
p5014
S'row_examples'
p5015
S'examples with free attributes for each row'
p5016
I0
I0
I00
Ntp5017
asg29
(dp5018
sbsS'TTreeSplitConstructor_OneAgainstOthers'
p5019
(i__main__
ClassDefinition
p5020
(dp5021
g4
I1
sg5
I0
sg6
g5019
sg7
S'TTreeSplitConstructor_Measure'
p5022
sg9
I00
sg10
(lp5023
sg12
(lp5024
g2374
ag2379
ag1693
asg29
(dp5025
sbsS'TClassifier'
p5026
(i__main__
ClassDefinition
p5027
(dp5028
g4
I1
sg5
I0
sg6
g5026
sg7
S'TOrange'
p5029
sg9
I00
sg10
(lp5030
sg12
(lp5031
g790
ag795
asg29
(dp5032
sbsS'TIG'
p5033
(i__main__
ClassDefinition
p5034
(dp5035
g4
I1
sg5
I0
sg6
g5033
sg7
S'TOrange'
p5036
sg9
I00
sg10
(lp5037
sg12
(lp5038
sg29
(dp5039
sbsS'TMeasureAttribute_relief'
p5040
(i__main__
ClassDefinition
p5041
(dp5042
g4
I1
sg5
I0
sg6
g5040
sg7
S'TMeasureAttribute'
p5043
sg9
I00
sg10
(lp5044
sg12
(lp5045
(S'float'
p5046
g987
g987
S'number of neighbours'
p5047
I0
I0
I01
Ntp5048
a(S'float'
p5049
g991
g991
S'number of reference examples'
p5050
I0
I0
I01
Ntp5051
a(S'bool'
p5052
S'checkCachedData'
p5053
S'check_cached_data'
p5054
S'tells whether to check the checksum of the data before reusing the cached neighbours'
p5055
I0
I0
I01
Ntp5056
ag461
ag466
ag471
ag476
asg29
(dp5057
sbsS'TMeasureAttribute_logOddsRatio'
p5058
(i__main__
ClassDefinition
p5059
(dp5060
g4
I1
sg5
I0
sg6
g5058
sg7
S'TMeasureAttributeFromProbabilities'
p5061
sg9
I00
sg10
(lp5062
sg12
(lp5063
g445
ag450
ag456
ag461
ag466
ag471
ag476
asg29
(dp5064
sbsS'TTreeExampleSplitter_Python'
p5065
(i__main__
ClassDefinition
p5066
(dp5067
g4
I1
sg5
I0
sg6
g5065
sg7
S'TTreeExampleSplitter'
p5068
sg9
I00
sg10
(lp5069
sg12
(lp5070
sg29
(dp5071
sbsS'TFilter_random'
p5072
(i__main__
ClassDefinition
p5073
(dp5074
g4
I1
sg5
I0
sg6
g5072
sg7
S'TFilter'
p5075
sg9
I00
sg10
(lp5076
sg12
(lp5077
(S'float'
p5078
S'prob'
p5079
g5079
S'probability of selecting an example'
p5080
I0
I0
I01
Ntp5081
a(S'TRandomGenerator'
p5082
S'randomGenerator'
p5083
S'random_generator'
p5084
S'random generator'
p5085
I0
I0
I00
Ntp5086
ag259
ag263
asg29
(dp5087
sbsS'TC45ExampleGenerator'
p5088
(i__main__
ClassDefinition
p5089
(dp5090
g4
I1
sg5
I0
sg6
g5088
sg7
S'TFileExampleGenerator'
p5091
sg9
I00
sg10
(lp5092
sg12
(lp5093
(S'TBoolList'
p5094
S'skip'
p5095
g5095
S'a boolean list, one element per attribute, denoting which attributes to skip'
p5096
I0
I0
I00
Ntp5097
ag736
ag741
ag746
ag121
ag125
asg29
(dp5098
sbsS'TProbabilityEstimatorConstructor_loess'
p5099
(i__main__
ClassDefinition
p5100
(dp5101
g4
I1
sg5
I0
sg6
g5099
sg7
S'TProbabilityEstimatorConstructor'
p5102
sg9
I00
sg10
(lp5103
sg12
(lp5104
(S'float'
p5105
S'windowProportion'
p5106
S'window_proportion'
p5107
S'The proportion of points in a window for LR'
p5108
I0
I0
I01
Ntp5109
a(S'int'
p5110
S'nPoints'
p5111
S'n_points'
p5112
S'The number of points on curve (negative means the given number of points is inserted in each interval)'
p5113
I0
I0
I01
Ntp5114
a(S'int'
p5115
S'distributionMethod'
p5116
S'distribution_method'
p5117
S" Meaning of the 'nPoints'"
p5118
I0
I0
I01
S'ProbabilityEstimatorConstructor_loess_DistributionMethod'
p5119
tp5120
asg29
(dp5121
S'DistributionMethod'
p5122
(lp5123
(S'Minimal'
p5124
S'DISTRIBUTE_MINIMAL'
p5125
tp5126
a(S'Factor'
p5127
S'DISTRIBUTE_FACTOR'
p5128
tp5129
a(S'Fixed'
p5130
S'DISTRIBUTE_FIXED'
p5131
tp5132
a(S'Uniform'
p5133
S'DISTRIBUTE_UNIFORM'
p5134
tp5135
a(S'Maximal'
p5136
S'DISTRIBUTE_MAXIMAL'
p5137
tp5138
assbsS'TLogRegFitter'
p5139
(i__main__
ClassDefinition
p5140
(dp5141
g4
I1
sg5
I0
sg6
g5139
sg7
S'TOrange'
p5142
sg9
I01
sg10
(lp5143
sg12
(lp5144
sg29
(dp5145
S'ErrorCode'
p5146
(lp5147
(S'OK'
p5148
I0
tp5149
a(S'Infinity'
p5150
I1
tp5151
a(S'Divergence'
p5152
I2
tp5153
a(S'Constant'
p5154
I3
tp5155
a(S'Singularity'
p5156
I4
tp5157
assbsS'TStopIMClusteringByAssessor_noBigChange'
p5158
(i__main__
ClassDefinition
p5159
(dp5160
g4
I1
sg5
I0
sg6
g5158
sg7
S'TStopIMClusteringByAssessor'
p5161
sg9
I00
sg10
(lp5162
sg12
(lp5163
sg29
(dp5164
sbsS'TImputerConstructor_random'
p5165
(i__main__
ClassDefinition
p5166
(dp5167
g4
I1
sg5
I0
sg6
g5165
sg7
S'TImputerConstructor'
p5168
sg9
I00
sg10
(lp5169
sg12
(lp5170
(S'bool'
p5171
S'deterministic'
p5172
g5172
S"tells whether to initialize random by example's CRC (default: false)"
p5173
I0
I0
I01
Ntp5174
ag1483
asg29
(dp5175
sbsS'TRandomLearner'
p5176
(i__main__
ClassDefinition
p5177
(dp5178
g4
I1
sg5
I0
sg6
g5176
sg7
S'TLearner'
p5179
sg9
I00
sg10
(lp5180
sg12
(lp5181
(S'TDistribution'
p5182
S'probabilities'
p5183
g5183
S'probabilities of predictions'
p5184
I0
I0
I00
Ntp5185
ag47
asg29
(dp5186
sbsS'TItemsetsSparseInducer'
p5187
(i__main__
ClassDefinition
p5188
(dp5189
g4
I1
sg5
I0
sg6
g5187
sg7
S'TOrange'
p5190
sg9
I00
sg10
(lp5191
sg12
(lp5192
(S'int'
p5193
S'maxItemSets'
p5194
S'max_item_sets'
p5195
S'maximal number of itemsets (increase if you want)'
p5196
I0
I0
I01
Ntp5197
a(S'float'
p5198
S'support'
p5199
g5199
S'required support'
p5200
I0
I0
I01
Ntp5201
a(S'bool'
p5202
S'storeExamples'
p5203
S'store_examples'
p5204
S'stores examples corresponding to itemsets'
p5205
I0
I0
I01
Ntp5206
asg29
(dp5207
sbsS'TRuleBeamInitializer_Default'
p5208
(i__main__
ClassDefinition
p5209
(dp5210
g4
I1
sg5
I0
sg6
g5208
sg7
S'TRuleBeamInitializer'
p5211
sg9
I00
sg10
(lp5212
sg12
(lp5213
sg29
(dp5214
sbsS'TImputerConstructor_minimal'
p5215
(i__main__
ClassDefinition
p5216
(dp5217
g4
I1
sg5
I0
sg6
g5215
sg7
S'TImputerConstructor'
p5218
sg9
I00
sg10
(lp5219
sg12
(lp5220
g1483
asg29
(dp5221
sbsS'TMeasureAttribute_cost'
p5222
(i__main__
ClassDefinition
p5223
(dp5224
g4
I1
sg5
I0
sg6
g5222
sg7
S'TMeasureAttributeFromProbabilities'
p5225
sg9
I00
sg10
(lp5226
sg12
(lp5227
(S'TCostMatrix'
p5228
S'cost'
p5229
g5229
S'cost matrix'
p5230
I0
I0
I00
Ntp5231
ag445
ag450
ag456
ag461
ag466
ag471
ag476
asg29
(dp5232
sbsS'TClustersFromIM'
p5233
(i__main__
ClassDefinition
p5234
(dp5235
g4
I1
sg5
I0
sg6
g5233
sg7
S'TOrange'
p5236
sg9
I01
sg10
(lp5237
sg12
(lp5238
sg29
(dp5239
sbsS'TRuleCovererAndRemover_Default'
p5240
(i__main__
ClassDefinition
p5241
(dp5242
g4
I1
sg5
I0
sg6
g5240
sg7
S'TRuleCovererAndRemover'
p5243
sg9
I00
sg10
(lp5244
sg12
(lp5245
sg29
(dp5246
sbsS'TClustersFromIMByAssessor'
p5247
(i__main__
ClassDefinition
p5248
(dp5249
g4
I1
sg5
I0
sg6
g5247
sg7
S'TClustersFromIM'
p5250
sg9
I00
sg10
(lp5251
sg12
(lp5252
(S'TColumnAssessor'
p5253
S'columnAssessor'
p5254
S'column_assessor'
p5255
S'column quality assessor'
p5256
I0
I0
I00
Ntp5257
a(S'TStopIMClusteringByAssessor'
p5258
S'stopCriterion'
p5259
S'stop_criterion'
p5260
S'stop criterion'
p5261
I0
I0
I00
Ntp5262
asg29
(dp5263
sbsS'TDomainContingency'
p5264
(i__main__
ClassDefinition
p5265
(dp5266
g4
I1
sg5
I0
sg6
g5264
sg7
g2565
sg9
I00
sg10
(lp5267
sg12
(lp5268
(S'TDistribution'
p5269
S'classes'
p5270
g5270
S'distribution of class values'
p5271
I0
I0
I00
Ntp5272
a(S'bool'
p5273
S'classIsOuter'
p5274
S'class_is_outer'
p5275
S'tells whether the class is the outer variable'
p5276
I0
I0
I01
Ntp5277
asg29
(dp5278
sbsS'TEarthClassifier'
p5279
(i__main__
ClassDefinition
p5280
(dp5281
g4
I1
sg5
I0
sg6
g5279
sg7
S'TClassifierFD'
p5282
sg9
I00
sg10
(lp5283
sg12
(lp5284
(S'int'
p5285
S'num_preds'
p5286
g5286
S'Number of predictor variables'
p5287
I0
I0
I01
Ntp5288
a(S'int'
p5289
S'num_terms'
p5290
g5290
S'Number of used terms'
p5291
I0
I0
I01
Ntp5292
a(S'int'
p5293
S'max_terms'
p5294
g5294
S'Maximum number of terms'
p5295
I0
I0
I01
Ntp5296
a(S'int'
p5297
S'num_responses'
p5298
g5298
S'Number of response variables'
p5299
I0
I0
I01
Ntp5300
a(S'TBoolList'
p5301
S'best_set'
p5302
g5302
S'Used terms.'
p5303
I0
I0
I00
Ntp5304
a(S'TFloatListList'
p5305
S'dirs'
p5306
g5306
S'max_preds x num_preds matrix'
p5307
I0
I0
I00
Ntp5308
a(S'TFloatListList'
p5309
S'cuts'
p5310
g5310
S'max_preds x num_preds matrix of cuts'
p5311
I0
I0
I00
Ntp5312
a(S'TFloatList'
p5313
S'betas'
p5314
g5314
S'Term coefficients;'
p5315
I0
I0
I00
Ntp5316
ag900
ag790
ag795
asg29
(dp5317
sbsS'TValueList'
p5318
(i__main__
ClassDefinition
p5319
(dp5320
g4
I1
sg5
I0
sg6
g5318
sg7
g2565
sg9
I00
sg10
(lp5321
sg12
(lp5322
(S'TVariable'
p5323
S'variable'
p5324
g5324
S'the variable to which the list applies'
p5325
I0
I0
I00
Ntp5326
asg29
(dp5327
sbsS'TTreeExampleSplitter_UnknownsToCommon'
p5328
(i__main__
ClassDefinition
p5329
(dp5330
g4
I1
sg5
I0
sg6
g5328
sg7
S'TTreeExampleSplitter'
p5331
sg9
I00
sg10
(lp5332
sg12
(lp5333
sg29
(dp5334
sbsS'TDomainTransformerConstructor'
p5335
(i__main__
ClassDefinition
p5336
(dp5337
g4
I1
sg5
I0
sg6
g5335
sg7
S'TOrange'
p5338
sg9
I01
sg10
(lp5339
sg12
(lp5340
(S'bool'
p5341
S'preservesOrder'
p5342
S'preserves_order'
p5343
S'a flag telling that original attributes have corresponding attribute in the same order'
p5344
I01
I0
I01
Ntp5345
a(S'bool'
p5346
S'preservesAttributes'
p5347
S'preserves_attributes'
p5348
S'a flag telling whether each original has a corresponding new attribute'
p5349
I01
I0
I01
Ntp5350
asg29
(dp5351
sbsS'TIGConstructor'
p5352
(i__main__
ClassDefinition
p5353
(dp5354
g4
I1
sg5
I0
sg6
g5352
sg7
S'TOrange'
p5355
sg9
I01
sg10
(lp5356
sg12
(lp5357
sg29
(dp5358
sbsS'TTreeDescender_UnknownToNode'
p5359
(i__main__
ClassDefinition
p5360
(dp5361
g4
I1
sg5
I0
sg6
g5359
sg7
g2213
sg9
I0
sg10
(lp5362
sg12
(lp5363
sg29
(dp5364
sbsS'TMakeRandomIndices'
p5365
(i__main__
ClassDefinition
p5366
(dp5367
g4
I1
sg5
I0
sg6
g5365
sg7
S'TOrange'
p5368
sg9
I00
sg10
(lp5369
sg12
(lp5370
g282
ag286
ag291
asg29
(dp5371
S'Stratification'
p5372
(lp5373
(S'StratifiedIfPossible'
p5374
S'-1'
p5375
tp5376
a(S'NotStratified'
p5377
I0
tp5378
a(S'Stratified'
p5379
I1
tp5380
assbsS'TFilter_Python'
p5381
(i__main__
ClassDefinition
p5382
(dp5383
g4
I1
sg5
I0
sg6
g5381
sg7
S'TFilter'
p5384
sg9
I00
sg10
(lp5385
sg12
(lp5386
g259
ag263
asg29
(dp5387
sbsS'TExamplesDistanceConstructor_Maximal'
p5388
(i__main__
ClassDefinition
p5389
(dp5390
g4
I1
sg5
I0
sg6
g5388
sg7
S'TExamplesDistanceConstructor_Normalized'
p5391
sg9
I00
sg10
(lp5392
sg12
(lp5393
g96
ag101
ag106
asg29
(dp5394
sbsS'TExamplesDistanceConstructor_Python'
p5395
(i__main__
ClassDefinition
p5396
(dp5397
g4
I1
sg5
I0
sg6
g5395
sg7
S'TExamplesDistanceConstructor'
p5398
sg9
I00
sg10
(lp5399
sg12
(lp5400
g106
asg29
(dp5401
sbsS'TPythonVariable'
p5402
(i__main__
ClassDefinition
p5403
(dp5404
g4
I1
sg5
I0
sg6
g5402
sg7
S'TVariable'
p5405
sg9
I00
sg10
(lp5406
sg12
(lp5407
(S'bool'
p5408
S'usePickle'
p5409
S'use_pickle'
p5410
S'tells whether to use pickle for saving to/loading from files'
p5411
I0
I0
I01
Ntp5412
a(S'bool'
p5413
S'useSomeValue'
p5414
S'use_some_value'
p5415
S'tells whether the Variable will operate on Value or SomeValue (default)'
p5416
I0
I0
I01
Ntp5417
ag641
ag645
ag649
ag654
ag659
ag664
ag669
asg29
(dp5418
sbsS'TGaussianNoiseGenerator'
p5419
(i__main__
ClassDefinition
p5420
(dp5421
g4
I1
sg5
I0
sg6
g5419
sg7
S'TChangeExampleGenerator'
p5422
sg9
I00
sg10
(lp5423
sg12
(lp5424
(S'TIntFloatList'
p5425
S'deviations'
p5426
g5426
S"deviations for attributes' values"
p5427
I0
I0
I00
Ntp5428
a(S'TRandomGenerator'
p5429
S'randomGenerator'
p5430
S'random_generator'
p5431
S'random generator'
p5432
I0
I0
I00
Ntp5433
ag121
ag125
asg29
(dp5434
sbsS'TClustersFromDistributionsByAssessor'
p5435
(i__main__
ClassDefinition
p5436
(dp5437
g4
I1
sg5
I0
sg6
g5435
sg7
S'TClustersFromDistributions'
p5438
sg9
I00
sg10
(lp5439
sg12
(lp5440
(S'TDistributionAssessor'
p5441
S'distributionAssessor'
p5442
S'distribution_assessor'
p5443
S'column quality assessor'
p5444
I0
I0
I00
Ntp5445
a(S'TStopDistributionClustering'
p5446
S'stopCriterion'
p5447
S'stop_criterion'
p5448
S'stop criterion'
p5449
I0
I0
I00
Ntp5450
a(S'float'
p5451
S'minProfitProportion'
p5452
S'min_profit_proportion'
p5453
S'minimal merge profit'
p5454
I0
I0
I01
Ntp5455
asg29
(dp5456
sbsS'TExamplesDistance_Hamming'
p5457
(i__main__
ClassDefinition
p5458
(dp5459
g4
I1
sg5
I0
sg6
g5457
sg7
S'TExamplesDistance'
p5460
sg9
I00
sg10
(lp5461
sg12
(lp5462
(S'bool'
p5463
S'ignoreClass'
p5464
S'ignore_class'
p5465
S'if true (default), class value is ignored when computing distances'
p5466
I0
I0
I01
Ntp5467
a(S'bool'
p5468
S'ignoreUnknowns'
p5469
S'ignore_unknowns'
p5470
S'if true (default: false) unknown values are ignored in computation'
p5471
I0
I0
I01
Ntp5472
asg29
(dp5473
sbsS'TColumnAssessor_Kramer'
p5474
(i__main__
ClassDefinition
p5475
(dp5476
g4
I1
sg5
I0
sg6
g5474
sg7
S'TColumnAssessor'
p5477
sg9
I00
sg10
(lp5478
sg12
(lp5479
sg29
(dp5480
sbsS'TEVDistGetter_Python'
p5481
(i__main__
ClassDefinition
p5482
(dp5483
g4
I1
sg5
I0
sg6
g5481
sg7
S'TEVDistGetter'
p5484
sg9
I00
sg10
(lp5485
sg12
(lp5486
sg29
(dp5487
sbsS'TDiscretization'
p5488
(i__main__
ClassDefinition
p5489
(dp5490
g4
I1
sg5
I0
sg6
g5488
sg7
S'TOrange'
p5491
sg9
I01
sg10
(lp5492
sg12
(lp5493
sg29
(dp5494
sbsS'TIMByRows'
p5495
(i__main__
ClassDefinition
p5496
(dp5497
g4
I1
sg5
I0
sg6
g5495
sg7
S'TOrange'
p5498
sg9
I00
sg10
(lp5499
sg12
(lp5500
(S'int'
p5501
S'varType'
p5502
S'var_type'
p5503
S' class variable type'
p5504
I0
I0
I01
S'Variable_Type'
p5505
tp5506
asg29
(dp5507
sbsS'TAssessIMQuality'
p5508
(i__main__
ClassDefinition
p5509
(dp5510
g4
I1
sg5
I0
sg6
g5508
sg7
S'TOrange'
p5511
sg9
I00
sg10
(lp5512
sg12
(lp5513
(S'TColumnAssessor'
p5514
S'columnAssessor'
p5515
S'column_assessor'
p5516
S'column quality assessor'
p5517
I0
I0
I00
Ntp5518
asg29
(dp5519
sbsS'TRule'
p5520
(i__main__
ClassDefinition
p5521
(dp5522
g4
I1
sg5
I0
sg6
g5520
sg7
S'TOrange'
p5523
sg9
I00
sg10
(lp5524
sg12
(lp5525
(S'TFilter'
p5526
S'filter'
p5527
g5527
S'stored filter for this rule'
p5528
I0
I0
I00
Ntp5529
a(S'TFilter'
p5530
S'valuesFilter'
p5531
S'values_filter'
p5532
S'Filter_values representation of main filter (sometimes needed)'
p5533
I0
I0
I00
Ntp5534
a(S'TClassifier'
p5535
S'classifier'
p5536
g5536
S'classifies an example'
p5537
I0
I0
I00
Ntp5538
a(S'TLearner'
p5539
S'learner'
p5540
g5540
S'learns a classifier from data'
p5541
I0
I0
I00
Ntp5542
a(S'TRule'
p5543
S'parentRule'
p5544
S'parent_rule'
p5545
g1294
I0
I0
I00
Ntp5546
a(S'TDistribution'
p5547
S'baseDist'
p5548
S'base_dist'
p5549
S'initial distribution'
p5550
I0
I0
I00
Ntp5551
a(S'TDistribution'
p5552
S'classDistribution'
p5553
S'class_distribution'
p5554
S'distribution of classes covered by the rule'
p5555
I0
I0
I00
Ntp5556
a(S'TExampleTable'
p5557
S'examples'
p5558
g5558
S'covered examples'
p5559
I0
I0
I00
Ntp5560
a(S'int'
p5561
S'weightID'
p5562
S'weight_ID'
p5563
S'weight for the stored examples'
p5564
I0
I0
I01
Ntp5565
a(S'float'
p5566
S'quality'
p5567
g5567
S'some measure of rule quality'
p5568
I0
I0
I01
Ntp5569
a(S'int'
p5570
S'complexity'
p5571
g5571
g1294
I0
I0
I01
Ntp5572
a(S'float'
p5573
S'chi'
p5574
g5574
g1294
I0
I0
I01
Ntp5575
a(S'int'
p5576
S'requiredConditions'
p5577
S'required_conditions'
p5578
S'conditions that are mandatory in rule - rule attribute significance avoids these'
p5579
I0
I0
I01
Ntp5580
asg29
(dp5581
sbsS'TPreprocessor_addClassNoise'
p5582
(i__main__
ClassDefinition
p5583
(dp5584
g4
I1
sg5
I0
sg6
g5582
sg7
S'TPreprocessor'
p5585
sg9
I00
sg10
(lp5586
sg12
(lp5587
(S'float'
p5588
S'proportion'
p5589
g5589
S'proportion of changed class values'
p5590
I0
I0
I01
Ntp5591
a(S'TRandomGenerator'
p5592
S'randomGenerator'
p5593
S'random_generator'
p5594
S'random number generator'
p5595
I0
I0
I00
Ntp5596
asg29
(dp5597
sbsS'TFilter'
p5598
(i__main__
ClassDefinition
p5599
(dp5600
g4
I1
sg5
I0
sg6
g5598
sg7
S'TOrange'
p5601
sg9
I01
sg10
(lp5602
sg12
(lp5603
g259
ag263
asg29
(dp5604
sbsS'TRuleBeamCandidateSelector_TakeAll'
p5605
(i__main__
ClassDefinition
p5606
(dp5607
g4
I1
sg5
I0
sg6
g5605
sg7
S'TRuleBeamCandidateSelector'
p5608
sg9
I00
sg10
(lp5609
sg12
(lp5610
sg29
(dp5611
sbsS'TPreprocessor_addMissing'
p5612
(i__main__
ClassDefinition
p5613
(dp5614
g4
I1
sg5
I0
sg6
g5612
sg7
S'TPreprocessor'
p5615
sg9
I00
sg10
(lp5616
sg12
(lp5617
(S'TVariableFloatMap'
p5618
S'proportions'
p5619
g5619
S'proportion of removed values for individual values'
p5620
I0
I0
I00
Ntp5621
a(S'float'
p5622
S'defaultProportion'
p5623
S'default_proportion'
p5624
S'default proportion of removed values (for attributes not specified above)'
p5625
I0
I0
I01
Ntp5626
a(S'int'
p5627
S'specialType'
p5628
S'special_type'
p5629
S'special value type (1=DC, 2=DK)'
p5630
I0
I0
I01
Ntp5631
a(S'TRandomGenerator'
p5632
S'randomGenerator'
p5633
S'random_generator'
p5634
S'random number generator'
p5635
I0
I0
I00
Ntp5636
asg29
(dp5637
sbsS'TThresholdDiscretizer'
p5638
(i__main__
ClassDefinition
p5639
(dp5640
g4
I1
sg5
I0
sg6
g5638
sg7
S'TDiscretizer'
p5641
sg9
I00
sg10
(lp5642
sg12
(lp5643
(S'float'
p5644
S'threshold'
p5645
g5645
S'threshold'
p5646
I0
I0
I01
Ntp5647
ag318
asg29
(dp5648
sbsS'TMakeRandomIndicesN'
p5649
(i__main__
ClassDefinition
p5650
(dp5651
g4
I1
sg5
I0
sg6
g5649
sg7
S'TMakeRandomIndices'
p5652
sg9
I00
sg10
(lp5653
sg12
(lp5654
(S'TFloatList'
p5655
g91
g91
S'probabilities of indices (last is 1-sum(p))'
p5656
I0
I0
I00
Ntp5657
ag282
ag286
ag291
asg29
(dp5658
sbsS'TValueFilter_stringList'
p5659
(i__main__
ClassDefinition
p5660
(dp5661
g4
I1
sg5
I0
sg6
g5659
sg7
S'TValueFilter'
p5662
sg9
I00
sg10
(lp5663
sg12
(lp5664
(S'TStringList'
p5665
S'values'
p5666
g5666
S'accepted values'
p5667
I0
I0
I00
Ntp5668
a(S'bool'
p5669
S'caseSensitive'
p5670
S'case_sensitive'
p5671
S'if true (default), the comparison is case sensitive'
p5672
I0
I0
I01
Ntp5673
ag2821
ag2826
asg29
(dp5674
sbsS'TDomain'
p5675
(i__main__
ClassDefinition
p5676
(dp5677
g4
I1
sg5
I0
sg6
g5675
sg7
S'TOrange'
p5678
sg9
I00
sg10
(lp5679
sg12
(lp5680
(S'TVariable'
p5681
S'classVar'
p5682
S'class_var'
p5683
S'class variable'
p5684
I01
I0
I00
Ntp5685
a(S'TVarList'
p5686
S'attributes'
p5687
(g5687
S'features'
p5688
tp5689
S' list of attributes, excluding the class'
p5690
I01
I0
I00
Ntp5691
a(S'TVarList'
p5692
S'variables'
p5693
g5693
S'list of attributes, including the class at the end of the list'
p5694
I01
I0
I00
Ntp5695
a(S'TVarList'
p5696
S'classVars'
p5697
S'class_vars'
p5698
S'list of class variables, if multiple; else None'
p5699
I01
I0
I00
Ntp5700
a(S'int'
p5701
S'version'
p5702
g5702
S"unique version identifier; it's changed each time a domain is changed"
p5703
I01
I0
I01
Ntp5704
asg29
(dp5705
sbsS'TTreePruner_SameMajority'
p5706
(i__main__
ClassDefinition
p5707
(dp5708
g4
I1
sg5
I0
sg6
g5706
sg7
S'TTreePruner'
p5709
sg9
I00
sg10
(lp5710
sg12
(lp5711
sg29
(dp5712
sbsS'TDomainDiscretization'
p5713
(i__main__
ClassDefinition
p5714
(dp5715
g4
I1
sg5
I0
sg6
g5713
sg7
S'TOrange'
p5716
sg9
I00
sg10
(lp5717
sg12
(lp5718
(S'TDiscretization'
p5719
S'discretization'
p5720
g5720
S'discretization'
p5721
I0
I0
I00
Ntp5722
asg29
(dp5723
sbsS'TTreeDescender_Python'
p5724
(i__main__
ClassDefinition
p5725
(dp5726
g4
I1
sg5
I0
sg6
g5724
sg7
S'TTreeDescender'
p5727
sg9
I00
sg10
(lp5728
sg12
(lp5729
sg29
(dp5730
sbsS'TKernelFunc'
p5731
(i__main__
ClassDefinition
p5732
(dp5733
g4
I1
sg5
I0
sg6
g5731
sg7
S'TOrange'
p5734
sg9
I01
sg10
(lp5735
sg12
(lp5736
sg29
(dp5737
sbsS'TRuleClassifierConstructor_Python'
p5738
(i__main__
ClassDefinition
p5739
(dp5740
g4
I1
sg5
I0
sg6
g5738
sg7
S'TRuleClassifierConstructor'
p5741
sg9
I00
sg10
(lp5742
sg12
(lp5743
sg29
(dp5744
sbsS'THierarchicalCluster'
p5745
(i__main__
ClassDefinition
p5746
(dp5747
g4
I1
sg5
I0
sg6
g5745
sg7
S'TOrange'
p5748
sg9
I00
sg10
(lp5749
sg12
(lp5750
(S'THierarchicalClusterList'
p5751
S'branches'
p5752
g5752
S'subclusters'
p5753
I0
I0
I00
Ntp5754
a(S'float'
p5755
S'height'
p5756
g5756
S'height'
p5757
I0
I0
I01
Ntp5758
a(S'TIntList'
p5759
S'mapping'
p5760
g5760
S'indices to the list of all elements in the clustering'
p5761
I0
I0
I00
Ntp5762
a(S'int'
p5763
S'first'
p5764
g5764
S"the index into 'elements' to the first element of the cluster"
p5765
I0
I0
I01
Ntp5766
a(S'int'
p5767
S'last'
p5768
g5768
S"the index into 'elements' to the one after the last element of the cluster"
p5769
I0
I0
I01
Ntp5770
asg29
(dp5771
sbsS'TBasketFeeder'
p5772
(i__main__
ClassDefinition
p5773
(dp5774
g4
I1
sg5
I0
sg6
g5772
sg7
S'TOrange'
p5775
sg9
I00
sg10
(lp5776
sg12
(lp5777
(S'bool'
p5778
S'dontStore'
p5779
S'dont_store'
p5780
S'disables items storing'
p5781
I0
I0
I01
Ntp5782
a(S'bool'
p5783
S'dontCheckStored'
p5784
S'dont_check_stored'
p5785
S'disables items lookup in the global cache'
p5786
I0
I0
I01
Ntp5787
a(S'TDomain'
p5788
S'domain'
p5789
g5789
S'domain where the meta attributes are stored'
p5790
I0
I0
I00
Ntp5791
a(S'TDomain'
p5792
S'sourceDomain'
p5793
S'source_domain'
p5794
S'domain with items that can be reused'
p5795
I0
I0
I00
Ntp5796
asg29
(dp5797
sbsS'TSubsetsGenerator_minMaxSize_iterator'
p5798
(i__main__
ClassDefinition
p5799
(dp5800
g4
I1
sg5
I0
sg6
g5798
sg7
S'TSubsetsGenerator_iterator'
p5801
sg9
I00
sg10
(lp5802
sg12
(lp5803
(S'int'
p5804
g4354
g4354
g1294
I01
I0
I01
Ntp5805
a(S'int'
p5806
S'max'
p5807
g5807
S'maximal subset size'
p5808
I0
I0
I01
Ntp5809
a(S'bool'
p5810
S'moreToCome'
p5811
S'more_to_come'
p5812
g1294
I01
I0
I01
Ntp5813
ag192
asg29
(dp5814
sbsS'TPreprocessor_dropMissing'
p5815
(i__main__
ClassDefinition
p5816
(dp5817
g4
I1
sg5
I0
sg6
g5815
sg7
S'TPreprocessor'
p5818
sg9
I00
sg10
(lp5819
sg12
(lp5820
sg29
(dp5821
sbsS'TComputeDomainContingency'
p5822
(i__main__
ClassDefinition
p5823
(dp5824
g4
I1
sg5
I0
sg6
g5822
sg7
S'TOrange'
p5825
sg9
I00
sg10
(lp5826
sg12
(lp5827
g28
asg29
(dp5828
sbsS'TFixedDiscretization'
p5829
(i__main__
ClassDefinition
p5830
(dp5831
g4
I1
sg5
I0
sg6
g5829
sg7
S'TDiscretization'
p5832
sg9
I00
sg10
(lp5833
sg12
(lp5834
(S'TFloatList'
p5835
S'points'
p5836
g5836
S'cut-off points'
p5837
I0
I0
I00
Ntp5838
asg29
(dp5839
sbsS'TExampleClusters'
p5840
(i__main__
ClassDefinition
p5841
(dp5842
g4
I1
sg5
I0
sg6
g5840
sg7
S'TGeneralExampleClustering'
p5843
sg9
I00
sg10
(lp5844
sg12
(lp5845
(S'TExampleCluster'
p5846
S'root'
p5847
g5847
S'root of cluster hierarchy'
p5848
I0
I0
I00
Ntp5849
a(S'float'
p5850
S'quality'
p5851
g5851
S"'quality' of clustering"
p5852
I0
I0
I01
Ntp5853
asg29
(dp5854
sbsS'TRuleDataStoppingCriteria'
p5855
(i__main__
ClassDefinition
p5856
(dp5857
g4
I1
sg5
I0
sg6
g5855
sg7
S'TOrange'
p5858
sg9
I01
sg10
(lp5859
sg12
(lp5860
sg29
(dp5861
sbsS'TPreprocessor_filter'
p5862
(i__main__
ClassDefinition
p5863
(dp5864
g4
I1
sg5
I0
sg6
g5862
sg7
S'TPreprocessor'
p5865
sg9
I00
sg10
(lp5866
sg12
(lp5867
(S'TFilter'
p5868
S'filter'
p5869
g5869
S'filter'
p5870
I0
I0
I00
Ntp5871
asg29
(dp5872
sbsS'TMakeRandomIndices2'
p5873
(i__main__
ClassDefinition
p5874
(dp5875
g4
I1
sg5
I0
sg6
g5873
sg7
S'TMakeRandomIndices'
p5876
sg9
I00
sg10
(lp5877
sg12
(lp5878
(S'float'
p5879
S'p0'
p5880
g5880
S"a proportion or a number of 0's"
p5881
I0
I0
I01
Ntp5882
ag282
ag286
ag291
asg29
(dp5883
sbsS'TLookupLearner'
p5884
(i__main__
ClassDefinition
p5885
(dp5886
g4
I1
sg5
I0
sg6
g5884
sg7
S'TLearner'
p5887
sg9
I00
sg10
(lp5888
sg12
(lp5889
(S'TLearner'
p5890
S'learnerForUnknown'
p5891
S'learner_for_unknown'
p5892
S'a learner for classifying cases not found in the table'
p5893
I0
I0
I00
Ntp5894
a(S'bool'
p5895
S'allowFastLookups'
p5896
S'allow_fast_lookups'
p5897
S'if true, it constructs LookupClassifiers for <=3 attributes'
p5898
I0
I0
I01
Ntp5899
a(S'int'
p5900
S'unknownsHandling'
p5901
S'unknowns_handling'
p5902
S'0 omit examples with unknowns, 1 distribute them, 2 keep them in table'
p5903
I0
I0
I01
Ntp5904
ag47
asg29
(dp5905
sbsS'TImputeClassifier'
p5906
(i__main__
ClassDefinition
p5907
(dp5908
g4
I1
sg5
I0
sg6
g5906
sg7
S'TClassifier'
p5909
sg9
I00
sg10
(lp5910
sg12
(lp5911
(S'TClassifierFromVar'
p5912
S'classifierFromVar'
p5913
S'classifier_from_var'
p5914
S'ClassifierFromVar that is used to retrieve defined values'
p5915
I0
I0
I00
Ntp5916
a(S'TClassifier'
p5917
S'imputer'
p5918
g5918
S'classifier that is used to determine the missing values '
p5919
I0
I0
I00
Ntp5920
ag790
ag795
asg29
(dp5921
sbsS'TMeasureAttribute_chiSquare'
p5922
(i__main__
ClassDefinition
p5923
(dp5924
g4
I1
sg5
I0
sg6
g5922
sg7
S'TMeasureAttributeFromProbabilities'
p5925
sg9
I00
sg10
(lp5926
sg12
(lp5927
(S'bool'
p5928
S'computeProbabilities'
p5929
S'compute_probabilities'
p5930
g1294
I0
I0
I01
Ntp5931
ag445
ag450
ag456
ag461
ag466
ag471
ag476
asg29
(dp5932
sbsS'TDistribution'
p5933
(i__main__
ClassDefinition
p5934
(dp5935
g4
I1
sg5
I0
sg6
g5933
sg7
S'TSomeValue'
p5936
sg9
I01
sg10
(lp5937
sg12
(lp5938
g2177
ag2181
ag2185
ag2189
ag2193
ag2198
ag2203
ag2208
asg29
(dp5939
sbsS'TTreePruner_m'
p5940
(i__main__
ClassDefinition
p5941
(dp5942
g4
I1
sg5
I0
sg6
g5940
sg7
S'TTreePruner'
p5943
sg9
I00
sg10
(lp5944
sg12
(lp5945
(S'float'
p5946
g991
g991
S'm for m-estimate'
p5947
I0
I0
I01
Ntp5948
asg29
(dp5949
sbsS'TBiModalDiscretization'
p5950
(i__main__
ClassDefinition
p5951
(dp5952
g4
I1
sg5
I0
sg6
g5950
sg7
S'TDiscretization'
p5953
sg9
I00
sg10
(lp5954
sg12
(lp5955
(S'bool'
p5956
S'splitInTwo'
p5957
S'split_in_two'
p5958
S'if true (default), flanks are merged into a single interval'
p5959
I0
I0
I01
Ntp5960
asg29
(dp5961
sbsS'TRuleBeamRefiner_Python'
p5962
(i__main__
ClassDefinition
p5963
(dp5964
g4
I1
sg5
I0
sg6
g5962
sg7
S'TRuleBeamRefiner'
p5965
sg9
I00
sg10
(lp5966
sg12
(lp5967
sg29
(dp5968
sbsS'TClassifierFromVarFD'
p5969
(i__main__
ClassDefinition
p5970
(dp5971
g4
I1
sg5
I0
sg6
g5969
sg7
S'TClassifierFD'
p5972
sg9
I00
sg10
(lp5973
sg12
(lp5974
(S'int'
p5975
S'position'
p5976
g5976
S'position of the attribute in domain'
p5977
I0
I0
I01
Ntp5978
a(S'TTransformValue'
p5979
S'transformer'
p5980
g5980
S'transformer'
p5981
I0
I0
I00
Ntp5982
a(S'TDistribution'
p5983
S'distributionForUnknown'
p5984
S'distribution_for_unknown'
p5985
S'distribution for unknown value'
p5986
I0
I0
I00
Ntp5987
a(S'bool'
p5988
S'transformUnknowns'
p5989
S'transform_unknowns'
p5990
S'if false (default is true), unknowns stay unknown or are changed into distribution if given'
p5991
I0
I0
I01
Ntp5992
ag900
ag790
ag795
asg29
(dp5993
sbsS'TImputer_model'
p5994
(i__main__
ClassDefinition
p5995
(dp5996
g4
I1
sg5
I0
sg6
g5994
sg7
S'TImputer'
p5997
sg9
I00
sg10
(lp5998
sg12
(lp5999
(S'TClassifierList'
p6000
S'models'
p6001
g6001
S'classifiers'
p6002
I0
I0
I00
Ntp6003
asg29
(dp6004
sbsS'TFeatureByDistributions'
p6005
(i__main__
ClassDefinition
p6006
(dp6007
g4
I1
sg5
I0
sg6
g6005
sg7
S'TFeatureInducer'
p6008
sg9
I00
sg10
(lp6009
sg12
(lp6010
(S'TClustersFromDistributions'
p6011
S'clustersFromDistributions'
p6012
S'clusters_from_distributions'
p6013
S'clustering algorithm'
p6014
I0
I0
I00
Ntp6015
a(S'int'
p6016
S'completion'
p6017
g6017
S' decides how to determine the class for points not covered by any cluster'
p6018
I0
I0
I01
S'FeatureByDistributions_Completion'
p6019
tp6020
asg29
(dp6021
S'Completion'
p6022
(lp6023
(S'NoCompletion'
p6024
S'completion_no'
p6025
tp6026
a(S'CompletionByDefault'
p6027
S'completion_default'
p6028
tp6029
a(S'CompletionByBayes'
p6030
S'completion_bayes'
p6031
tp6032
assbsS'TPreprocessor_takeMissing'
p6033
(i__main__
ClassDefinition
p6034
(dp6035
g4
I1
sg5
I0
sg6
g6033
sg7
S'TPreprocessor'
p6036
sg9
I00
sg10
(lp6037
sg12
(lp6038
sg29
(dp6039
sbsS'TTreeDescender_UnknownToBranch'
p6040
(i__main__
ClassDefinition
p6041
(dp6042
g4
I1
sg5
I0
sg6
g6040
sg7
g2213
sg9
I0
sg10
(lp6043
sg12
(lp6044
sg29
(dp6045
sbsS'TTreeSplitConstructor_Attribute'
p6046
(i__main__
ClassDefinition
p6047
(dp6048
g4
I1
sg5
I0
sg6
g6046
sg7
S'TTreeSplitConstructor_Measure'
p6049
sg9
I00
sg10
(lp6050
sg12
(lp6051
g2374
ag2379
ag1693
asg29
(dp6052
sbsS'TCostMatrix'
p6053
(i__main__
ClassDefinition
p6054
(dp6055
g4
I1
sg5
I0
sg6
g6053
sg7
S'TOrange'
p6056
sg9
I00
sg10
(lp6057
sg12
(lp6058
(S'TVariable'
p6059
S'classVar'
p6060
S'class_var'
p6061
S'attribute to which the matrix applies'
p6062
I0
I0
I00
Ntp6063
a(S'int'
p6064
S'dimension'
p6065
g6065
S'dimension (should equal classVar.noOfValues())'
p6066
I01
I0
I01
Ntp6067
asg29
(dp6068
sbsS'TFilter_sameValue'
p6069
(i__main__
ClassDefinition
p6070
(dp6071
g4
I1
sg5
I0
sg6
g6069
sg7
S'TFilter'
p6072
sg9
I00
sg10
(lp6073
sg12
(lp6074
(S'int'
p6075
S'position'
p6076
g6076
S'position of the observed attribute'
p6077
I0
I0
I01
Ntp6078
a(S'TValue'
p6079
S'value'
p6080
g6080
S'value that the selected examples should have'
p6081
I0
I0
I01
Ntp6082
ag259
ag263
asg29
(dp6083
sbsS'TExamplesDistance_Euclidean'
p6084
(i__main__
ClassDefinition
p6085
(dp6086
g4
I1
sg5
I0
sg6
g6084
sg7
S'TExamplesDistance_Normalized'
p6087
sg9
I00
sg10
(lp6088
sg12
(lp6089
(S'TDomainDistributions'
p6090
S'distributions'
p6091
g6091
S'distributions (of discrete attributes only)'
p6092
I0
I0
I00
Ntp6093
a(S'TAttributedFloatList'
p6094
S'bothSpecialDist'
p6095
S'both_special_dist'
p6096
S'distances between discrete attributes if both values are unknown'
p6097
I0
I0
I00
Ntp6098
ag136
ag140
ag144
ag148
ag153
ag157
ag162
asg29
(dp6099
sbsS'TIMConstructor'
p6100
(i__main__
ClassDefinition
p6101
(dp6102
g4
I1
sg5
I0
sg6
g6100
sg7
S'TOrange'
p6103
sg9
I01
sg10
(lp6104
sg12
(lp6105
g2613
asg29
(dp6106
sbsS'TConditionalProbabilityEstimatorConstructor_loess'
p6107
(i__main__
ClassDefinition
p6108
(dp6109
g4
I1
sg5
I0
sg6
g6107
sg7
S'TConditionalProbabilityEstimatorConstructor'
p6110
sg9
I00
sg10
(lp6111
sg12
(lp6112
(S'float'
p6113
S'windowProportion'
p6114
S'window_proportion'
p6115
S'The proportion of points in a window for LR'
p6116
I0
I0
I01
Ntp6117
a(S'int'
p6118
S'nPoints'
p6119
S'n_points'
p6120
S'The number of points on curve'
p6121
I0
I0
I01
Ntp6122
a(S'int'
p6123
S'distributionMethod'
p6124
S'distribution_method'
p6125
S" Meaning of the 'nPoints'"
p6126
I0
I0
I01
S'ConditionalProbabilityEstimatorConstructor_loess_DistributionMethod'
p6127
tp6128
asg29
(dp6129
S'DistributionMethod'
p6130
(lp6131
(S'Minimal'
p6132
S'DISTRIBUTE_MINIMAL'
p6133
tp6134
a(S'Factor'
p6135
S'DISTRIBUTE_FACTOR'
p6136
tp6137
a(S'Fixed'
p6138
S'DISTRIBUTE_FIXED'
p6139
tp6140
a(S'Uniform'
p6141
S'DISTRIBUTE_UNIFORM'
p6142
tp6143
a(S'Maximal'
p6144
S'DISTRIBUTE_MAXIMAL'
p6145
tp6146
assbsS'TTreeSplitConstructor_Threshold'
p6147
(i__main__
ClassDefinition
p6148
(dp6149
g4
I1
sg5
I0
sg6
g6147
sg7
S'TTreeSplitConstructor_Measure'
p6150
sg9
I00
sg10
(lp6151
sg12
(lp6152
g2374
ag2379
ag1693
asg29
(dp6153
sbsS'TDistanceMap'
p6154
(i__main__
ClassDefinition
p6155
(dp6156
g4
I1
sg5
I0
sg6
g6154
sg7
S'TOrange'
p6157
sg9
I00
sg10
(lp6158
sg12
(lp6159
(S'int'
p6160
S'dim'
p6161
g6161
S'bitmap dimension (in cells)'
p6162
I01
I0
I01
Ntp6163
a(S'int'
p6164
S'matrixType'
p6165
S'matrix_type'
p6166
S'0 lower, 1 upper, 2 symmetric'
p6167
I0
I0
I01
Ntp6168
a(S'TIntList'
p6169
S'elementIndices'
p6170
S'element_indices'
p6171
S'indices to elements (one for row + one at the end)'
p6172
I01
I0
I00
Ntp6173
asg29
(dp6174
sbsS'TExampleForMissing'
p6175
(i__main__
ClassDefinition
p6176
(dp6177
g4
I1
sg5
I0
sg6
g6175
sg7
S'TExample'
p6178
sg9
I00
sg10
(lp6179
sg12
(lp6180
(S'TEFMDataDescription'
p6181
S'dataDescription'
p6182
S'data_description'
p6183
S'data description'
p6184
I0
I0
I00
Ntp6185
ag2781
ag2784
asg29
(dp6186
sbsS'TCostLearner'
p6187
(i__main__
ClassDefinition
p6188
(dp6189
g4
I1
sg5
I0
sg6
g6187
sg7
S'TMajorityLearner'
p6190
sg9
I00
sg10
(lp6191
sg12
(lp6192
(S'TCostMatrix'
p6193
S'cost'
p6194
g6194
S'cost matrix'
p6195
I0
I0
I00
Ntp6196
ag3693
ag3698
ag47
asg29
(dp6197
sbsS'TPreprocessor_drop'
p6198
(i__main__
ClassDefinition
p6199
(dp6200
g4
I1
sg5
I0
sg6
g6198
sg7
S'TPreprocessor'
p6201
sg9
I00
sg10
(lp6202
sg12
(lp6203
(S'TVariableFilterMap'
p6204
S'values'
p6205
g6205
S'variable-filter pairs'
p6206
I0
I0
I00
Ntp6207
a(S'bool'
p6208
S'conjunction'
p6209
g6209
S'decides whether to take conjunction or disjunction of values'
p6210
I0
I0
I01
Ntp6211
asg29
(dp6212
sbsS'TPreprocessor_addNoise'
p6213
(i__main__
ClassDefinition
p6214
(dp6215
g4
I1
sg5
I0
sg6
g6213
sg7
S'TPreprocessor'
p6216
sg9
I00
sg10
(lp6217
sg12
(lp6218
(S'TVariableFloatMap'
p6219
S'proportions'
p6220
g6220
S'proportion of changed values for individual attributes'
p6221
I0
I0
I00
Ntp6222
a(S'float'
p6223
S'defaultProportion'
p6224
S'default_proportion'
p6225
S'default proportion of changed values (for attributes not specified above)'
p6226
I0
I0
I01
Ntp6227
a(S'TRandomGenerator'
p6228
S'randomGenerator'
p6229
S'random_generator'
p6230
S'random number generator'
p6231
I0
I0
I00
Ntp6232
asg29
(dp6233
sbsS'TColumnAssessor_mf'
p6234
(i__main__
ClassDefinition
p6235
(dp6236
g4
I1
sg5
I0
sg6
g6234
sg7
S'TColumnAssessor'
p6237
sg9
I00
sg10
(lp6238
sg12
(lp6239
(S'float'
p6240
g991
g991
S'm for m-estimate'
p6241
I0
I0
I01
Ntp6242
asg29
(dp6243
sbsS'TSubsetsGenerator'
p6244
(i__main__
ClassDefinition
p6245
(dp6246
g4
I1
sg5
I0
sg6
g6244
sg7
S'TOrange'
p6247
sg9
I01
sg10
(lp6248
sg12
(lp6249
g2346
asg29
(dp6250
sbsS'TPreprocessor_addCensorWeight'
p6251
(i__main__
ClassDefinition
p6252
(dp6253
g4
I1
sg5
I0
sg6
g6251
sg7
S'TPreprocessor'
p6254
sg9
I00
sg10
(lp6255
sg12
(lp6256
(S'TVariable'
p6257
S'outcomeVar'
p6258
S'outcome_var'
p6259
S'outcome variable'
p6260
I0
I0
I00
Ntp6261
a(S'TVariable'
p6262
S'timeVar'
p6263
S'time_var'
p6264
S'time variable'
p6265
I0
I0
I00
Ntp6266
a(S'TValue'
p6267
S'eventValue'
p6268
S'event_value'
p6269
S'event (fail) value'
p6270
I0
I0
I01
Ntp6271
a(S'int'
p6272
S'method'
p6273
g6273
S' weighting method'
p6274
I0
I0
I01
S'Preprocessor_addCensorWeight_Method'
p6275
tp6276
a(S'float'
p6277
S'maxTime'
p6278
S'max_time'
p6279
S'maximal time'
p6280
I0
I0
I01
Ntp6281
a(S'bool'
p6282
S'addComplementary'
p6283
S'add_complementary'
p6284
S'if true (default is false), complementary examples are added for censored examples'
p6285
I0
I0
I01
Ntp6286
asg29
(dp6287
S'Method'
p6288
(lp6289
(S'Linear'
p6290
S'TPreprocessor_addCensorWeight::linear'
p6291
tp6292
a(S'KM'
p6293
S'TPreprocessor_addCensorWeight::km'
p6294
tp6295
a(S'Bayes'
p6296
S'TPreprocessor_addCensorWeight::bayes'
p6297
tp6298
assbsS'TGaussianDistribution'
p6299
(i__main__
ClassDefinition
p6300
(dp6301
g4
I1
sg5
I0
sg6
g6299
sg7
S'TDistribution'
p6302
sg9
I00
sg10
(lp6303
sg12
(lp6304
(S'float'
p6305
S'mean'
p6306
g6306
S'mu'
p6307
I0
I0
I01
Ntp6308
a(S'float'
p6309
S'sigma'
p6310
g6310
S'sigma'
p6311
I0
I0
I01
Ntp6312
ag2177
ag2181
ag2185
ag2189
ag2193
ag2198
ag2203
ag2208
asg29
(dp6313
sbsS'TProbabilityEstimator'
p6314
(i__main__
ClassDefinition
p6315
(dp6316
g4
I1
sg5
I0
sg6
g6314
sg7
S'TOrange'
p6317
sg9
I01
sg10
(lp6318
sg12
(lp6319
g713
ag718
asg29
(dp6320
sbsS'TPreprocessor'
p6321
(i__main__
ClassDefinition
p6322
(dp6323
g4
I1
sg5
I0
sg6
g6321
sg7
S'TOrange'
p6324
sg9
I01
sg10
(lp6325
sg12
(lp6326
sg29
(dp6327
sbsS'TExampleGenerator'
p6328
(i__main__
ClassDefinition
p6329
(dp6330
g4
I1
sg5
I0
sg6
g6328
sg7
S'TOrange'
p6331
sg9
I01
sg10
(lp6332
sg12
(lp6333
g121
ag125
asg29
(dp6334
sbsS'TGeneralExampleClustering'
p6335
(i__main__
ClassDefinition
p6336
(dp6337
g4
I1
sg5
I0
sg6
g6335
sg7
S'TOrange'
p6338
sg9
I01
sg10
(lp6339
sg12
(lp6340
sg29
(dp6341
sbs.