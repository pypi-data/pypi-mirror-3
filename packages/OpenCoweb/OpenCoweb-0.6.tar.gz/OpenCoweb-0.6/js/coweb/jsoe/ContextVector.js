define(["coweb/jsoe/ContextDifference"],function(a){var b=function(a){if(typeof a.count!=="undefined")this.sites=[],this.growTo(a.count);else if(a.contextVector)this.sites=a.contextVector.copySites();else if(a.sites)this.sites=a.sites.slice();else if(a.state)this.sites=a.state;else throw new Error("uninitialized context vector")};b.prototype.toString=function(){return"["+this.sites.toString()+"]"},b.prototype.getState=function(){return this.sites},b.prototype.copy=function(){return new b({contextVector:this})},b.prototype.copySites=function(){return this.sites.slice()},b.prototype.subtract=function(b){var c=new a;for(var d=0;d<this.sites.length;d++){var e=this.getSeqForSite(d),f=b.getSeqForSite(d);e-f>0&&c.addRange(d,f+1,e+1)}return c},b.prototype.oldestDifference=function(b){var c=new a;for(var d=0;d<this.sites.length;d++){var e=this.getSeqForSite(d),f=b.getSeqForSite(d);e-f>0&&c.addSiteSeq(d,f+1)}return c},b.prototype.growTo=function(a){for(var b=this.sites.length;b<a;b++)this.sites.push(0)},b.prototype.getSeqForSite=function(a){this.sites.length<=a&&this.growTo(a+1);return this.sites[a]},b.prototype.setSeqForSite=function(a,b){this.sites.length<=a&&this.growTo(a+1),this.sites[a]=b},b.prototype.getSize=function(){return this.sites.length},b.prototype.equals=function(a){var b=this.sites,c=a.sites,d=Math.max(b.length,c.length);for(var e=0;e<d;e++){var f=e<b.length?b[e]:0,g=e<c.length?c[e]:0;if(f!==g)return!1}return!0},b.prototype.compare=function(a){var b=this.sites,c=a.sites,d=Math.max(b.length,c.length);for(var e=0;e<d;e++){var f=e<b.length?b[e]:0,g=e<c.length?c[e]:0;if(f<g)return-1;if(f>g)return 1}return 0};return b})