<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE rdf:RDF [
    <!ENTITY rdf     "http://www.w3.org/1999/02/22-rdf-syntax-ns#" >
    <!ENTITY rdfs    "http://www.w3.org/2000/01/rdf-schema#" >
    <!ENTITY owl     "http://www.w3.org/2002/07/owl#" >
    <!ENTITY xsd     "http://www.w3.org/2001/XMLSchema#" >
    <!ENTITY xml     "http://www.w3.org/XML/1998/namespace" >
    <!ENTITY rdfg    "http://www.w3.org/2004/03/trix/rdfg-1/" >
    <!ENTITY ore     "http://www.openarchives.org/ore/terms/" >
    <!ENTITY ao      "http://purl.org/ao/" >
    <!ENTITY dcterms "http://purl.org/dc/terms/" >
    <!ENTITY foaf    "http://xmlns.com/foaf/0.1/" >
    <!ENTITY ro      "http://purl.org/wf4ever/ro#" >
    <!ENTITY wfprov  "http://purl.org/wf4ever/wfprov#" >
    <!ENTITY wfdesc  "http://purl.org/wf4ever/wfdesc#" >
    <!ENTITY minim   "http://purl.org/minim/minim#" >
]>

<rdf:RDF xmlns="."
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
     xmlns:owl="http://www.w3.org/2002/07/owl#"
     xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
     xmlns:xml="http://www.w3.org/XML/1998/namespace"
     xmlns:rdfg="http://www.w3.org/2004/03/trix/rdfg-1/"
     xmlns:ore="http://www.openarchives.org/ore/terms/"
     xmlns:ao="http://purl.org/ao/"
     xmlns:dcterms="http://purl.org/dc/terms/"
     xmlns:foaf="http://xmlns.com/foaf/0.1/"
     xmlns:ro="http://purl.org/wf4ever/ro#"
     xmlns:wfprov="http://purl.org/wf4ever/wfprov#"
     xmlns:wfdesc="http://purl.org/wf4ever/wfdesc#"
     xmlns:minim="&minim;"
>

  <!-- Target for Minimum information requirement 
  
       Minim invokes minimum information models on for a specified purpose
       relating to a specified target.  The requirement may apply to some
       resource other than the specified target.
       
       For example, in this case, the requirement to create the 
       UserRequirements-gen.json file is that a given Minim model 
       must be satisfied by the Research Object.
    -->
  <rdf:Description rdf:about="docs/UserRequirements-astro.csv">
    <minim:hasConstraint>
      <minim:Constraint rdf:about="#create/docs/UserRequirements-astro.csv">
        <minim:forPurpose>create UserRequirements-astro.csv</minim:forPurpose>
        <minim:onResource rdf:resource="." />
        <minim:toModel rdf:resource="#runnableRequirementRO" />
      </minim:Constraint>
    </minim:hasConstraint>
  </rdf:Description>

  <!-- Target with missing MUST requirement
    -->
  <rdf:Description rdf:about="docs/UserRequirements-bio.csv">
    <minim:hasConstraint>
      <minim:Constraint rdf:about="#create/docs/UserRequirements-bio.csv">
        <minim:forPurpose>create UserRequirements-bio.csv</minim:forPurpose>
        <minim:onResource rdf:resource="." />
        <minim:toModel rdf:resource="#missingMustRequirement" />
      </minim:Constraint>
    </minim:hasConstraint>
  </rdf:Description>

  <!-- Target with missing SHOULD requirement
    -->
  <rdf:Description rdf:about="docs/UserRequirements-bio.html">
    <minim:hasConstraint>
      <minim:Constraint rdf:about="#create/docs/UserRequirements-bio.html">
        <minim:forPurpose>create UserRequirements-bio.html</minim:forPurpose>
        <minim:onResource rdf:resource="." />
        <minim:toModel rdf:resource="#missingShouldRequirement" />
      </minim:Constraint>
    </minim:hasConstraint>
  </rdf:Description>

  <!-- Target with missing MAY requirement
    -->
  <rdf:Description rdf:about="docs/UserRequirements-bio.pdf">
    <minim:hasConstraint>
      <minim:Constraint rdf:about="#create/docs/UserRequirements-bio.pdf">
        <minim:forPurpose>create UserRequirements-bio.pdf</minim:forPurpose>
        <minim:onResource rdf:resource="." />
        <minim:toModel rdf:resource="#missingMayRequirement" />
      </minim:Constraint>
    </minim:hasConstraint>
  </rdf:Description>

  <!-- Requirements fully satisfied by test RO
    -->
  <minim:Model rdf:about="#runnableRequirementRO">
    <rdfs:label>Runnable Requirements RO</rdfs:label>
    <rdfs:comment>
      This model defines information that must be available for the requirements Research Object to be runnable.
    </rdfs:comment>

    <minim:hasMustRequirement>
      <minim:Requirement rdf:about="#environment-software/lpod-show">
        <rdfs:label>lpod-show command</rdfs:label>
        <rdfs:comment>
          Require that lpod-show.py command is present (from http://lpod-project.org/).
          This command dumps CSV data from an OpenOffice Calc spreadsheet document.
        </rdfs:comment>
        <minim:isDerivedBy>
          <minim:SoftwareEnvironmentRule>
            <minim:command>lpod-show.py --version</minim:command>
            <minim:response>0.9.3</minim:response>
            <minim:derives rdf:resource="#environment-software/lpod-show" />
          </minim:SoftwareEnvironmentRule>
        </minim:isDerivedBy>
      </minim:Requirement>
    </minim:hasMustRequirement>
       
    <minim:hasMustRequirement>
      <minim:Requirement rdf:about="#isPresent/data/UserRequirements-astro.ods">
        <rdfs:label>aggregates data/UserRequirements-astro.ods</rdfs:label>
        <minim:isDerivedBy>
          <minim:DataRequirementRule>
            <minim:aggregates rdf:resource="data/UserRequirements-astro.ods" />
            <minim:derives rdf:resource="#isPresent/data/UserRequirements-astro.ods" />
          </minim:DataRequirementRule>
        </minim:isDerivedBy>
      </minim:Requirement>
    </minim:hasMustRequirement>

    <minim:hasShouldRequirement>
      <minim:Requirement rdf:about="#isPresent/docs/reqs.css">
        <rdfs:label>aggregates docs/reqs.css</rdfs:label>
        <minim:isDerivedBy>
          <minim:DataRequirementRule>
            <minim:aggregates rdf:resource="docs/reqs.css" />
            <minim:derives rdf:resource="#isPresent/docs/reqs.css" />
          </minim:DataRequirementRule>
        </minim:isDerivedBy>
      </minim:Requirement>
    </minim:hasShouldRequirement>

  </minim:Model>

  <!-- Model with MUST requirement not satisfied by test RO
       Note: other requirements are re-used from the first model description
    -->
  <minim:Model rdf:about="#missingMustRequirement">
    <rdfs:label>Missing MUST Requirement</rdfs:label>
    <rdfs:comment>
      This model defines a MUST requirement that is missing in the test RO
    </rdfs:comment>

    <minim:hasMustRequirement rdf:resource="#environment-software/lpod-show"/>
       
    <minim:hasMustRequirement>
      <minim:Requirement rdf:about="#isPresent/data/UserRequirements-bio.ods">
        <rdfs:label>aggregates data/UserRequirements-bio.ods</rdfs:label>
        <minim:isDerivedBy>
          <minim:DataRequirementRule>
            <minim:aggregates rdf:resource="data/UserRequirements-bio.ods" />
            <minim:derives rdf:resource="#isPresent/data/UserRequirements-bio.ods" />
          </minim:DataRequirementRule>
        </minim:isDerivedBy>
      </minim:Requirement>
    </minim:hasMustRequirement>

    <minim:hasShouldRequirement rdf:resource="#isPresent/docs/reqs.css" />

  </minim:Model>

  <!-- Model with SHOULD requirement not satisfied by test RO
    -->
  <minim:Model rdf:about="#missingShouldRequirement">
    <rdfs:label>Missing SHOULD Requirement</rdfs:label>
    <rdfs:comment>
      This model defines a SHOULD requirement that is missing in the test RO
    </rdfs:comment>

    <minim:hasMustRequirement rdf:resource="#environment-software/lpod-show"/>

    <minim:hasMustRequirement rdf:resource="#isPresent/data/UserRequirements-astro.ods" />

    <minim:hasShouldRequirement>
      <minim:Requirement rdf:about="#isPresent/docs/missing.css">
        <rdfs:label>aggregates docs/missing.css</rdfs:label>
        <minim:isDerivedBy>
          <minim:DataRequirementRule>
            <minim:aggregates rdf:resource="docs/missing.css" />
            <minim:derives rdf:resource="#isPresent/docs/missing.css" />
          </minim:DataRequirementRule>
        </minim:isDerivedBy>
      </minim:Requirement>
    </minim:hasShouldRequirement>

  </minim:Model>

  <!-- Model with MAY requirement not satisfied by test RO
    -->
  <minim:Model rdf:about="#missingMayRequirement">
    <rdfs:label>Missing MAY Requirement</rdfs:label>
    <rdfs:comment>
      This model defines a MAY requirement that is missing in the test RO
    </rdfs:comment>

    <minim:hasMustRequirement rdf:resource="#environment-software/lpod-show"/>

    <minim:hasMustRequirement rdf:resource="#isPresent/data/UserRequirements-astro.ods" />

    <!-- Note: re-use of requirement that was a SHOULD for the previous target -->
    <minim:hasMayRequirement rdf:resource="#isPresent/docs/missing.css" />

  </minim:Model>

</rdf:RDF>
