Metadata-Version: 1.0
Name: pcommerce.payment.ogone
Version: 1.0a2
Summary: Ogone payment plugin for PCommerce
Home-page: http://www.gw20e.com
Author: Huub Bouma
Author-email: support@gw20e.com
License: GPL
Description: pcommerce.payment.ogone
        =======================
        
        pcommerce.payment.ogone is a plone plugin, which provides payment over ogone for PCommerce
        
        By: Huub Bouma (http://www.goldmund-wyldebeast-wunderliebe.com)
        
        The Ogone specific hashing, status, and exception code was taken from the
        **django-ogone** project (Thierry Schellenbach).
        django-ogone is licenced under the GPLV3 licence, which is included
        
        This package was mainly designed after the **pcommerce.payment.saferpay** plugin, and works almost identically, except ofcourse this uses a different payment platform.
        
        Installation instructions
        -------------------------
        
        *Step 1 - installing*
        *********************
        
        Install via the plone quickinstaller
        
        *Step 2 - configure plone*
        **************************
        
        Look at the ogone settings in the site configuration
        
        You should set the ogone specific settings and these should obviously
        match the settings as you have configured them with Ogone.
        
        - `Ogone Server URL`
        - `pspid`
        - `SHA In Passphrase`
        - `SHA Out Passphrase`
        
        *step 3 - Ogone settings*
        *************************
        
        In Ogone there are a couple of settings which you should set:
        
        :Hash algorithm: SHA-512
        :SHA-IN Pass phrase: your secret password for hashing the request
        :SHA-OUT Pass phrase: your secret password for hashing the response
        :I want to receive transaction feedback parameters on the redirection URLs: checked
        
        On the subsection `Direct HTTP server-to-server request` you can set the
        **Timing of the request** to:
        `Always deferred (not immediately after the payment).`
        This will make sure that if something goes wrong and the customer has already
        payed, it will still be processed by plone because Ogone will send the request 
        (again)
        
        Make sure that you fill in the complete URL of the `processOgone` URL, which
        will be the URL of your homepage, followed by '/processOgone', e.g.::
        
          http://my.website.com/processOgone
        
        Ogone should be able to access this URL in order for it to work.
        
        *LICENCE*
        *********
        
        This code is open source. It's licenced under the GPLV3 licence.
        See LICENCE.txt
        
        Changelog
        =========
        
        0.1a2 (unreleased)
        ------------------
        
        0.1a1 (2011-11-21)
        ------------------
        
        * First release on GW20e's private egg repository
        
        
Platform: UNKNOWN
Classifier: Programming Language :: Python
Classifier: Topic :: Software Development :: Libraries :: Python Modules
