!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ABAJO	../pilas/simbolos.py	/^ABAJO = 4$/;"	v
ARRIBA	../pilas/simbolos.py	/^ARRIBA = 3$/;"	v
Arrastrable	../pilas/habilidades.py	/^class Arrastrable(Habilidad):$/;"	c
AumentarConRueda	../pilas/habilidades.py	/^class AumentarConRueda(Habilidad):$/;"	c
Avanzar	../pilas/comportamientos.py	/^class Avanzar(Comportamiento):$/;"	c
BOTON	../pilas/simbolos.py	/^BOTON = 5$/;"	v
Back	../pilas/pytweener.py	/^    class Back:$/;"	c	class:Easing
Bounce	../pilas/pytweener.py	/^    class Bounce:$/;"	c	class:Easing
Camara	../pilas/camara.py	/^class Camara(object):$/;"	c
Circ	../pilas/pytweener.py	/^    class Circ:$/;"	c	class:Easing
Circulo	../pilas/fisica.py	/^class Circulo(Figura):$/;"	c
ColisionableComoPelota	../pilas/habilidades.py	/^class ColisionableComoPelota(RebotaComoPelota):$/;"	c
Colisiones	../pilas/colisiones.py	/^class Colisiones:$/;"	c
Color	../pilas/colores.py	/^class Color:$/;"	c
Color	../pilas/fondos.py	/^class Color(Fondo):$/;"	c
Comportamiento	../pilas/comportamientos.py	/^class Comportamiento:$/;"	c
ConstanteDeDistancia	../pilas/fisica.py	/^class ConstanteDeDistancia():$/;"	c
Control	../pilas/control.py	/^class Control:$/;"	c
Cubic	../pilas/pytweener.py	/^    class Cubic:$/;"	c	class:Easing
DERECHA	../pilas/simbolos.py	/^DERECHA = 2$/;"	v
Depurador	../pilas/depurador.py	/^class Depurador:$/;"	c
Easing	../pilas/pytweener.py	/^class Easing:$/;"	c
EchoRequestHandler	../pilas/red.py	/^    class EchoRequestHandler(SocketServer.BaseRequestHandler ):$/;"	c	function:iniciar_servidor
Elastic	../pilas/pytweener.py	/^    class Elastic:$/;"	c	class:Easing
Escena	../pilas/escenas.py	/^class Escena:$/;"	c
Espacio	../pilas/fondos.py	/^class Espacio(Fondo):$/;"	c
Estudiante	../pilas/estudiante.py	/^class Estudiante:$/;"	c
Expo	../pilas/pytweener.py	/^    class Expo:$/;"	c	class:Easing
F1	../pilas/simbolos.py	/^F1='F1'$/;"	v
F10	../pilas/simbolos.py	/^F10='F10'$/;"	v
F11	../pilas/simbolos.py	/^F11='F11'$/;"	v
F12	../pilas/simbolos.py	/^F12='F12'$/;"	v
F2	../pilas/simbolos.py	/^F2='F2'$/;"	v
F3	../pilas/simbolos.py	/^F3='F3'$/;"	v
F4	../pilas/simbolos.py	/^F4='F4'$/;"	v
F5	../pilas/simbolos.py	/^F5='F5'$/;"	v
F6	../pilas/simbolos.py	/^F6='F6'$/;"	v
F7	../pilas/simbolos.py	/^F7='F7'$/;"	v
F8	../pilas/simbolos.py	/^F8='F8'$/;"	v
F9	../pilas/simbolos.py	/^F9='F9'$/;"	v
FPS	../pilas/fps.py	/^class FPS:$/;"	c
Figura	../pilas/fisica.py	/^class Figura(object):$/;"	c
Fisica	../pilas/fisica.py	/^class Fisica(object):$/;"	c
Fondo	../pilas/fondos.py	/^class Fondo(pilas.actores.Actor):$/;"	c
Girar	../pilas/comportamientos.py	/^class Girar(Comportamiento):$/;"	c
Grupo	../pilas/grupo.py	/^class Grupo(list):$/;"	c
Habilidad	../pilas/habilidades.py	/^class Habilidad:$/;"	c
IZQUIERDA	../pilas/simbolos.py	/^IZQUIERDA = 1$/;"	v
Imitar	../pilas/habilidades.py	/^class Imitar(Habilidad):$/;"	c
Interpolacion	../pilas/interpolaciones.py	/^class Interpolacion:$/;"	c
Lienzo	../pilas/lienzo.py	/^Lienzo = PizarraAbstracta/;"	v
Lineal	../pilas/interpolaciones.py	/^class Lineal(Interpolacion):$/;"	c
Linear	../pilas/pytweener.py	/^    class Linear:$/;"	c	class:Easing
ModoArea	../pilas/depurador.py	/^class ModoArea(ModoDepurador):$/;"	c
ModoDepurador	../pilas/depurador.py	/^class ModoDepurador:$/;"	c
ModoFisica	../pilas/depurador.py	/^class ModoFisica(ModoDepurador):$/;"	c
ModoInformacionDeSistema	../pilas/depurador.py	/^class ModoInformacionDeSistema(ModoDepurador):$/;"	c
ModoPosicion	../pilas/depurador.py	/^class ModoPosicion(ModoDepurador):$/;"	c
ModoPuntosDeControl	../pilas/depurador.py	/^class ModoPuntosDeControl(ModoDepurador):$/;"	c
ModoRadiosDeColision	../pilas/depurador.py	/^class ModoRadiosDeColision(ModoDepurador):$/;"	c
MoverseConElTeclado	../pilas/habilidades.py	/^class MoverseConElTeclado(Habilidad):$/;"	c
Mundo	../pilas/mundo.py	/^class Mundo:$/;"	c
Noche	../pilas/fondos.py	/^class Noche(Fondo):$/;"	c
Normal	../pilas/escenas.py	/^class Normal(Escena):$/;"	c
PATH	../pilas/utils.py	/^PATH = os.path.dirname(os.path.abspath(__file__))$/;"	v
Pasto	../pilas/fondos.py	/^class Pasto(Fondo):$/;"	c
PisaPlataformas	../pilas/habilidades.py	/^class PisaPlataformas(Habilidad):$/;"	c
PuedeExplotar	../pilas/habilidades.py	/^class PuedeExplotar(Habilidad):$/;"	c
Quad	../pilas/pytweener.py	/^    class Quad:$/;"	c	class:Easing
Quart	../pilas/pytweener.py	/^    class Quart:$/;"	c	class:Easing
Quint	../pilas/pytweener.py	/^    class Quint:$/;"	c	class:Easing
RebotaComoCaja	../pilas/habilidades.py	/^class RebotaComoCaja(Habilidad):$/;"	c
RebotaComoPelota	../pilas/habilidades.py	/^class RebotaComoPelota(Habilidad):$/;"	c
Rectangulo	../pilas/fisica.py	/^class Rectangulo(Figura):$/;"	c
Remove	../pilas/pytweener.py	/^    def Remove(self):$/;"	m	class:Tween
SELECCION	../pilas/simbolos.py	/^SELECCION = 6$/;"	v
Saltar	../pilas/comportamientos.py	/^class Saltar(Comportamiento):$/;"	c
SeMantieneEnPantalla	../pilas/habilidades.py	/^class SeMantieneEnPantalla(Habilidad):$/;"	c
SeguirAlMouse	../pilas/habilidades.py	/^class SeguirAlMouse(Habilidad):$/;"	c
SeguirClicks	../pilas/habilidades.py	/^class SeguirClicks(Habilidad):$/;"	c
Selva	../pilas/fondos.py	/^class Selva(Fondo):$/;"	c
Sine	../pilas/pytweener.py	/^    class Sine:$/;"	c	class:Easing
Strong	../pilas/pytweener.py	/^    class Strong:$/;"	c	class:Easing
T	../pilas/pytweener.py	/^    T = Tweener()$/;"	v
Tarde	../pilas/fondos.py	/^class Tarde(Fondo):$/;"	c
Tarea	../pilas/tareas.py	/^class Tarea:$/;"	c
TareaCondicional	../pilas/tareas.py	/^class TareaCondicional(Tarea):$/;"	c
Tareas	../pilas/tareas.py	/^class Tareas:$/;"	c
Tween	../pilas/pytweener.py	/^class Tween(object):$/;"	c
TweenTestObject	../pilas/pytweener.py	/^class TweenTestObject:$/;"	c
Tweenable	../pilas/pytweener.py	/^class Tweenable:$/;"	c
Tweener	../pilas/pytweener.py	/^class Tweener:$/;"	c
VERSION	../pilas/pilasversion.py	/^VERSION = '0.55'$/;"	v
Volley	../pilas/fondos.py	/^class Volley(Fondo):$/;"	c
XmlNode	../pilas/xmlreader.py	/^class XmlNode:$/;"	c
___FPS	../pilas/fps.py	/^class ___FPS:$/;"	c
__crear_motor	../pilas/__init__.py	/^def __crear_motor(usar_motor):$/;"	f	file:
__getattr__	../pilas/grupo.py	/^    def __getattr__(self, attr):$/;"	m	class:Grupo	file:
__init__	../pilas/camara.py	/^    def __init__(self, motor):$/;"	m	class:Camara
__init__	../pilas/colisiones.py	/^    def __init__(self):$/;"	m	class:Colisiones
__init__	../pilas/colores.py	/^    def __init__(self, r, g, b, a=255):$/;"	m	class:Color
__init__	../pilas/comportamientos.py	/^    def __init__(self, delta, velocidad):$/;"	m	class:Girar
__init__	../pilas/comportamientos.py	/^    def __init__(self, pasos, velocidad=5):$/;"	m	class:Avanzar
__init__	../pilas/comportamientos.py	/^    def __init__(self, velocidad_inicial=10):$/;"	m	class:Saltar
__init__	../pilas/control.py	/^    def __init__(self):$/;"	m	class:Control
__init__	../pilas/depurador.py	/^    def __init__(self, depurador):$/;"	m	class:ModoDepurador
__init__	../pilas/depurador.py	/^    def __init__(self, depurador):$/;"	m	class:ModoInformacionDeSistema
__init__	../pilas/depurador.py	/^    def __init__(self, depurador):$/;"	m	class:ModoPosicion
__init__	../pilas/depurador.py	/^    def __init__(self, lienzo, fps):$/;"	m	class:Depurador
__init__	../pilas/escenas.py	/^    def __init__(self):$/;"	m	class:Escena
__init__	../pilas/escenas.py	/^    def __init__(self, color_de_fondo=None):$/;"	m	class:Normal
__init__	../pilas/estudiante.py	/^    def __init__(self):$/;"	m	class:Estudiante
__init__	../pilas/fisica.py	/^    def __init__(self, area, gravedad=(0, -90)):$/;"	m	class:Fisica
__init__	../pilas/fisica.py	/^    def __init__(self, figura_1, figura_2, fisica=None):$/;"	m	class:ConstanteDeDistancia
__init__	../pilas/fisica.py	/^    def __init__(self, x, y, ancho, alto, dinamica=True, densidad=1.0, $/;"	m	class:Rectangulo
__init__	../pilas/fisica.py	/^    def __init__(self, x, y, radio, dinamica=True, densidad=1.0, $/;"	m	class:Circulo
__init__	../pilas/fondos.py	/^    def __init__(self):$/;"	m	class:Espacio
__init__	../pilas/fondos.py	/^    def __init__(self):$/;"	m	class:Noche
__init__	../pilas/fondos.py	/^    def __init__(self):$/;"	m	class:Pasto
__init__	../pilas/fondos.py	/^    def __init__(self):$/;"	m	class:Selva
__init__	../pilas/fondos.py	/^    def __init__(self):$/;"	m	class:Tarde
__init__	../pilas/fondos.py	/^    def __init__(self):$/;"	m	class:Volley
__init__	../pilas/fondos.py	/^    def __init__(self, color):$/;"	m	class:Color
__init__	../pilas/fondos.py	/^    def __init__(self, imagen):$/;"	m	class:Fondo
__init__	../pilas/fps.py	/^    def __init__(self, fps, usar_modo_economico):$/;"	m	class:FPS
__init__	../pilas/fps.py	/^    def __init__(self, fps, usar_modo_economico):$/;"	m	class:___FPS
__init__	../pilas/habilidades.py	/^    def __init__(self, receptor):$/;"	m	class:Arrastrable
__init__	../pilas/habilidades.py	/^    def __init__(self, receptor):$/;"	m	class:AumentarConRueda
__init__	../pilas/habilidades.py	/^    def __init__(self, receptor):$/;"	m	class:ColisionableComoPelota
__init__	../pilas/habilidades.py	/^    def __init__(self, receptor):$/;"	m	class:Habilidad
__init__	../pilas/habilidades.py	/^    def __init__(self, receptor):$/;"	m	class:MoverseConElTeclado
__init__	../pilas/habilidades.py	/^    def __init__(self, receptor):$/;"	m	class:PisaPlataformas
__init__	../pilas/habilidades.py	/^    def __init__(self, receptor):$/;"	m	class:PuedeExplotar
__init__	../pilas/habilidades.py	/^    def __init__(self, receptor):$/;"	m	class:RebotaComoCaja
__init__	../pilas/habilidades.py	/^    def __init__(self, receptor):$/;"	m	class:RebotaComoPelota
__init__	../pilas/habilidades.py	/^    def __init__(self, receptor):$/;"	m	class:SeguirAlMouse
__init__	../pilas/habilidades.py	/^    def __init__(self, receptor):$/;"	m	class:SeguirClicks
__init__	../pilas/habilidades.py	/^    def __init__(self, receptor, objeto_a_imitar):$/;"	m	class:Imitar
__init__	../pilas/interpolaciones.py	/^    def __init__(self, values, duration, delay):$/;"	m	class:Lineal
__init__	../pilas/mundo.py	/^    def __init__(self, motor, ancho, alto, titulo, fps=60, economico=True, $/;"	m	class:Mundo
__init__	../pilas/pytweener.py	/^    def __init__(self):$/;"	m	class:TweenTestObject
__init__	../pilas/pytweener.py	/^    def __init__(self, duration = 0.5, tween = None):$/;"	m	class:Tweener
__init__	../pilas/pytweener.py	/^    def __init__(self, obj, tduration, tweenType, completeFunction, updateFunction, delay, **kwargs):$/;"	m	class:Tween
__init__	../pilas/pytweener.py	/^    def __init__(self, start, change):$/;"	m	class:Tweenable
__init__	../pilas/tareas.py	/^    def __init__(self):$/;"	m	class:Tareas
__init__	../pilas/tareas.py	/^    def __init__(self, time_out, dt, funcion, parametros, una_vez):$/;"	m	class:Tarea
__init__	../pilas/xmlreader.py	/^    def __init__(self, domElement):$/;"	m	class:XmlNode
__neg__	../pilas/interpolaciones.py	/^    def __neg__(self):$/;"	m	class:Lineal	file:
__setattr__	../pilas/grupo.py	/^    def __setattr__(self, atributo, valor):$/;"	m	class:Grupo	file:
__str__	../pilas/colores.py	/^    def __str__(self):$/;"	m	class:Color	file:
__str__	../pilas/control.py	/^    def __str__(self):$/;"	m	class:Control	file:
_activar_modo	../pilas/depurador.py	/^    def _activar_modo(self, clase_del_modo):$/;"	m	class:Depurador
_adoptar_el_siguiente_comportamiento	../pilas/estudiante.py	/^    def _adoptar_el_siguiente_comportamiento(self):$/;"	m	class:Estudiante
_agregar	../pilas/tareas.py	/^    def _agregar(self, tarea):$/;"	m	class:Tareas
_alternar_modo	../pilas/depurador.py	/^    def _alternar_modo(self, clase_del_modo):$/;"	m	class:Depurador
_cambiar_grosor_de_bordes	../pilas/depurador.py	/^    def _cambiar_grosor_de_bordes(self, cambio):$/;"	m	class:Depurador
_desactivar_modo	../pilas/depurador.py	/^    def _desactivar_modo(self, clase_del_modo):$/;"	m	class:Depurador
_get_x	../pilas/camara.py	/^    def _get_x(self):$/;"	m	class:Camara
_get_y	../pilas/camara.py	/^    def _get_y(self):$/;"	m	class:Camara
_mostrar_cuadros_por_segundo	../pilas/depurador.py	/^    def _mostrar_cuadros_por_segundo(self, motor):$/;"	m	class:Depurador
_mostrar_nombres_de_modos	../pilas/depurador.py	/^    def _mostrar_nombres_de_modos(self, motor):$/;"	m	class:Depurador
_mostrar_posicion_del_mouse	../pilas/depurador.py	/^    def _mostrar_posicion_del_mouse(self, motor):$/;"	m	class:Depurador
_procesar_figuras_a_eliminar	../pilas/fisica.py	/^    def _procesar_figuras_a_eliminar(self):$/;"	m	class:Fisica
_set_x	../pilas/camara.py	/^    def _set_x(self, x):$/;"	m	class:Camara
_set_y	../pilas/camara.py	/^    def _set_y(self, y):$/;"	m	class:Camara
_verificar_colisiones_en_tupla	../pilas/colisiones.py	/^    def _verificar_colisiones_en_tupla(self, tupla):$/;"	m	class:Colisiones
abrir_cargador	../pilas/__init__.py	/^def abrir_cargador():$/;"	f
actualiza_modo_depuracion	../pilas/eventos.py	/^actualiza_modo_depuracion = dispatch.Signal(providing_args=[])$/;"	v
actualizar	../pilas/comportamientos.py	/^    def actualizar(self):$/;"	m	class:Avanzar
actualizar	../pilas/comportamientos.py	/^    def actualizar(self):$/;"	m	class:Comportamiento
actualizar	../pilas/comportamientos.py	/^    def actualizar(self):$/;"	m	class:Girar
actualizar	../pilas/comportamientos.py	/^    def actualizar(self):$/;"	m	class:Saltar
actualizar	../pilas/eventos.py	/^actualizar = dispatch.Signal(providing_args=[])$/;"	v
actualizar	../pilas/fisica.py	/^    def actualizar(self):$/;"	m	class:Fisica
actualizar	../pilas/fps.py	/^    def actualizar(self):$/;"	m	class:FPS
actualizar	../pilas/fps.py	/^    def actualizar(self):$/;"	m	class:___FPS
actualizar	../pilas/habilidades.py	/^    def actualizar(self):$/;"	m	class:ColisionableComoPelota
actualizar	../pilas/habilidades.py	/^    def actualizar(self):$/;"	m	class:Habilidad
actualizar	../pilas/habilidades.py	/^    def actualizar(self):$/;"	m	class:Imitar
actualizar	../pilas/habilidades.py	/^    def actualizar(self):$/;"	m	class:PisaPlataformas
actualizar	../pilas/habilidades.py	/^    def actualizar(self):$/;"	m	class:SeMantieneEnPantalla
actualizar	../pilas/tareas.py	/^    def actualizar(self, dt):$/;"	m	class:Tareas
actualizar_comportamientos	../pilas/estudiante.py	/^    def actualizar_comportamientos(self):$/;"	m	class:Estudiante
actualizar_habilidades	../pilas/estudiante.py	/^    def actualizar_habilidades(self):$/;"	m	class:Estudiante
actualizar_simuladores	../pilas/mundo.py	/^    def actualizar_simuladores(self, evento):$/;"	m	class:Mundo
addTween	../pilas/pytweener.py	/^    def addTween(self, obj, **kwargs):$/;"	m	class:Tweener
addTweenNoArgs	../pilas/pytweener.py	/^    def addTweenNoArgs(self, obj, function, initial_value, value, **kwargs):$/;"	m	class:Tweener
agregar	../pilas/colisiones.py	/^    def agregar(self, grupo_a, grupo_b, funcion_a_llamar):$/;"	m	class:Colisiones
agregar_tarea	../pilas/mundo.py	/^    def agregar_tarea(self, time_out, funcion, *parametros):$/;"	m	class:Mundo
agregar_tarea_siempre	../pilas/mundo.py	/^    def agregar_tarea_siempre(self, time_out, function, *params): $/;"	m	class:Mundo
agregar_tarea_una_vez	../pilas/mundo.py	/^    def agregar_tarea_una_vez(self, time_out, function, *params): $/;"	m	class:Mundo
amarillo	../pilas/colores.py	/^amarillo = Color(255, 255, 0)$/;"	v
anterior_texto	../pilas/__init__.py	/^anterior_texto = None$/;"	v
apply	../pilas/interpolaciones.py	/^    def apply(self, target, function):$/;"	m	class:Lineal
aprender	../pilas/estudiante.py	/^    def aprender(self, classname, *k, **w):$/;"	m	class:Estudiante
avisar	../pilas/__init__.py	/^def avisar(mensaje):$/;"	f
azul	../pilas/colores.py	/^azul = Color(0, 0, 255)$/;"	v
azul_transparente	../pilas/colores.py	/^azul_transparente = Color(0, 0, 255, 160)$/;"	v
azuloscuro	../pilas/colores.py	/^azuloscuro = Color(0, 0, 128)$/;"	v
bg	../pilas/__init__.py	/^bg = None$/;"	v
blanco	../pilas/colores.py	/^blanco = Color(255, 255, 255)$/;"	v
blanco	../pilas/colores.py	/^blanco = Color(255, 255, 255, 160)$/;"	v
cambiar_de_escala	../pilas/habilidades.py	/^    def cambiar_de_escala(self, evento):$/;"	m	class:AumentarConRueda
cargar	../pilas/imagenes.py	/^def cargar(ruta):$/;"	f
cargar	../pilas/sonidos.py	/^def cargar(ruta):$/;"	f
cargar_autocompletado	../pilas/utils.py	/^def cargar_autocompletado():$/;"	f
cargar_grilla	../pilas/imagenes.py	/^def cargar_grilla(ruta, columnas=1, filas=1):$/;"	f
cargar_imagen	../pilas/imagenes.py	/^cargar_imagen = cargar$/;"	v
cargar_lienzo	../pilas/imagenes.py	/^def cargar_lienzo():$/;"	f
cargar_superficie	../pilas/imagenes.py	/^def cargar_superficie(ancho, alto):$/;"	f
changed	../pilas/pytweener.py	/^    changed = False$/;"	v
click_de_mouse	../pilas/eventos.py	/^click_de_mouse = dispatch.Signal(providing_args=['button', 'x', 'y'])$/;"	v
colisionan	../pilas/utils.py	/^def colisionan(a, b):$/;"	f
comienza_a_arrastrar	../pilas/habilidades.py	/^    def comienza_a_arrastrar(self):$/;"	m	class:Arrastrable
comienza_dibujado	../pilas/depurador.py	/^    def comienza_dibujado(self, motor):$/;"	m	class:Depurador
comienza_dibujado	../pilas/depurador.py	/^    def comienza_dibujado(self, motor, lienzo):$/;"	m	class:ModoDepurador
complete	../pilas/pytweener.py	/^    def complete(self):$/;"	m	class:TweenTestObject
condicional	../pilas/tareas.py	/^    def condicional(self, time_out, function, params=[]):$/;"	m	class:Tareas
convertir_de_posicion_fisica_relativa	../pilas/utils.py	/^def convertir_de_posicion_fisica_relativa(x, y):$/;"	f
convertir_de_posicion_relativa_a_fisica	../pilas/utils.py	/^def convertir_de_posicion_relativa_a_fisica(x, y):$/;"	f
crear_bordes_del_escenario	../pilas/fisica.py	/^    def crear_bordes_del_escenario(self):$/;"	m	class:Fisica
crear_cuerpo	../pilas/fisica.py	/^    def crear_cuerpo(self, definicion_de_cuerpo):$/;"	m	class:Fisica
crear_grupo	../pilas/atajos.py	/^def crear_grupo(*k):$/;"	f
crear_juego	../pilas/utils.py	/^def crear_juego():$/;"	f
crear_paredes	../pilas/fisica.py	/^    def crear_paredes(self, (ancho, alto), restitucion=0):$/;"	m	class:Fisica
crear_suelo	../pilas/fisica.py	/^    def crear_suelo(self, (ancho, alto), restitucion=0):$/;"	m	class:Fisica
crear_techo	../pilas/fisica.py	/^    def crear_techo(self, (ancho, alto), restitucion=0):$/;"	m	class:Fisica
cuando_mueve_el_mouse	../pilas/depurador.py	/^    def cuando_mueve_el_mouse(self, evento):$/;"	m	class:Depurador
cuando_pulsa_tecla	../pilas/depurador.py	/^    def cuando_pulsa_tecla(self, evento):$/;"	m	class:Depurador
cuando_pulsa_una_tecla	../pilas/control.py	/^    def cuando_pulsa_una_tecla(self, evento):$/;"	m	class:Control
cuando_suelta_una_tecla	../pilas/control.py	/^    def cuando_suelta_una_tecla(self, evento):$/;"	m	class:Control
cyan	../pilas/colores.py	/^cyan = Color(0, 255, 255)$/;"	v
decodeArguments	../pilas/pytweener.py	/^    def decodeArguments(self):$/;"	m	class:Tween
definir_escena	../pilas/mundo.py	/^    def definir_escena(self, escena_nueva):$/;"	m	class:Mundo
definir_gravedad	../pilas/atajos.py	/^def definir_gravedad(x=0, y=-900):$/;"	f
definir_gravedad	../pilas/fisica.py	/^    def definir_gravedad(self, x, y):$/;"	m	class:Fisica
definir_gravedad	../pilas/fisica.py	/^def definir_gravedad(x=0, y=-90):$/;"	f
definir_rotacion	../pilas/fisica.py	/^    def definir_rotacion(self, angulo):$/;"	m	class:Figura
definir_velocidad_lineal	../pilas/fisica.py	/^    def definir_velocidad_lineal(self, dx, dy):$/;"	m	class:Figura
definir_x	../pilas/fisica.py	/^    def definir_x(self, x):$/;"	m	class:Figura
definir_y	../pilas/fisica.py	/^    def definir_y(self, y):$/;"	m	class:Figura
desordenar	../pilas/grupo.py	/^    def desordenar(self):$/;"	m	class:Grupo
dibuja_al_actor	../pilas/depurador.py	/^    def dibuja_al_actor(self, motor, actor):$/;"	m	class:Depurador
dibuja_al_actor	../pilas/depurador.py	/^    def dibuja_al_actor(self, motor, lienzo, actor):$/;"	m	class:ModoArea
dibuja_al_actor	../pilas/depurador.py	/^    def dibuja_al_actor(self, motor, lienzo, actor):$/;"	m	class:ModoDepurador
dibuja_al_actor	../pilas/depurador.py	/^    def dibuja_al_actor(self, motor, lienzo, actor):$/;"	m	class:ModoPosicion
dibuja_al_actor	../pilas/depurador.py	/^    def dibuja_al_actor(self, motor, lienzo, actor):$/;"	m	class:ModoPuntosDeControl
dibuja_al_actor	../pilas/depurador.py	/^    def dibuja_al_actor(self, motor, lienzo, actor):$/;"	m	class:ModoRadiosDeColision
dibujar	../pilas/fondos.py	/^    def dibujar(self, motor):$/;"	m	class:Color
dibujar_figuras_sobre_lienzo	../pilas/fisica.py	/^    def dibujar_figuras_sobre_lienzo(self, motor, lienzo, grosor=1):$/;"	m	class:Fisica
distancia	../pilas/utils.py	/^def distancia(a, b):$/;"	f
distancia_entre_dos_actores	../pilas/utils.py	/^def distancia_entre_dos_actores(a, b):$/;"	f
distancia_entre_dos_puntos	../pilas/utils.py	/^def distancia_entre_dos_puntos((x1, y1), (x2, y2)):$/;"	f
drag	../pilas/habilidades.py	/^    def drag(self, evento):$/;"	m	class:Arrastrable
drag_end	../pilas/habilidades.py	/^    def drag_end(self, evento):$/;"	m	class:Arrastrable
easeIn	../pilas/pytweener.py	/^        def easeIn (t, b, c, d):$/;"	m	class:Easing.Bounce
easeIn	../pilas/pytweener.py	/^        def easeIn (t, b, c, d):$/;"	m	class:Easing.Circ
easeIn	../pilas/pytweener.py	/^        def easeIn (t, b, c, d):$/;"	m	class:Easing.Cubic
easeIn	../pilas/pytweener.py	/^        def easeIn (t, b, c, d):$/;"	m	class:Easing.Quad
easeIn	../pilas/pytweener.py	/^        def easeIn (t, b, c, d):$/;"	m	class:Easing.Quart
easeIn	../pilas/pytweener.py	/^        def easeIn (t, b, c, d):$/;"	m	class:Easing.Quint
easeIn	../pilas/pytweener.py	/^        def easeIn (t, b, c, d):$/;"	m	class:Easing.Sine
easeIn	../pilas/pytweener.py	/^        def easeIn (t, b, c, d, a = 0, p = 0):$/;"	m	class:Easing.Elastic
easeIn	../pilas/pytweener.py	/^        def easeIn(t, b, c, d):$/;"	m	class:Easing.Expo
easeIn	../pilas/pytweener.py	/^        def easeIn(t, b, c, d):$/;"	m	class:Easing.Linear
easeIn	../pilas/pytweener.py	/^        def easeIn(t, b, c, d):$/;"	m	class:Easing.Strong
easeIn	../pilas/pytweener.py	/^        def easeIn(t, b, c, d, s = 1.70158):$/;"	m	class:Easing.Back
easeInOut	../pilas/pytweener.py	/^        def easeInOut (t, b, c, d):$/;"	m	class:Easing.Bounce
easeInOut	../pilas/pytweener.py	/^        def easeInOut (t, b, c, d):$/;"	m	class:Easing.Circ
easeInOut	../pilas/pytweener.py	/^        def easeInOut (t, b, c, d):$/;"	m	class:Easing.Cubic
easeInOut	../pilas/pytweener.py	/^        def easeInOut (t, b, c, d):$/;"	m	class:Easing.Quad
easeInOut	../pilas/pytweener.py	/^        def easeInOut (t, b, c, d):$/;"	m	class:Easing.Quart
easeInOut	../pilas/pytweener.py	/^        def easeInOut (t, b, c, d):$/;"	m	class:Easing.Quint
easeInOut	../pilas/pytweener.py	/^        def easeInOut (t, b, c, d):$/;"	m	class:Easing.Sine
easeInOut	../pilas/pytweener.py	/^        def easeInOut (t, b, c, d, a = 0, p = 0):$/;"	m	class:Easing.Elastic
easeInOut	../pilas/pytweener.py	/^        def easeInOut (t, b, c, d, s = 1.70158):$/;"	m	class:Easing.Back
easeInOut	../pilas/pytweener.py	/^        def easeInOut(t, b, c, d):$/;"	m	class:Easing.Expo
easeInOut	../pilas/pytweener.py	/^        def easeInOut(t, b, c, d):$/;"	m	class:Easing.Linear
easeInOut	../pilas/pytweener.py	/^        def easeInOut(t, b, c, d):$/;"	m	class:Easing.Strong
easeNone	../pilas/pytweener.py	/^        def easeNone(t, b, c, d):$/;"	m	class:Easing.Linear
easeOut	../pilas/pytweener.py	/^        def easeOut (t, b, c, d):$/;"	m	class:Easing.Bounce
easeOut	../pilas/pytweener.py	/^        def easeOut (t, b, c, d):$/;"	m	class:Easing.Circ
easeOut	../pilas/pytweener.py	/^        def easeOut (t, b, c, d):$/;"	m	class:Easing.Cubic
easeOut	../pilas/pytweener.py	/^        def easeOut (t, b, c, d):$/;"	m	class:Easing.Quad
easeOut	../pilas/pytweener.py	/^        def easeOut (t, b, c, d):$/;"	m	class:Easing.Quart
easeOut	../pilas/pytweener.py	/^        def easeOut (t, b, c, d):$/;"	m	class:Easing.Quint
easeOut	../pilas/pytweener.py	/^        def easeOut (t, b, c, d):$/;"	m	class:Easing.Sine
easeOut	../pilas/pytweener.py	/^        def easeOut (t, b, c, d, a = 0, p = 0):$/;"	m	class:Easing.Elastic
easeOut	../pilas/pytweener.py	/^        def easeOut (t, b, c, d, s = 1.70158):$/;"	m	class:Easing.Back
easeOut	../pilas/pytweener.py	/^        def easeOut(t, b, c, d):$/;"	m	class:Easing.Expo
easeOut	../pilas/pytweener.py	/^        def easeOut(t, b, c, d):$/;"	m	class:Easing.Linear
easeOut	../pilas/pytweener.py	/^        def easeOut(t, b, c, d):$/;"	m	class:Easing.Strong
eje_coordenadas	../pilas/ventana.py	/^eje_coordenadas = None$/;"	v
ejecutar	../pilas/__init__.py	/^def ejecutar(ignorar_errores=False):$/;"	f
ejecutar	../pilas/tareas.py	/^    def ejecutar(self):$/;"	m	class:Tarea
ejecutar	../pilas/tareas.py	/^    def ejecutar(self):$/;"	m	class:TareaCondicional
ejecutar_bucle_principal	../pilas/mundo.py	/^    def ejecutar_bucle_principal(self, ignorar_errores=False):$/;"	m	class:Mundo
eliminar	../pilas/fisica.py	/^    def eliminar(self):$/;"	m	class:Figura
eliminar	../pilas/habilidades.py	/^    def eliminar(self):$/;"	m	class:ColisionableComoPelota
eliminar	../pilas/habilidades.py	/^    def eliminar(self):$/;"	m	class:Habilidad
eliminar	../pilas/habilidades.py	/^    def eliminar(self):$/;"	m	class:Imitar
eliminar	../pilas/habilidades.py	/^    def eliminar(self):$/;"	m	class:PisaPlataformas
eliminar	../pilas/habilidades.py	/^    def eliminar(self):$/;"	m	class:RebotaComoCaja
eliminar	../pilas/habilidades.py	/^    def eliminar(self):$/;"	m	class:RebotaComoPelota
eliminar	../pilas/tareas.py	/^    def eliminar(self):$/;"	m	class:Tarea
eliminar_comportamientos	../pilas/estudiante.py	/^    def eliminar_comportamientos(self):$/;"	m	class:Estudiante
eliminar_figura	../pilas/fisica.py	/^    def eliminar_figura(self, figura):$/;"	m	class:Fisica
eliminar_habilidades	../pilas/estudiante.py	/^    def eliminar_habilidades(self):$/;"	m	class:Estudiante
eliminar_paredes	../pilas/fisica.py	/^    def eliminar_paredes(self):$/;"	m	class:Fisica
eliminar_suelo	../pilas/fisica.py	/^    def eliminar_suelo(self):$/;"	m	class:Fisica
eliminar_techo	../pilas/fisica.py	/^    def eliminar_techo(self):$/;"	m	class:Fisica
eliminar_y_explotar	../pilas/habilidades.py	/^    def eliminar_y_explotar(self):$/;"	m	class:PuedeExplotar
empujar	../pilas/fisica.py	/^    def empujar(self, dx, dy):$/;"	m	class:Figura
empujar	../pilas/habilidades.py	/^    def empujar(self, dx, dy):$/;"	m	class:RebotaComoPelota
es_interpolacion	../pilas/utils.py	/^def es_interpolacion(an_object):$/;"	f
esta_en_sesion_interactiva	../pilas/utils.py	/^def esta_en_sesion_interactiva():$/;"	f
fabricar	../pilas/atajos.py	/^fabricar = pilas.actores.utils.fabricar$/;"	v
finish	../pilas/pytweener.py	/^    def finish(self):$/;"	m	class:Tweener
finish	../pilas/red.py	/^        def finish(self):$/;"	m	class:iniciar_servidor.EchoRequestHandler
getAttributeValue	../pilas/xmlreader.py	/^    def getAttributeValue(self, name):$/;"	m	class:XmlNode
getChild	../pilas/xmlreader.py	/^    def getChild(self, tag):$/;"	m	class:XmlNode
getChildren	../pilas/xmlreader.py	/^    def getChildren(self, tag):$/;"	m	class:XmlNode
getData	../pilas/xmlreader.py	/^    def getData(self):$/;"	m	class:XmlNode
getRotation	../pilas/pytweener.py	/^    def getRotation(self):$/;"	m	class:TweenTestObject
getTweenable	../pilas/pytweener.py	/^    def getTweenable(self, name):$/;"	m	class:Tween
getTweensAffectingObject	../pilas/pytweener.py	/^    def getTweensAffectingObject(self, obj):$/;"	m	class:Tweener
gris	../pilas/colores.py	/^gris = Color(128, 128, 128)$/;"	v
gris_transparente	../pilas/colores.py	/^gris_transparente = Color(128, 128, 128, 160)$/;"	v
grisclaro	../pilas/colores.py	/^grisclaro = Color(192, 192, 192)$/;"	v
grisoscuro	../pilas/colores.py	/^grisoscuro = Color(100, 100, 100)$/;"	v
hacer	../pilas/estudiante.py	/^    def hacer(self, comportamiento):$/;"	m	class:Estudiante
hacer_coordenada_mundo	../pilas/utils.py	/^def hacer_coordenada_mundo(x, y):$/;"	f
hacer_coordenada_pantalla_absoluta	../pilas/utils.py	/^def hacer_coordenada_pantalla_absoluta(x, y):$/;"	f
hacer_flotante_la_ventana	../pilas/utils.py	/^def hacer_flotante_la_ventana():$/;"	f
hacer_luego	../pilas/estudiante.py	/^    def hacer_luego(self, comportamiento, repetir_por_siempre=False):$/;"	m	class:Estudiante
handle	../pilas/red.py	/^        def handle(self):$/;"	m	class:iniciar_servidor.EchoRequestHandler
hasTweens	../pilas/pytweener.py	/^    def hasTweens(self):$/;"	m	class:Tweener
imprimir_todos	../pilas/eventos.py	/^def imprimir_todos():$/;"	f
impulsar	../pilas/fisica.py	/^    def impulsar(self, dx, dy):$/;"	m	class:Figura
impulsar	../pilas/habilidades.py	/^    def impulsar(self, dx, dy):$/;"	m	class:RebotaComoPelota
inicia_modo_depuracion	../pilas/eventos.py	/^inicia_modo_depuracion = dispatch.Signal(providing_args=[]) $/;"	v
iniciar	../pilas/__init__.py	/^def iniciar(ancho=640, alto=480, titulo='Pilas', usar_motor='qtgl', $/;"	f
iniciar	../pilas/comportamientos.py	/^    def iniciar(self, receptor):$/;"	m	class:Avanzar
iniciar	../pilas/comportamientos.py	/^    def iniciar(self, receptor):$/;"	m	class:Comportamiento
iniciar	../pilas/comportamientos.py	/^    def iniciar(self, receptor):$/;"	m	class:Girar
iniciar	../pilas/comportamientos.py	/^    def iniciar(self, receptor):$/;"	m	class:Saltar
iniciar	../pilas/escenas.py	/^    def iniciar(self):$/;"	m	class:Escena
iniciar	../pilas/ventana.py	/^def iniciar(ancho, alto, titulo):$/;"	f
iniciar_servidor	../pilas/red.py	/^def iniciar_servidor():$/;"	f
inner	../pilas/utils.py	/^    def inner(*args, **kwargs):$/;"	f	function:interpolable
interpolable	../pilas/utils.py	/^def interpolable(f):$/;"	f
interpolar	../pilas/utils.py	/^def interpolar(valor_o_valores, duracion=1, demora=0, tipo='lineal'):$/;"	f
limpiar	../pilas/grupo.py	/^    def limpiar(self):$/;"	m	class:Grupo
listar_actores_en_consola	../pilas/utils.py	/^def listar_actores_en_consola():$/;"	f
magenta	../pilas/colores.py	/^magenta = Color(255, 0, 255)$/;"	v
makeRootNode	../pilas/xmlreader.py	/^def makeRootNode(xmlFileName):$/;"	f
map_a_todos	../pilas/grupo.py	/^        def map_a_todos(*k, **kw):$/;"	f	function:Grupo.__getattr__
marron	../pilas/colores.py	/^marron = Color(153, 102, 0)$/;"	v
modo_depuracion	../pilas/ventana.py	/^modo_depuracion = False$/;"	v
mover	../pilas/habilidades.py	/^    def mover(self, evento):$/;"	m	class:SeguirAlMouse
moverse_a_este_punto	../pilas/habilidades.py	/^    def moverse_a_este_punto(self, evento):$/;"	m	class:SeguirClicks
mt	../pilas/pytweener.py	/^    mt = T.addTween( tst, setRotation=500.0, tweenTime=2.5, tweenType=T.OUT_QUAD, $/;"	v
mueve_mouse	../pilas/eventos.py	/^mueve_mouse = dispatch.Signal(providing_args=['x', 'y', 'dx', 'dy'])$/;"	v
mueve_rueda	../pilas/eventos.py	/^mueve_rueda = dispatch.Signal(providing_args=['delta'])$/;"	v
mundo	../pilas/__init__.py	/^mundo = None$/;"	v
naranja	../pilas/colores.py	/^naranja = Color(255, 200, 0)$/;"	v
negro	../pilas/colores.py	/^negro = Color(0, 0, 0)$/;"	v
negro	../pilas/colores.py	/^negro = Color(0, 0, 0, 160)$/;"	v
obtener	../pilas/colores.py	/^    def obtener(self):$/;"	m	class:Color
obtener_angulo_entre	../pilas/utils.py	/^def obtener_angulo_entre(punto_a, punto_b):$/;"	f
obtener_area	../pilas/utils.py	/^def obtener_area():$/;"	f
obtener_area_de_texto	../pilas/utils.py	/^def obtener_area_de_texto(texto):$/;"	f
obtener_bordes	../pilas/utils.py	/^def obtener_bordes():$/;"	f
obtener_colisiones	../pilas/colisiones.py	/^    def obtener_colisiones(self, actor, grupo_de_actores):$/;"	m	class:Colisiones
obtener_componentes	../pilas/colores.py	/^    def obtener_componentes(self):$/;"	m	class:Color
obtener_cuadros_por_segundo	../pilas/fps.py	/^    def obtener_cuadros_por_segundo(self):$/;"	m	class:FPS
obtener_cuadros_por_segundo	../pilas/fps.py	/^    def obtener_cuadros_por_segundo(self):$/;"	m	class:___FPS
obtener_cuerpos_en	../pilas/fisica.py	/^    def obtener_cuerpos_en(self, x, y):$/;"	m	class:Fisica
obtener_distancia_al_suelo	../pilas/fisica.py	/^    def obtener_distancia_al_suelo(self, x, y, dy):$/;"	m	class:Fisica
obtener_rotacion	../pilas/fisica.py	/^    def obtener_rotacion(self):$/;"	m	class:Figura
obtener_ruta_al_recurso	../pilas/utils.py	/^def obtener_ruta_al_recurso(ruta):$/;"	f
obtener_velocidad_lineal	../pilas/fisica.py	/^    def obtener_velocidad_lineal(self):$/;"	m	class:Figura
obtener_x	../pilas/fisica.py	/^    def obtener_x(self):$/;"	m	class:Figura
obtener_y	../pilas/fisica.py	/^    def obtener_y(self):$/;"	m	class:Figura
on_key_press	../pilas/habilidades.py	/^    def on_key_press(self, evento):$/;"	m	class:MoverseConElTeclado
orden_de_tecla	../pilas/depurador.py	/^    def orden_de_tecla(self):$/;"	m	class:ModoDepurador
pause	../pilas/pytweener.py	/^    def pause( self, numSeconds=-1 ):$/;"	m	class:Tween
post_dibujar	../pilas/eventos.py	/^post_dibujar = dispatch.Signal(providing_args=[])$/;"	v
procesar_cambio_de_estado_en_la_tecla	../pilas/control.py	/^    def procesar_cambio_de_estado_en_la_tecla(self, codigo, estado):$/;"	m	class:Control
pulsa_tecla	../pilas/eventos.py	/^pulsa_tecla = dispatch.Signal(providing_args=['codigo', 'texto'])$/;"	v
pulsa_tecla_escape	../pilas/eventos.py	/^pulsa_tecla_escape = dispatch.Signal(providing_args=[])$/;"	v
reiniciar	../pilas/__init__.py	/^def reiniciar():$/;"	f
reiniciar	../pilas/fisica.py	/^    def reiniciar(self):$/;"	m	class:Fisica
reiniciar	../pilas/mundo.py	/^    def reiniciar(self):$/;"	m	class:Mundo
removeTween	../pilas/pytweener.py	/^    def removeTween(self, tweenObj):$/;"	m	class:Tweener
removeTweeningFrom	../pilas/pytweener.py	/^    def removeTweeningFrom(self, obj):$/;"	m	class:Tweener
resume	../pilas/pytweener.py	/^    def resume( self ):$/;"	m	class:Tween
rojo	../pilas/colores.py	/^rojo = Color(255, 0, 0)$/;"	v
rojo_transparente	../pilas/colores.py	/^rojo_transparente = Color(255, 0, 0, 160)$/;"	v
rosa	../pilas/colores.py	/^rosa = Color(255, 175, 175)$/;"	v
rotacion	../pilas/fisica.py	/^    rotacion = property(obtener_rotacion, definir_rotacion)$/;"	v	class:Figura
s	../pilas/pytweener.py	/^    s = time.clock()$/;"	v
sale_modo_depuracion	../pilas/eventos.py	/^sale_modo_depuracion = dispatch.Signal(providing_args=[])$/;"	v
setRotation	../pilas/pytweener.py	/^    def setRotation(self, rot):$/;"	m	class:TweenTestObject
setup	../pilas/red.py	/^        def setup(self):$/;"	m	class:iniciar_servidor.EchoRequestHandler
siempre	../pilas/tareas.py	/^    def siempre(self, time_out, function, params=[]):$/;"	m	class:Tareas
suelta_tecla	../pilas/eventos.py	/^suelta_tecla = dispatch.Signal(providing_args=['codigo', 'texto'])$/;"	v
tecla	../pilas/depurador.py	/^    tecla = "F00"$/;"	v	class:ModoDepurador
tecla	../pilas/depurador.py	/^    tecla = "F10"$/;"	v	class:ModoArea
tecla	../pilas/depurador.py	/^    tecla = "F11"$/;"	v	class:ModoFisica
tecla	../pilas/depurador.py	/^    tecla = "F12"$/;"	v	class:ModoPosicion
tecla	../pilas/depurador.py	/^    tecla = "F7"$/;"	v	class:ModoInformacionDeSistema
tecla	../pilas/depurador.py	/^    tecla = "F8"$/;"	v	class:ModoPuntosDeControl
tecla	../pilas/depurador.py	/^    tecla = "F9"$/;"	v	class:ModoRadiosDeColision
termina_click	../pilas/eventos.py	/^termina_click = dispatch.Signal(providing_args=['button', 'x', 'y'])$/;"	v
termina_de_arrastrar	../pilas/habilidades.py	/^    def termina_de_arrastrar(self):$/;"	m	class:Arrastrable
termina_dibujado	../pilas/depurador.py	/^    def termina_dibujado(self, motor):$/;"	m	class:Depurador
termina_dibujado	../pilas/depurador.py	/^    def termina_dibujado(self, motor, lienzo):$/;"	m	class:ModoDepurador
termina_dibujado	../pilas/depurador.py	/^    def termina_dibujado(self, motor, lienzo):$/;"	m	class:ModoFisica
termina_dibujado	../pilas/depurador.py	/^    def termina_dibujado(self, motor, lienzo):$/;"	m	class:ModoInformacionDeSistema
terminar	../pilas/__init__.py	/^def terminar():$/;"	f
terminar	../pilas/comportamientos.py	/^    def terminar(self):$/;"	m	class:Comportamiento
terminar	../pilas/escenas.py	/^    def terminar(self):$/;"	m	class:Escena
terminar	../pilas/mundo.py	/^    def terminar(self):$/;"	m	class:Mundo
try_to_drag	../pilas/habilidades.py	/^    def try_to_drag(self, evento):$/;"	m	class:Arrastrable
tst	../pilas/pytweener.py	/^    tst = TweenTestObject()$/;"	v
una_vez	../pilas/tareas.py	/^    def una_vez(self, time_out, function, params=[]):$/;"	m	class:Tareas
update	../pilas/pytweener.py	/^    def update(self):$/;"	m	class:TweenTestObject
update	../pilas/pytweener.py	/^    def update(self, ptime):$/;"	m	class:Tween
update	../pilas/pytweener.py	/^    def update(self, timeSinceLastFrame):$/;"	m	class:Tweener
ver	../pilas/__init__.py	/^def ver(objeto, solo_retornar=False):$/;"	f
verde	../pilas/colores.py	/^verde = Color(0, 255, 0)$/;"	v
verde_transparente	../pilas/colores.py	/^verde_transparente = Color(0, 255, 0, 160)$/;"	v
verdeoscuro	../pilas/colores.py	/^verdeoscuro = Color(0, 128, 0)$/;"	v
verificar_colisiones	../pilas/colisiones.py	/^    def verificar_colisiones(self):$/;"	m	class:Colisiones
version	../pilas/__init__.py	/^def version():$/;"	f
violeta	../pilas/colores.py	/^violeta = Color(128, 0, 255)$/;"	v
x	../pilas/camara.py	/^    x = property(_get_x, _set_x)$/;"	v	class:Camara
x	../pilas/fisica.py	/^    x = property(obtener_x, definir_x)$/;"	v	class:Figura
y	../pilas/camara.py	/^    y = property(_get_y, _set_y)$/;"	v	class:Camara
y	../pilas/fisica.py	/^    y = property(obtener_y, definir_y)$/;"	v	class:Figura
