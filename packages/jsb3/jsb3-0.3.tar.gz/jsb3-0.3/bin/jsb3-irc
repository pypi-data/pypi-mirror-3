#!/usr/bin/env python3
#
#

## bootstrap

import warnings
warnings.simplefilter("ignore")

import os, sys
sys.path.insert(0, os.getcwd())

## options parser

from jsb3.utils.opts import makeircconfig, makeircopts
from jsb3.lib.datadir import setdatadir, getdatadir

opts = makeircopts()
if opts.datadir: setdatadir(opts.datadir)

## print version

from jsb3.version import getversion
print(getversion('IRC'))


## jsb imports

from jsb3.utils.exception import handle_exception
from jsb3.lib.partyline import partyline
from jsb3.drivers.irc.bot import IRCBot
from jsb3.lib.boot import plugin_packages, boot
from jsb3.utils.log import setloglevel
from jsb3.lib.errors import NoOwnerSet
from jsb3.lib.fleet import getfleet
from jsb3.utils.mainloop import mainloop
from jsb3.lib.threads import start_new_thread
from jsb3.lib.eventhandler import mainhandler
import jsb3.lib.users as users
import jsb3

## basic imports

import logging
import time
import os

## loglevel

setloglevel(opts.loglevel or "warning", not opts.nocolors, opts.datadir)

## boot

boot(opts.datadir)

## runtime

if opts.owner:
    u = users.users_boot()
    u.make_owner(opts.owner)

cfg = makeircconfig(opts)

if opts.name: cfg.name = opts.name
else: cfg.name = "default-irc"
cfg.save()

## resume or start the bot

if opts.doresume and os.path.isfile(opts.doresume):
    logging.warn("irc - resuming from %s" % opts.doresume)
    if True:
        fleet = getfleet()
        fleet.resume(opts.doresume)
        fleet.startok.wait()
    partyline.resume(opts.doresume)
    os.unlink(opts.doresume)
else:
    try:
        bot = IRCBot(cfg)
    except NoOwnerSet as ex:
        print("owner is not set in %s - use the -o option" % str(ex))
        os._exit(1)
    if opts.channel and not opts.channel in bot.state['joinedchannels']:
        bot.state['joinedchannels'].append(opts.channel)
        bot.state.save()
    start_new_thread(bot.boot, ())


mainloop()
