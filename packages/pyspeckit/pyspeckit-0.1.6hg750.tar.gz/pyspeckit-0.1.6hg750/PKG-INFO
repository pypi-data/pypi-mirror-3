Metadata-Version: 1.1
Name: pyspeckit
Version: 0.1.6hg750
Summary: Toolkit for fitting and manipulating spectroscopic data in python
Home-page: https://pyspeckit.bitbucket.org/
Author: ['Adam Ginsburg', 'Jordan Mirocha']
Author-email: ['adam.g.ginsburg@gmail.com', 'mirochaj@gmail.com', 'pyspeckit@gmail.com']
License: UNKNOWN
Download-URL: https://bitbucket.org/pyspeckit/pyspeckit.bitbucket.org/get/tip.tar.gz
Description: PySpecKit Spectroscopic Toolkit
        -------------------------------
        `<pyspeckit.bitbucket.org>`_
        
        This is a code framework designed to allow for analysis of spectroscopic data
        from a wide variety of astronomical instruments.  It is motivated by the lack
        of general spectroscopic analysis tools applicable at multiple wavelengths
        (compare to IRAF, SPLAT, etc. - these are wavelength-specific and/or do not
        make user scripting easy).
        
        Initial implementation focuses on optical and radio applications, e.g.
        gaussian and voigt profile fitting, baseline/continuum fitting, and equivalent
        width measurements.  However, the design is meant to be extensible.  We want
        additional features to be trivial to implement.
        
        In that vein, there is a growing set of spectral models implemented.  The
        model and hyperfinemodel classes makes
        model implementation quite straightforward, if not trivial (you still have to
        plug in the right frequency offsets and relative line strengths).
        
        Plotting is straightforward, as is usually the case with matplotlib-based
        codes.  We have a few different methods of error bar plotting implemented, a
        decent (and expanding) units class for pretty printing of spectroscopic units,
        and different methods of fit plotting.
        
        We're also looking for more users to give us more use cases!  Contact us
        at pyspeckit@gmail.com
        
        
        Requirements:
        `matplotlib <http://matplotlib.sourceforge.net/>`_
        `numpy <http://numpy.scipy.org/>`_
        
        Preferably at least one of:
        `pyfits <http://www.stsci.edu/resources/software_hardware/pyfits/Download>`_
        `atpy <http://atpy.github.com/>`_
        `asciitable <http://cxc.harvard.edu/contrib/asciitable/>`_
        
        Optional:
        `scipy <http://www.scipy.org/>`_
        
        A good model for our code is `atpy`_, from which we derived inspiration for the
        "register functions" capability.
        
        Authors:
        `Adam Ginsburg <adam.g.ginsburg@gmail.com>`_
        `Jordan Mirocha <mirochaj@gmail.com>`_
        (or both of us at pyspeckit@gmail.com)
        
        The PySpecKit logo uses the Voyager 1 image of Earth known as the "Pale Blue Dot"
        [ `original source <http://visibleearth.nasa.gov/view_rec.php?id=601>`_ |  `reprocessed image <http://instructors.cwrl.utexas.edu/mcginnis/sites/instructors.cwrl.utexas.edu.mcginnis/files/pale_blue_dot2.jpg>`_ ]
        
        
        CHANGES
        *******
        
        Release 0.1.7
        ~~~~~~~~~~~~~
        
        * Added cross-correlation
        * Added (some) unit tests
        * New interactive slider widget for manipulating models (Spectrum.specfit.add_sliders())
        * Subtle but very significant bug-fix: parinfo is now a single uniform
        list, based on the ParinfoList class.
        * You can now fit based on what you see by using the 'use_window_limits=True' kwarg
        *WARNING* This changes the default behavior in interactive mode!
        
        Release 0.1.6
        ~~~~~~~~~~~~~
        
        * H2CO fit / plot wrapper
        * bugfixes
        * setup.py no longer tries to write config files
        
        Release 0.1.5
        ~~~~~~~~~~~~~
        
        * Added GBT (GBTIDL SDFITS file) and ALFALFA (ALFALFA idlsave .src) readers
        * added extinction model (just a function, not a complete model yet)
        
        Release 0.1.4
        ~~~~~~~~~~~~~
        
        * removed setuptools & distribute (they fail)
        * added hydrogen.py to models
        * first release to inherit from astropy's Spectrum1D
        
        Release 0.1.3
        ~~~~~~~~~~~~~
        
        * some internal cleanup / refactoring
        * override slicing (__getitem__ features)
        * parallel moment & fitting in Cubes repaired
        
        Release 0.1.2
        ~~~~~~~~~~~~~
        
        * added MIT license, moved mpfit and parallel_map inside pyspeckit as
        * submodules
        
        Release 0.1.1
        ~~~~~~~~~~~~~
        
        * bugfixes and versioning work
        
        Release 0.1.0
        ~~~~~~~~~~~~~
        
        * Initial creation
        
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Programming Language :: Python
Classifier: License :: OSI Approved :: MIT License
Requires: matplotlib (>=1.1.0)
Requires: numpy (>=1.4.1)
