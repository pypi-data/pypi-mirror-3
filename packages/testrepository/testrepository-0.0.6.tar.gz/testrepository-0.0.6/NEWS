############################
testrepository release notes
############################

NEXT (In development)
+++++++++++++++++++++

0.0.6
+++++

CHANGES
-------

* Now relies on subunit 0.0.8 or better and testtools 0.9.15 or better.

IMPROVEMENTS
------------

* Much better handling of unicode input from subunit streams.  Specifically,
  we won't crash when we can't figure something out.  (Francesco Banconi,
  Martin Packman, #955006)

* Parallel tests now record their worker thread number as tags in tests.
  This makes identifying test ordering problems much easier.
  (Benji York, #974622)

* Python2.7 changed the interface for DBM, this has been worked around.
  (Robert Collins, #775214, #961103)

* Subunit 0.0.7 Changes its TestResultFilter implementation, requiring the
  subclass in testrepository.filter to be come more robust.
  (Robert Collins)

* A horrible thinko in the testrepository test suite came to light and has been
  fixed. How the tests ever ran is a mystery. (Robert Collins, #881497)

* ''failing'', ''run'' and ''load'' now both take a ''--subunit'' option, which
  displays output in raw subunit format.  If ''--full-results'' is passed too,
  then all subunit information is displayed.  (Brad Crittenden, #949950)

* Setting ''filter_tags'' in ''.testr.conf'' will cause tests tagged with those
  tags to be hidden unless the fail/error. This requires Subunit 0.0.8. If
  an older version of subunit is configured, testr will return an error.
  (Robert Collins, #914166)

* ``testr`` will drop into PDB from its command line UI if the environment
  variable TESTR_PDB is set. (Robert Collins)

* Test partitioning now handles a corner case where multiple tests have a
  reported duration of 0. Previously they could all accumulate into one
  partition, now they split across partitions (the length of a partition is
  used as a tie breaker if two partitions have the same duration).
  (Robert Collins, #914359)

* The test 'test_outputs_results_to_stdout' was sensitive to changes in
  testtools and has been made more generic. (Robert Collins)

0.0.5
+++++

CHANGES
-------

* The testrepository test suite depends on testtools 0.9.8. (Robert Collins)

* If interrupted while updating the ``failing`` list, temp files are now
  cleaned up - previously a carefully timed interrupt would leave the
  temporary failing file in place. (Robert Collins, #531665)

* Local implementation of MatchesException has been removed in favour of the
  testtools implementation. All ``self.assertRaises`` have been migrated to
  this new testing interface.

* ``setup.py`` will read the version number from PKG-INFO when it is running
  without a bzr tree : this makes it easier to snapshot without doing a 
  release. (Jonathan Lange)

* Testrepository should be more compatible with win32 environments.
  (Martin [gz])

* ``testr init-repo`` now has a ``--force-init`` option which when provided
  will cause a repository to be created just-in-time. (Jonathan Lange)

* ``testr load`` and ``testr run`` now have a flag ``--partial``. When set
  this will cause existing failures to be preserved. When not set, doing a
  load will reset existing failures. The ``testr run`` flag ``--failing``
  implicitly sets ``--partial`` (so that an interrupted incremental test run
  does not incorrectly discard a failure record). The ``--partial`` flag exists
  so that deleted or renamed tests do not persist forever in the database.
  (Robert Collins)

* ``testr load`` now loads all input streams in parallel. This has no impact
  on the CLI as yet, but permits API users to load from parallel processes.
  (Robert Collins)

* ``testr list-tests`` is a new command that will list the tests for a project
  when ``.testr.conf`` has been configured with a ``test_list_option``.
  (Robert Collins)

* ``test run --parallel`` will parallelise by running each test command once
  per CPU in the machine (detection for this only implemented on Linux so far).
  An internally parallelising command will not benefit from this, but for
  many projects it will be a win either from simplicity or because getting
  their test runner to parallise is nontrivial. The observed duration of tests
  is used to inform the partitioning algorithm - so each test runner should
  complete at approximately the same time, minimising total runtime.
  (Robert Collins)

* ``testr run`` no longer attempts to expand unknown variables. This permits
  the use of environmen variables to control the test run. For instance,
  ${PYTHON:-python} in the test_command setting will run the command with
  $PYTHON or python if $PYTHON is not set. (Robert Collins, #595295)

* ``testr run`` now resets the SIGPIPE handler to default - which is what
  most Unix processes expect. (Robert Collins)

* ``testr run`` now uses a unique file name rather than hard coding
  failing.list - while not as clear, this permits concurrent testr invocations,
  or parallel testing from within testr, to execute safely. (Robert Collins)

* ``testr run`` uses an in-process load rather than reinvoking testr. This
  should be faster on Windows and avoids the issue with running the wrong
  testr when PYTHONPATH but not PATH is set. (Robert Collins, #613129)

* ``testr run`` will now pass -d to the ``testr load`` invocation, so that
  running ``testr run -d /some/path`` will work correctly.
  (Robert Collins, #529698)

* ``testr run`` will now pass ``-q`` down to ``testr load``.
  (Robert Collins, #529701)

* The ``testrepository.repository.Repository`` interface now tracks test times
  for use in estimating test run duration and parallel test partitioning.
  (Robert Collins)

* There are the beginnings of a samba buildfarm backend for testrepository,
  though it is not hooked into the UI yet, so is only useful for API users.
  (Jelmer Vernooij)

* Updates to next-stream are done via a temporary file to reduce the chance
  of an empty next-stream being written to disk. (Robert Collins, #531664)

* Variable expansion no longer does python \ escape expansion.
  (Robert Collins, #694800)

* When next-stream is damaged testr will report that it is corrupt rather than
  reporting an invalid literal. (Robert Collins, #531663)

0.0.4
+++++

IMPROVEMENTS
------------

* ``failing`` now supports ``--list`` to list the failing tests.
  (Jonathan Lange)

* Repository not found errors are now clearer. (Jonathan Lange, #530010)

* The summary of a test run is now formatted as foo=NN rather than foo: NN,
  which some folk find easier to read.

* The file implementation of Repository.open now performs ~ expansion.
  (Jonathan Lange, #529665)

* Test failures and errors are now shown as we get them in 'load',
  'failing' and 'last'. (Jonathan Lange, #613152)

0.0.3
+++++

IMPROVEMENTS
------------

* ``failing`` now correctly calls ``repository.get_failing`` and will this
  track all seen failures rather than just the latest observed failures.

* New argument type ``StringArgument`` for use when a supplied argument is just
  a string, rather than a typed argument.

* New subcommand 'failing' added.

* New subcommand ``run`` added which reads a .testr.conf file to figure out how
  to run tests with subunit output. It then runs them and pipes into testr
  load. This allows simpler integration and permits a programming interface so
  that tools like Tribunal/Eclipe etc can refresh tests in a testrepository.
  ``run`` also passes arguments and options down to the child process. ``run``
  can also supply test ids on the command, for test runners that want that.

* The command 'last' will no longer error on a new repository.
