Release 11.12.29
----------------

 * Import from file wizard supports importing excel files
 
 * A number of new :class:`ActionStep` classes that can be used in custom 
   :class:`Action` classes or serve as an example :
   
      * :class:`camelot.view.action_steps.change_object.ChangeObjects`
      * :class:`camelot.view.action_steps.gui.CloseView`
      * :class:`camelot.view.action_steps.gui.MessageBox`
      * :class:`camelot.view.action_steps.select_object.SelectObject`
  
 * Move the repository to gitorious
 
 * The toolbar in the one-to-many and many-to-many editor are configurable
   using the :meth:`ObjectAdmin.get_related_toolbar_actions` method.
   
 * Spanish translations
 
 * Possibility to add a close button to a form and to customize the form
   close action  

 * Filters can have a default value
 
 * Main menu and toolbars are configurable in the :class:`ApplicationAdmin` 
   through the use of actions, which allows creation of reduced main windows
   
 * Rewrite of Camelot functions behind toolbars and menus to actions, resulting
   in a number of :class:`Action` classes with sample code :
   
      * :class:`camelot.admin.action.application_action.ShowHelp`
      * :class:`camelot.admin.action.application_action.ShowAbout`
      * :class:`camelot.admin.action.application_action.Backup`
      * :class:`camelot.admin.action.application_action.Restore`
      * :class:`camelot.admin.action.form_action.CloseForm`
      * :class:`camelot.admin.action.list_action.OpenNewView`
      * :class:`camelot.admin.action.list_action.ToPreviousRow`
      * :class:`camelot.admin.action.list_action.ToNextRow`
      * :class:`camelot.admin.action.list_action.ToFirstRow`
      * :class:`camelot.admin.action.list_action.ToLastRow`
      * :class:`camelot.admin.action.list_action.ExportSpreadsheet`
      * :class:`camelot.admin.action.list_action.PrintPreview`
      * :class:`camelot.admin.action.list_action.SelectAll`
      * :class:`camelot.admin.action.list_action.ImportFromFile`  
      * :class:`camelot.admin.action.list_action.ReplaceFieldContents`
   
 * Move to SQLAlchemy 7.x
 
 * Undefer all fields that are going to be used in a view when querying the
   database
 
 * Reduction of the lines of code with 4%

Release 11.11.16
----------------

 * Implementation of the new actions proposal (:ref:`doc-actions`), please
   consult the documentation and the tutorial (:ref:`tutorial-importer`) of the 
   actions to ease the migration.  Most old style actions can be replaced with 
   the new style action :class:`camelot.admin.action.list_action.CallMethod`

 * Delayed creation of widgets on tabs to improve performance for
   screens with lots of fields

 * Move to migrate 7.1
 
 * New splashscreen
 
 * Italian translations
 
 * PySide compatibility

Release 11.09.10
----------------

 * Refresh reexecutes queries in the table view
 
 * Deleted entities are grayed out in the GUI if they are deleted when
   visible
   
 * Add setup.py to new projects for easy packaging
 
 * The settings mechanism becomes plugable
 
 * Print preview does pdf export when no printer is available
 
 * Wizard to create a new project
 
   .. image:: /_static/actionsteps/change_object.png
   
 * API documentation integrated with sphinx

 * :class:`camelot.core.exception.UserException`, a subclass of Exception that
   can be used to inform the user in a gentle way he should behave different.

   .. image:: /_static/controls/user_exception.png

 * Reduced memory usage
 
 * Experimental PySide support
 
 * Table views are sorted by primary key to avoid row flicker
 
 * German, French and Dutch translations
 
 * Generation of .po files integrated with setuptools
 
 * Fixes of VirtualAddress editor
 
 * example renamed to camelot_example to resolve naming conflicts with other 
   projects

Release 11.05.13
----------------

 * Faster opening of forms

 * 'Home' tab with application actions

 * add legend function to chart container
 
 * Workspace maximizes when double clicking on tab bar
 
 * Fix tab behavour of some editors
 
 * Support for editing columns in the frozen part of a table view
 
 * New DateTime Editor
 
   .. image:: _static/editors/DateTimeEditor_editable.png

 * More intuitive Code editor
 
 * More intuitive navigation pane
 
   .. image:: _static/controls/navigation_pane.png
 
 * progress dialog when records are deleted
 
 * FileEditor supports removing files after copying them
 
 * EntityAdmin changes
 
   * supports objects mapped with plain SQLAlchemy, documentation on how
     to use this
     
   * confirm_delete reworked to delete_mode

   * expanded_list_search option to tune which fields show up
   
 * ApplicationAdmin changes
 
   * actions_changed_signal

   * application actions show up in desktop workspace
   
     .. image:: _static/controls/desktop_workspace.png

 * postgres support for backup / restore
 
 * new actions : DocxApplicationAction, PixmapFormAction
 
 * Most editors now support background_color, editable and tooltip
   as dynamic attributes
 
Release 10.11.27
----------------

 * Tab based desktop

 * Faster table view
 
 * Improved search queries
 
 * Much more dynamic field attributes : tooltip, background_color, editable,
   choices, prefix, suffix, arrow

 * Document merge wizard
 
   .. image:: _static/mergedocumentwizard/wizard_widget.png
   
 * Support for SQLAlchemy 0.6.x
 
 * Charts and matplotlib integration
 
     .. image:: _static/editors/ChartEditor_editable.png 
     
 * Move from PyExcelerator to xlwt and xlrd
 
 * Move to new style signal/slot connections
 
 * Support for frozen columns in a table view
 
 * Faster backup and restore
   
Release 10.07.02
----------------

 * Expanded search and filter options

   .. image:: _static/controls/header_widget.png
    
 * Search works for integer, date and float fields
 
   .. image:: _static/controls/search_control.png
 
 * Sorting in table views and OneToMany widgets
 
 * Importer forces validation before importing
 
 * User translatable labels on forms
 
 * Litebox image preview for image fields
 
 * New editors and delegates :
 
   * NoteDelegate
   
     .. image:: _static/editors/NoteEditor_editable.png
     
   * LabelDelegate

   * TextBoolDelegate
   
 * i18n improvements
 
 * Fix date editor on windows
 
 * Add a default model to store batch job information
 
 * Backup and restore available from the File menu
     
 * More documentation

Release 09.12.07
----------------

 * Sqlalchemy 5.6 compatible
 
 * Dynamic background colors and tooltips
 
   .. image:: _static/snippets/background_color.png
   
 * Generic import wizard
 
   .. image:: _static/importwizard/csv_wizard.png
 
 * The busy indicator in the status bar
 
   .. image:: _static/controls/status_bar.png
 
 * Support for lazy translations
 
 * Remove PIL dependency and only depend on QImage
 
 * Support multiple levels of class inheritance in the model
 
 * Various bugfixes, usability and speed improvements
 
 * Code cleanup
