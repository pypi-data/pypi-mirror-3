
>>> postAssertContent('/login/', None, [200, 301, 302])

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>ViewDoesNotExist at /login/</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h2 span { font-size:80%; color:#666; font-weight:normal; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th { padding:1px 6px 1px 3px; background:#fefefe; text-align:left; font-weight:normal; font-size:11px; border:1px solid #ddd; }
    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 0 2px 40px; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%; }
    table td.code div { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; }
    ul.traceback li.frame { margin-bottom:1em; }
    div.context { margin: 10px 0; }
    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { font-family:monospace; white-space:pre; color:#666; cursor:pointer; }
    div.context ol.context-line li { color:black; background-color:#ccc; }
    div.context ol.context-line li span { float: right; }
    div.commands { margin-left: 40px; }
    div.commands a { color:black; text-decoration:none; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 0 20px; }
    #unicode-hint { background:#eee; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
    h2 span.commands { font-size:.7em;}
    span.commands a:link {color:#5E5694;}
    pre.exception_value { font-family: sans-serif; color: #666; font-size: 1.5em; margin: 10px 0 10px 0; }
  </style>
  <script type="text/javascript">
  //<!--
    function getElementsByClassName(oElm, strTagName, strClassName){
        // Written by Jonathan Snook, http://www.snook.ca/jon; Add-ons by Robert Nyman, http://www.robertnyman.com
        var arrElements = (strTagName == "*" && document.all)? document.all :
        oElm.getElementsByTagName(strTagName);
        var arrReturnElements = new Array();
        strClassName = strClassName.replace(/\-/g, "\-");
        var oRegExp = new RegExp("(^|\s)" + strClassName + "(\s|$)");
        var oElement;
        for(var i=0; i<arrElements.length; i++){
            oElement = arrElements[i];
            if(oRegExp.test(oElement.className)){
                arrReturnElements.push(oElement);
            }
        }
        return (arrReturnElements)
    }
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(getElementsByClassName(document, 'table', 'vars'));
      hideAll(getElementsByClassName(document, 'ol', 'pre-context'));
      hideAll(getElementsByClassName(document, 'ol', 'post-context'));
      hideAll(getElementsByClassName(document, 'div', 'pastebin'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block' : 'none';
        }
      }
      return false;
    }
    function varToggle(link, id) {
      toggle('v' + id);
      var s = link.getElementsByTagName('span')[0];
      var uarr = String.fromCharCode(0x25b6);
      var darr = String.fromCharCode(0x25bc);
      s.innerHTML = s.innerHTML == uarr ? darr : uarr;
      return false;
    }
    function switchPastebinFriendly(link) {
      s1 = "Switch to copy-and-paste view";
      s2 = "Switch back to interactive view";
      link.innerHTML = link.innerHTML == s1 ? s2 : s1;
      toggle('browserTraceback', 'pastebinTraceback');
      return false;
    }
    //-->
  </script>
</head>
<body>
<div id="summary">
  <h1>ViewDoesNotExist at /login/</h1>
  <pre class="exception_value">Could not import consent.django.apps.kui.views.accesscontrol. Error was: No module named command</pre>
  <table class="meta">
    <tr>
      <th>Request Method:</th>
      <td>GET</td>
    </tr>
    <tr>
      <th>Request URL:</th>
      <td>http://consent.dev.localhost/login/</td>
    </tr>
    <tr>
      <th>Exception Type:</th>
      <td>ViewDoesNotExist</td>
    </tr>
    <tr>
      <th>Exception Value:</th>
      <td><pre>Could not import consent.django.apps.kui.views.accesscontrol. Error was: No module named command</pre></td>
    </tr>
    <tr>
      <th>Exception Location:</th>
      <td>/home/john/asf/projects/consent-dev/site-python2.7/lib/python2.7/site-packages/django/core/urlresolvers.py in _get_callback, line 138</td>
    </tr>
    <tr>
      <th>Python Executable:</th>
      <td>/usr/bin/python</td>
    </tr>
    <tr>
      <th>Python Version:</th>
      <td>2.7.2</td>
    </tr>
    <tr>
      <th>Python Path:</th>
      <td>[&#39;/home/john/asf/projects/consent-dev/site-python2.7/lib/python2.7/site-packages/distribute-0.6.19-py2.7.egg&#39;, &#39;/home/john/asf/projects/consent-dev/site-python2.7/lib/python2.7/site-packages/pip-1.0.2-py2.7.egg&#39;, &#39;/home/john/asf/projects/consent-dev/site-python2.7/lib/python2.7/site-packages/FormEncode-1.2.4-py2.7.egg&#39;, &#39;/home/john/asf/projects/consent-dev/site-python2.7/lib/python2.7/site-packages&#39;, &#39;/usr/lib/python2.7&#39;, &#39;/usr/lib/python2.7/plat-linux2&#39;, &#39;/usr/lib/python2.7/lib-tk&#39;, &#39;/usr/lib/python2.7/lib-old&#39;, &#39;/usr/lib/python2.7/lib-dynload&#39;, &#39;/usr/local/lib/python2.7/dist-packages&#39;, &#39;/usr/lib/python2.7/dist-packages&#39;, &#39;/usr/lib/python2.7/dist-packages/PIL&#39;, &#39;/usr/lib/python2.7/dist-packages/gst-0.10&#39;, &#39;/usr/lib/python2.7/dist-packages/gtk-2.0&#39;, &#39;/usr/lib/pymodules/python2.7&#39;, &#39;/usr/lib/pymodules/python2.7/libubuntuone&#39;, &#39;/usr/lib/python2.7/dist-packages/ubuntu-sso-client&#39;, &#39;/usr/lib/python2.7/dist-packages/ubuntuone-client&#39;, &#39;/usr/lib/python2.7/dist-packages/ubuntuone-control-panel&#39;, &#39;/usr/lib/python2.7/dist-packages/ubuntuone-couch&#39;, &#39;/usr/lib/python2.7/dist-packages/ubuntuone-installer&#39;, &#39;/usr/lib/python2.7/dist-packages/ubuntuone-storage-protocol&#39;, &#39;/usr/lib/python2.7/dist-packages/wx-2.8-gtk2-unicode&#39;]</td>
    </tr>
    <tr>
      <th>Server time:</th>
      <td>Mon, 19 Dec 2011 22:31:45 +0000</td>
    </tr>
  </table>
</div>



<div id="traceback">
  <h2>Traceback <span class="commands"><a href="#" onclick="return switchPastebinFriendly(this);">Switch to copy-and-paste view</a></span></h2>
  
  <div id="browserTraceback">
    <ul class="traceback">
      
        <li class="frame">
          <code>/home/john/asf/projects/consent-dev/site-python2.7/lib/python2.7/site-packages/django/core/handlers/base.py</code> in <code>get_response</code>

          
            <div class="context" id="c139705722089272">
              
                <ol start="83" class="pre-context" id="pre139705722089272"><li onclick="toggle('pre139705722089272', 'post139705722089272')">        # Set the urlconf for this thread to the one specified above.</li><li onclick="toggle('pre139705722089272', 'post139705722089272')">        urlresolvers.set_urlconf(urlconf)</li><li onclick="toggle('pre139705722089272', 'post139705722089272')"></li><li onclick="toggle('pre139705722089272', 'post139705722089272')">        resolver = urlresolvers.RegexURLResolver(r&#39;^/&#39;, urlconf)</li><li onclick="toggle('pre139705722089272', 'post139705722089272')">        try:</li><li onclick="toggle('pre139705722089272', 'post139705722089272')">            try:</li><li onclick="toggle('pre139705722089272', 'post139705722089272')">                callback, callback_args, callback_kwargs = resolver.resolve(</li></ol>
              
              <ol start="90" class="context-line"><li onclick="toggle('pre139705722089272', 'post139705722089272')">                        request.path_info) <span>...</span></li></ol>
              
                <ol start='91' class="post-context" id="post139705722089272"><li onclick="toggle('pre139705722089272', 'post139705722089272')"></li><li onclick="toggle('pre139705722089272', 'post139705722089272')">                # Apply view middleware</li><li onclick="toggle('pre139705722089272', 'post139705722089272')">                for middleware_method in self._view_middleware:</li><li onclick="toggle('pre139705722089272', 'post139705722089272')">                    response = middleware_method(request, callback, callback_args, callback_kwargs)</li><li onclick="toggle('pre139705722089272', 'post139705722089272')">                    if response:</li><li onclick="toggle('pre139705722089272', 'post139705722089272')">                        return response</li></ol>
              
            </div>
          

          
            <div class="commands">
                <a href="#" onclick="return varToggle(this, '139705722089272')"><span>&#x25b6;</span> Local vars</a>
            </div>
            <table class="vars" id="v139705722089272">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc_info</td>
                    <td class="code"><div>(&lt;class &#39;django.core.exceptions.ViewDoesNotExist&#39;&gt;,
 ViewDoesNotExist(&#39;Could not import consent.django.apps.kui.views.accesscontrol. Error was: No module named command&#39;,),
 &lt;traceback object at 0x7f0fc5f02f38&gt;)</div></td>
                  </tr>
                
                  <tr>
                    <td>exceptions</td>
                    <td class="code"><div>&lt;module &#39;django.core.exceptions&#39; from &#39;/home/john/asf/projects/consent-dev/site-python2.7/lib/python2.7/site-packages/django/core/exceptions.pyc&#39;&gt;</div></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><div>&lt;bound method AuthenticationMiddleware.process_request of &lt;django.contrib.auth.middleware.AuthenticationMiddleware object at 0x7f0fc5ae3c10&gt;&gt;</div></td>
                  </tr>
                
                  <tr>
                    <td>receivers</td>
                    <td class="code"><div>[(&lt;function _rollback_on_exception at 0x7f0fc5b8eed8&gt;, None)]</div></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><div>&lt;WSGIRequest
GET:&lt;QueryDict: {}&gt;,
POST:&lt;QueryDict: {}&gt;,
COOKIES:{},
META:{&#39;DOCUMENT_ROOT&#39;: &#39;/etc/apache2/htdocs&#39;,
 &#39;GATEWAY_INTERFACE&#39;: &#39;CGI/1.1&#39;,
 &#39;HTTP_HOST&#39;: &#39;consent.dev.localhost&#39;,
 &#39;PATH_INFO&#39;: u&#39;/login/&#39;,
 &#39;PATH_TRANSLATED&#39;: &#39;/home/john/asf/projects/consent-dev/site/wsgi/consent.wsgi/login/&#39;,
 &#39;QUERY_STRING&#39;: &#39;&#39;,
 &#39;REMOTE_ADDR&#39;: &#39;127.0.0.1&#39;,
 &#39;REMOTE_PORT&#39;: &#39;53225&#39;,
 &#39;REQUEST_METHOD&#39;: &#39;GET&#39;,
 &#39;REQUEST_URI&#39;: &#39;/login/&#39;,
 &#39;SCRIPT_FILENAME&#39;: &#39;/home/john/asf/projects/consent-dev/site/wsgi/consent.wsgi&#39;,
 &#39;SCRIPT_NAME&#39;: u&#39;&#39;,
 &#39;SERVER_ADDR&#39;: &#39;127.0.0.1&#39;,
 &#39;SERVER_ADMIN&#39;: &#39;webmaster@localhost&#39;,
 &#39;SERVER_NAME&#39;: &#39;consent.dev.localhost&#39;,
 &#39;SERVER_PORT&#39;: &#39;80&#39;,
 &#39;SERVER_PROTOCOL&#39;: &#39;HTTP/1.0&#39;,
 &#39;SERVER_SIGNATURE&#39;: &#39;&lt;address&gt;Apache/2.2.20 (Ubuntu) Server at consent.dev.localhost Port 80&lt;/address&gt;\n&#39;,
 &#39;SERVER_SOFTWARE&#39;: &#39;Apache/2.2.20 (Ubuntu)&#39;,
 &#39;mod_wsgi.application_group&#39;: &#39;&#39;,
 &#39;mod_wsgi.callable_object&#39;: &#39;application&#39;,
 &#39;mod_wsgi.handler_script&#39;: &#39;&#39;,
 &#39;mod_wsgi.input_chunked&#39;: &#39;0&#39;,
 &#39;mod_wsgi.listener_host&#39;: &#39;&#39;,
 &#39;mod_wsgi.listener_port&#39;: &#39;80&#39;,
 &#39;mod_wsgi.process_group&#39;: &#39;consent&#39;,
 &#39;mod_wsgi.request_handler&#39;: &#39;wsgi-script&#39;,
 &#39;mod_wsgi.script_reloading&#39;: &#39;1&#39;,
 &#39;mod_wsgi.version&#39;: (3, 3),
 &#39;wsgi.errors&#39;: &lt;mod_wsgi.Log object at 0x7f0fc5ee9df0&gt;,
 &#39;wsgi.file_wrapper&#39;: &lt;built-in method file_wrapper of mod_wsgi.Adapter object at 0x7f0fc5efdf30&gt;,
 &#39;wsgi.input&#39;: &lt;mod_wsgi.Input object at 0x7f0fc5ee9ef0&gt;,
 &#39;wsgi.multiprocess&#39;: False,
 &#39;wsgi.multithread&#39;: True,
 &#39;wsgi.run_once&#39;: False,
 &#39;wsgi.url_scheme&#39;: &#39;http&#39;,
 &#39;wsgi.version&#39;: (1, 1)}&gt;</div></td>
                  </tr>
                
                  <tr>
                    <td>resolver</td>
                    <td class="code"><div>&lt;RegexURLResolver consent.django.settings.urls.main (None:None) ^/&gt;</div></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><div>None</div></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><div>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x7f0fc5131d50&gt;</div></td>
                  </tr>
                
                  <tr>
                    <td>settings</td>
                    <td class="code"><div>&lt;django.conf.LazySettings object at 0x7f0fc50fe610&gt;</div></td>
                  </tr>
                
                  <tr>
                    <td>urlconf</td>
                    <td class="code"><div>&#39;consent.django.settings.urls.main&#39;</div></td>
                  </tr>
                
                  <tr>
                    <td>urlresolvers</td>
                    <td class="code"><div>&lt;module &#39;django.core.urlresolvers&#39; from &#39;/home/john/asf/projects/consent-dev/site-python2.7/lib/python2.7/site-packages/django/core/urlresolvers.pyc&#39;&gt;</div></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        <li class="frame">
          <code>/home/john/asf/projects/consent-dev/site-python2.7/lib/python2.7/site-packages/django/core/urlresolvers.py</code> in <code>resolve</code>

          
            <div class="context" id="c139705722023376">
              
                <ol start="215" class="pre-context" id="pre139705722023376"><li onclick="toggle('pre139705722023376', 'post139705722023376')">    def resolve(self, path):</li><li onclick="toggle('pre139705722023376', 'post139705722023376')">        tried = []</li><li onclick="toggle('pre139705722023376', 'post139705722023376')">        match = self.regex.search(path)</li><li onclick="toggle('pre139705722023376', 'post139705722023376')">        if match:</li><li onclick="toggle('pre139705722023376', 'post139705722023376')">            new_path = path[match.end():]</li><li onclick="toggle('pre139705722023376', 'post139705722023376')">            for pattern in self.url_patterns:</li><li onclick="toggle('pre139705722023376', 'post139705722023376')">                try:</li></ol>
              
              <ol start="222" class="context-line"><li onclick="toggle('pre139705722023376', 'post139705722023376')">                    sub_match = pattern.resolve(new_path) <span>...</span></li></ol>
              
                <ol start='223' class="post-context" id="post139705722023376"><li onclick="toggle('pre139705722023376', 'post139705722023376')">                except Resolver404, e:</li><li onclick="toggle('pre139705722023376', 'post139705722023376')">                    sub_tried = e.args[0].get(&#39;tried&#39;)</li><li onclick="toggle('pre139705722023376', 'post139705722023376')">                    if sub_tried is not None:</li><li onclick="toggle('pre139705722023376', 'post139705722023376')">                        tried.extend([(pattern.regex.pattern + &#39;   &#39; + t) for t in sub_tried])</li><li onclick="toggle('pre139705722023376', 'post139705722023376')">                    else:</li><li onclick="toggle('pre139705722023376', 'post139705722023376')">                        tried.append(pattern.regex.pattern)</li></ol>
              
            </div>
          

          
            <div class="commands">
                <a href="#" onclick="return varToggle(this, '139705722023376')"><span>&#x25b6;</span> Local vars</a>
            </div>
            <table class="vars" id="v139705722023376">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>match</td>
                    <td class="code"><div>&lt;_sre.SRE_Match object at 0x7f0fc5eda8b8&gt;</div></td>
                  </tr>
                
                  <tr>
                    <td>new_path</td>
                    <td class="code"><div>u&#39;login/&#39;</div></td>
                  </tr>
                
                  <tr>
                    <td>path</td>
                    <td class="code"><div>u&#39;/login/&#39;</div></td>
                  </tr>
                
                  <tr>
                    <td>pattern</td>
                    <td class="code"><div>&lt;RegexURLResolver consent.django.settings.urls.kui (None:None) ^&gt;</div></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><div>&lt;RegexURLResolver consent.django.settings.urls.main (None:None) ^/&gt;</div></td>
                  </tr>
                
                  <tr>
                    <td>tried</td>
                    <td class="code"><div>[]</div></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        <li class="frame">
          <code>/home/john/asf/projects/consent-dev/site-python2.7/lib/python2.7/site-packages/django/core/urlresolvers.py</code> in <code>resolve</code>

          
            <div class="context" id="c139705722022080">
              
                <ol start="215" class="pre-context" id="pre139705722022080"><li onclick="toggle('pre139705722022080', 'post139705722022080')">    def resolve(self, path):</li><li onclick="toggle('pre139705722022080', 'post139705722022080')">        tried = []</li><li onclick="toggle('pre139705722022080', 'post139705722022080')">        match = self.regex.search(path)</li><li onclick="toggle('pre139705722022080', 'post139705722022080')">        if match:</li><li onclick="toggle('pre139705722022080', 'post139705722022080')">            new_path = path[match.end():]</li><li onclick="toggle('pre139705722022080', 'post139705722022080')">            for pattern in self.url_patterns:</li><li onclick="toggle('pre139705722022080', 'post139705722022080')">                try:</li></ol>
              
              <ol start="222" class="context-line"><li onclick="toggle('pre139705722022080', 'post139705722022080')">                    sub_match = pattern.resolve(new_path) <span>...</span></li></ol>
              
                <ol start='223' class="post-context" id="post139705722022080"><li onclick="toggle('pre139705722022080', 'post139705722022080')">                except Resolver404, e:</li><li onclick="toggle('pre139705722022080', 'post139705722022080')">                    sub_tried = e.args[0].get(&#39;tried&#39;)</li><li onclick="toggle('pre139705722022080', 'post139705722022080')">                    if sub_tried is not None:</li><li onclick="toggle('pre139705722022080', 'post139705722022080')">                        tried.extend([(pattern.regex.pattern + &#39;   &#39; + t) for t in sub_tried])</li><li onclick="toggle('pre139705722022080', 'post139705722022080')">                    else:</li><li onclick="toggle('pre139705722022080', 'post139705722022080')">                        tried.append(pattern.regex.pattern)</li></ol>
              
            </div>
          

          
            <div class="commands">
                <a href="#" onclick="return varToggle(this, '139705722022080')"><span>&#x25b6;</span> Local vars</a>
            </div>
            <table class="vars" id="v139705722022080">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>match</td>
                    <td class="code"><div>&lt;_sre.SRE_Match object at 0x7f0fc5eda7e8&gt;</div></td>
                  </tr>
                
                  <tr>
                    <td>new_path</td>
                    <td class="code"><div>u&#39;login/&#39;</div></td>
                  </tr>
                
                  <tr>
                    <td>path</td>
                    <td class="code"><div>u&#39;login/&#39;</div></td>
                  </tr>
                
                  <tr>
                    <td>pattern</td>
                    <td class="code"><div>&lt;RegexURLPattern None ^login/(?P&lt;returnPath&gt;(.*))$&gt;</div></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><div>&lt;RegexURLResolver consent.django.settings.urls.kui (None:None) ^&gt;</div></td>
                  </tr>
                
                  <tr>
                    <td>sub_match</td>
                    <td class="code"><div>None</div></td>
                  </tr>
                
                  <tr>
                    <td>tried</td>
                    <td class="code"><div>[&#39;^$&#39;, &#39;^about/$&#39;, &#39;^feed/$&#39;, &#39;^recover/$&#39;]</div></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        <li class="frame">
          <code>/home/john/asf/projects/consent-dev/site-python2.7/lib/python2.7/site-packages/django/core/urlresolvers.py</code> in <code>resolve</code>

          
            <div class="context" id="c139705721982488">
              
                <ol start="122" class="pre-context" id="pre139705721982488"><li onclick="toggle('pre139705721982488', 'post139705721982488')">            if kwargs:</li><li onclick="toggle('pre139705721982488', 'post139705721982488')">                args = ()</li><li onclick="toggle('pre139705721982488', 'post139705721982488')">            else:</li><li onclick="toggle('pre139705721982488', 'post139705721982488')">                args = match.groups()</li><li onclick="toggle('pre139705721982488', 'post139705721982488')">            # In both cases, pass any extra_kwargs as **kwargs.</li><li onclick="toggle('pre139705721982488', 'post139705721982488')">            kwargs.update(self.default_args)</li><li onclick="toggle('pre139705721982488', 'post139705721982488')"></li></ol>
              
              <ol start="129" class="context-line"><li onclick="toggle('pre139705721982488', 'post139705721982488')">            return self.callback, args, kwargs <span>...</span></li></ol>
              
                <ol start='130' class="post-context" id="post139705721982488"><li onclick="toggle('pre139705721982488', 'post139705721982488')"></li><li onclick="toggle('pre139705721982488', 'post139705721982488')">    def _get_callback(self):</li><li onclick="toggle('pre139705721982488', 'post139705721982488')">        if self._callback is not None:</li><li onclick="toggle('pre139705721982488', 'post139705721982488')">            return self._callback</li><li onclick="toggle('pre139705721982488', 'post139705721982488')">        try:</li><li onclick="toggle('pre139705721982488', 'post139705721982488')">            self._callback = get_callable(self._callback_str)</li></ol>
              
            </div>
          

          
            <div class="commands">
                <a href="#" onclick="return varToggle(this, '139705721982488')"><span>&#x25b6;</span> Local vars</a>
            </div>
            <table class="vars" id="v139705721982488">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><div>()</div></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><div>{&#39;returnPath&#39;: u&#39;&#39;}</div></td>
                  </tr>
                
                  <tr>
                    <td>match</td>
                    <td class="code"><div>&lt;_sre.SRE_Match object at 0x7f0fc5dad690&gt;</div></td>
                  </tr>
                
                  <tr>
                    <td>path</td>
                    <td class="code"><div>u&#39;login/&#39;</div></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><div>&lt;RegexURLPattern None ^login/(?P&lt;returnPath&gt;(.*))$&gt;</div></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        <li class="frame">
          <code>/home/john/asf/projects/consent-dev/site-python2.7/lib/python2.7/site-packages/django/core/urlresolvers.py</code> in <code>_get_callback</code>

          
            <div class="context" id="c139705722123976">
              
                <ol start="131" class="pre-context" id="pre139705722123976"><li onclick="toggle('pre139705722123976', 'post139705722123976')">    def _get_callback(self):</li><li onclick="toggle('pre139705722123976', 'post139705722123976')">        if self._callback is not None:</li><li onclick="toggle('pre139705722123976', 'post139705722123976')">            return self._callback</li><li onclick="toggle('pre139705722123976', 'post139705722123976')">        try:</li><li onclick="toggle('pre139705722123976', 'post139705722123976')">            self._callback = get_callable(self._callback_str)</li><li onclick="toggle('pre139705722123976', 'post139705722123976')">        except ImportError, e:</li><li onclick="toggle('pre139705722123976', 'post139705722123976')">            mod_name, _ = get_mod_func(self._callback_str)</li></ol>
              
              <ol start="138" class="context-line"><li onclick="toggle('pre139705722123976', 'post139705722123976')">            raise ViewDoesNotExist, &quot;Could not import %s. Error was: %s&quot; % (mod_name, str(e)) <span>...</span></li></ol>
              
                <ol start='139' class="post-context" id="post139705722123976"><li onclick="toggle('pre139705722123976', 'post139705722123976')">        except AttributeError, e:</li><li onclick="toggle('pre139705722123976', 'post139705722123976')">            mod_name, func_name = get_mod_func(self._callback_str)</li><li onclick="toggle('pre139705722123976', 'post139705722123976')">            raise ViewDoesNotExist, &quot;Tried %s in module %s. Error was: %s&quot; % (func_name, mod_name, str(e))</li><li onclick="toggle('pre139705722123976', 'post139705722123976')">        return self._callback</li><li onclick="toggle('pre139705722123976', 'post139705722123976')">    callback = property(_get_callback)</li><li onclick="toggle('pre139705722123976', 'post139705722123976')"></li></ol>
              
            </div>
          

          
            <div class="commands">
                <a href="#" onclick="return varToggle(this, '139705722123976')"><span>&#x25b6;</span> Local vars</a>
            </div>
            <table class="vars" id="v139705722123976">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>_</td>
                    <td class="code"><div>&#39;login&#39;</div></td>
                  </tr>
                
                  <tr>
                    <td>e</td>
                    <td class="code"><div>ImportError(&#39;No module named command&#39;,)</div></td>
                  </tr>
                
                  <tr>
                    <td>mod_name</td>
                    <td class="code"><div>&#39;consent.django.apps.kui.views.accesscontrol&#39;</div></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><div>&lt;RegexURLPattern None ^login/(?P&lt;returnPath&gt;(.*))$&gt;</div></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
    </ul>
  </div>
  
  <form action="http://dpaste.com/" name="pasteform" id="pasteform" method="post">
  <div id="pastebinTraceback" class="pastebin">
    <input type="hidden" name="language" value="PythonConsole">
    <input type="hidden" name="title" value="ViewDoesNotExist at /login/">
    <input type="hidden" name="source" value="Django Dpaste Agent">
    <input type="hidden" name="poster" value="Django">
    <textarea name="content" id="traceback_area" cols="140" rows="25">
Environment:

Request Method: GET
Request URL: http://consent.dev.localhost/login/
Django Version: 1.1.4
Python Version: 2.7.2
Installed Applications:
[]
Installed Middleware:
(&#39;django.middleware.common.CommonMiddleware&#39;,
 &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,
 &#39;django.contrib.auth.middleware.AuthenticationMiddleware&#39;)


Traceback:
File "/home/john/asf/projects/consent-dev/site-python2.7/lib/python2.7/site-packages/django/core/handlers/base.py" in get_response
  90.                         request.path_info)
File "/home/john/asf/projects/consent-dev/site-python2.7/lib/python2.7/site-packages/django/core/urlresolvers.py" in resolve
  222.                     sub_match = pattern.resolve(new_path)
File "/home/john/asf/projects/consent-dev/site-python2.7/lib/python2.7/site-packages/django/core/urlresolvers.py" in resolve
  222.                     sub_match = pattern.resolve(new_path)
File "/home/john/asf/projects/consent-dev/site-python2.7/lib/python2.7/site-packages/django/core/urlresolvers.py" in resolve
  129.             return self.callback, args, kwargs
File "/home/john/asf/projects/consent-dev/site-python2.7/lib/python2.7/site-packages/django/core/urlresolvers.py" in _get_callback
  138.             raise ViewDoesNotExist, &quot;Could not import %s. Error was: %s&quot; % (mod_name, str(e))

Exception Type: ViewDoesNotExist at /login/
Exception Value: Could not import consent.django.apps.kui.views.accesscontrol. Error was: No module named command
</textarea>
  <br><br>
  <input type="submit" value="Share this traceback on a public Web site">
  </div>
</form>
</div>

<div id="requestinfo">
  <h2>Request information</h2>

  <h3 id="get-info">GET</h3>
  
    <p>No GET data</p>
  

  <h3 id="post-info">POST</h3>
  
    <p>No POST data</p>
  
  <h3 id="files-info">FILES</h3>
  
    <p>No FILES data</p>
  


  <h3 id="cookie-info">COOKIES</h3>
  
    <p>No cookie data</p>
  

  <h3 id="meta-info">META</h3>
  <table class="req">
    <thead>
      <tr>
        <th>Variable</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>DOCUMENT_ROOT</td>
          <td class="code"><div>&#39;/etc/apache2/htdocs&#39;</div></td>
        </tr>
      
        <tr>
          <td>GATEWAY_INTERFACE</td>
          <td class="code"><div>&#39;CGI/1.1&#39;</div></td>
        </tr>
      
        <tr>
          <td>HTTP_HOST</td>
          <td class="code"><div>&#39;consent.dev.localhost&#39;</div></td>
        </tr>
      
        <tr>
          <td>PATH_INFO</td>
          <td class="code"><div>u&#39;/login/&#39;</div></td>
        </tr>
      
        <tr>
          <td>PATH_TRANSLATED</td>
          <td class="code"><div>&#39;/home/john/asf/projects/consent-dev/site/wsgi/consent.wsgi/login/&#39;</div></td>
        </tr>
      
        <tr>
          <td>QUERY_STRING</td>
          <td class="code"><div>&#39;&#39;</div></td>
        </tr>
      
        <tr>
          <td>REMOTE_ADDR</td>
          <td class="code"><div>&#39;127.0.0.1&#39;</div></td>
        </tr>
      
        <tr>
          <td>REMOTE_PORT</td>
          <td class="code"><div>&#39;53225&#39;</div></td>
        </tr>
      
        <tr>
          <td>REQUEST_METHOD</td>
          <td class="code"><div>&#39;GET&#39;</div></td>
        </tr>
      
        <tr>
          <td>REQUEST_URI</td>
          <td class="code"><div>&#39;/login/&#39;</div></td>
        </tr>
      
        <tr>
          <td>SCRIPT_FILENAME</td>
          <td class="code"><div>&#39;/home/john/asf/projects/consent-dev/site/wsgi/consent.wsgi&#39;</div></td>
        </tr>
      
        <tr>
          <td>SCRIPT_NAME</td>
          <td class="code"><div>u&#39;&#39;</div></td>
        </tr>
      
        <tr>
          <td>SERVER_ADDR</td>
          <td class="code"><div>&#39;127.0.0.1&#39;</div></td>
        </tr>
      
        <tr>
          <td>SERVER_ADMIN</td>
          <td class="code"><div>&#39;webmaster@localhost&#39;</div></td>
        </tr>
      
        <tr>
          <td>SERVER_NAME</td>
          <td class="code"><div>&#39;consent.dev.localhost&#39;</div></td>
        </tr>
      
        <tr>
          <td>SERVER_PORT</td>
          <td class="code"><div>&#39;80&#39;</div></td>
        </tr>
      
        <tr>
          <td>SERVER_PROTOCOL</td>
          <td class="code"><div>&#39;HTTP/1.0&#39;</div></td>
        </tr>
      
        <tr>
          <td>SERVER_SIGNATURE</td>
          <td class="code"><div>&#39;&lt;address&gt;Apache/2.2.20 (Ubuntu) Server at consent.dev.localhost Port 80&lt;/address&gt;\n&#39;</div></td>
        </tr>
      
        <tr>
          <td>SERVER_SOFTWARE</td>
          <td class="code"><div>&#39;Apache/2.2.20 (Ubuntu)&#39;</div></td>
        </tr>
      
        <tr>
          <td>mod_wsgi.application_group</td>
          <td class="code"><div>&#39;&#39;</div></td>
        </tr>
      
        <tr>
          <td>mod_wsgi.callable_object</td>
          <td class="code"><div>&#39;application&#39;</div></td>
        </tr>
      
        <tr>
          <td>mod_wsgi.handler_script</td>
          <td class="code"><div>&#39;&#39;</div></td>
        </tr>
      
        <tr>
          <td>mod_wsgi.input_chunked</td>
          <td class="code"><div>&#39;0&#39;</div></td>
        </tr>
      
        <tr>
          <td>mod_wsgi.listener_host</td>
          <td class="code"><div>&#39;&#39;</div></td>
        </tr>
      
        <tr>
          <td>mod_wsgi.listener_port</td>
          <td class="code"><div>&#39;80&#39;</div></td>
        </tr>
      
        <tr>
          <td>mod_wsgi.process_group</td>
          <td class="code"><div>&#39;consent&#39;</div></td>
        </tr>
      
        <tr>
          <td>mod_wsgi.request_handler</td>
          <td class="code"><div>&#39;wsgi-script&#39;</div></td>
        </tr>
      
        <tr>
          <td>mod_wsgi.script_reloading</td>
          <td class="code"><div>&#39;1&#39;</div></td>
        </tr>
      
        <tr>
          <td>mod_wsgi.version</td>
          <td class="code"><div>(3, 3)</div></td>
        </tr>
      
        <tr>
          <td>wsgi.errors</td>
          <td class="code"><div>&lt;mod_wsgi.Log object at 0x7f0fc5ee9df0&gt;</div></td>
        </tr>
      
        <tr>
          <td>wsgi.file_wrapper</td>
          <td class="code"><div>&lt;built-in method file_wrapper of mod_wsgi.Adapter object at 0x7f0fc5efdf30&gt;</div></td>
        </tr>
      
        <tr>
          <td>wsgi.input</td>
          <td class="code"><div>&lt;mod_wsgi.Input object at 0x7f0fc5ee9ef0&gt;</div></td>
        </tr>
      
        <tr>
          <td>wsgi.multiprocess</td>
          <td class="code"><div>False</div></td>
        </tr>
      
        <tr>
          <td>wsgi.multithread</td>
          <td class="code"><div>True</div></td>
        </tr>
      
        <tr>
          <td>wsgi.run_once</td>
          <td class="code"><div>False</div></td>
        </tr>
      
        <tr>
          <td>wsgi.url_scheme</td>
          <td class="code"><div>&#39;http&#39;</div></td>
        </tr>
      
        <tr>
          <td>wsgi.version</td>
          <td class="code"><div>(1, 1)</div></td>
        </tr>
      
    </tbody>
  </table>

  <h3 id="settings-info">Settings</h3>
  <h4>Using settings module <code>consent.django.settings.main</code></h4>
  <table class="req">
    <thead>
      <tr>
        <th>Setting</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>ABSOLUTE_URL_OVERRIDES</td>
          <td class="code"><div>{}</div></td>
        </tr>
      
        <tr>
          <td>ADMINS</td>
          <td class="code"><div>()</div></td>
        </tr>
      
        <tr>
          <td>ADMIN_FOR</td>
          <td class="code"><div>()</div></td>
        </tr>
      
        <tr>
          <td>ADMIN_MEDIA_PREFIX</td>
          <td class="code"><div>&#39;/media/&#39;</div></td>
        </tr>
      
        <tr>
          <td>ALLOWED_INCLUDE_ROOTS</td>
          <td class="code"><div>()</div></td>
        </tr>
      
        <tr>
          <td>APPEND_SLASH</td>
          <td class="code"><div>True</div></td>
        </tr>
      
        <tr>
          <td>AUTHENTICATION_BACKENDS</td>
          <td class="code"><div>(&#39;django.contrib.auth.backends.ModelBackend&#39;,)</div></td>
        </tr>
      
        <tr>
          <td>BANNED_IPS</td>
          <td class="code"><div>()</div></td>
        </tr>
      
        <tr>
          <td>CACHE_BACKEND</td>
          <td class="code"><div>&#39;locmem://&#39;</div></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>
          <td class="code"><div>&#39;&#39;</div></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_SECONDS</td>
          <td class="code"><div>600</div></td>
        </tr>
      
        <tr>
          <td>COMMENTS_ALLOW_PROFANITIES</td>
          <td class="code"><div>False</div></td>
        </tr>
      
        <tr>
          <td>COMMENTS_BANNED_USERS_GROUP</td>
          <td class="code"><div>None</div></td>
        </tr>
      
        <tr>
          <td>COMMENTS_FIRST_FEW</td>
          <td class="code"><div>0</div></td>
        </tr>
      
        <tr>
          <td>COMMENTS_MODERATORS_GROUP</td>
          <td class="code"><div>None</div></td>
        </tr>
      
        <tr>
          <td>COMMENTS_SKETCHY_USERS_GROUP</td>
          <td class="code"><div>None</div></td>
        </tr>
      
        <tr>
          <td>DATABASE_ENGINE</td>
          <td class="code"><div>&#39;dummy&#39;</div></td>
        </tr>
      
        <tr>
          <td>DATABASE_HOST</td>
          <td class="code"><div>&#39;&#39;</div></td>
        </tr>
      
        <tr>
          <td>DATABASE_NAME</td>
          <td class="code"><div>&#39;&#39;</div></td>
        </tr>
      
        <tr>
          <td>DATABASE_OPTIONS</td>
          <td class="code"><div>{}</div></td>
        </tr>
      
        <tr>
          <td>DATABASE_PASSWORD</td>
          <td class="code"><div>&#39;********************&#39;</div></td>
        </tr>
      
        <tr>
          <td>DATABASE_PORT</td>
          <td class="code"><div>&#39;&#39;</div></td>
        </tr>
      
        <tr>
          <td>DATABASE_USER</td>
          <td class="code"><div>&#39;&#39;</div></td>
        </tr>
      
        <tr>
          <td>DATETIME_FORMAT</td>
          <td class="code"><div>&#39;N j, Y, P&#39;</div></td>
        </tr>
      
        <tr>
          <td>DATE_FORMAT</td>
          <td class="code"><div>&#39;N j, Y&#39;</div></td>
        </tr>
      
        <tr>
          <td>DEBUG</td>
          <td class="code"><div>True</div></td>
        </tr>
      
        <tr>
          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>
          <td class="code"><div>False</div></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CHARSET</td>
          <td class="code"><div>&#39;utf-8&#39;</div></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CONTENT_TYPE</td>
          <td class="code"><div>&#39;text/html&#39;</div></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FILE_STORAGE</td>
          <td class="code"><div>&#39;django.core.files.storage.FileSystemStorage&#39;</div></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FROM_EMAIL</td>
          <td class="code"><div>&#39;webmaster@localhost&#39;</div></td>
        </tr>
      
        <tr>
          <td>DEFAULT_INDEX_TABLESPACE</td>
          <td class="code"><div>&#39;&#39;</div></td>
        </tr>
      
        <tr>
          <td>DEFAULT_TABLESPACE</td>
          <td class="code"><div>&#39;&#39;</div></td>
        </tr>
      
        <tr>
          <td>DISALLOWED_USER_AGENTS</td>
          <td class="code"><div>()</div></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST</td>
          <td class="code"><div>&#39;localhost&#39;</div></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_PASSWORD</td>
          <td class="code"><div>&#39;********************&#39;</div></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_USER</td>
          <td class="code"><div>&#39;&#39;</div></td>
        </tr>
      
        <tr>
          <td>EMAIL_PORT</td>
          <td class="code"><div>25</div></td>
        </tr>
      
        <tr>
          <td>EMAIL_SUBJECT_PREFIX</td>
          <td class="code"><div>&#39;[Django] &#39;</div></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_TLS</td>
          <td class="code"><div>False</div></td>
        </tr>
      
        <tr>
          <td>FILE_CHARSET</td>
          <td class="code"><div>&#39;utf-8&#39;</div></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_HANDLERS</td>
          <td class="code"><div>(&#39;django.core.files.uploadhandler.MemoryFileUploadHandler&#39;,
 &#39;django.core.files.uploadhandler.TemporaryFileUploadHandler&#39;)</div></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><div>2621440</div></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_PERMISSIONS</td>
          <td class="code"><div>None</div></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_TEMP_DIR</td>
          <td class="code"><div>None</div></td>
        </tr>
      
        <tr>
          <td>FIXTURE_DIRS</td>
          <td class="code"><div>()</div></td>
        </tr>
      
        <tr>
          <td>FORCE_SCRIPT_NAME</td>
          <td class="code"><div>None</div></td>
        </tr>
      
        <tr>
          <td>IGNORABLE_404_ENDS</td>
          <td class="code"><div>(&#39;mail.pl&#39;, &#39;mailform.pl&#39;, &#39;mail.cgi&#39;, &#39;mailform.cgi&#39;, &#39;favicon.ico&#39;, &#39;.php&#39;)</div></td>
        </tr>
      
        <tr>
          <td>IGNORABLE_404_STARTS</td>
          <td class="code"><div>(&#39;/cgi-bin/&#39;, &#39;/_vti_bin&#39;, &#39;/_vti_inf&#39;)</div></td>
        </tr>
      
        <tr>
          <td>INSTALLED_APPS</td>
          <td class="code"><div>[]</div></td>
        </tr>
      
        <tr>
          <td>INTERNAL_IPS</td>
          <td class="code"><div>()</div></td>
        </tr>
      
        <tr>
          <td>LANGUAGES</td>
          <td class="code"><div>((&#39;ar&#39;, &#39;Arabic&#39;),
 (&#39;bg&#39;, &#39;Bulgarian&#39;),
 (&#39;bn&#39;, &#39;Bengali&#39;),
 (&#39;bs&#39;, &#39;Bosnian&#39;),
 (&#39;ca&#39;, &#39;Catalan&#39;),
 (&#39;cs&#39;, &#39;Czech&#39;),
 (&#39;cy&#39;, &#39;Welsh&#39;),
 (&#39;da&#39;, &#39;Danish&#39;),
 (&#39;de&#39;, &#39;German&#39;),
 (&#39;el&#39;, &#39;Greek&#39;),
 (&#39;en&#39;, &#39;English&#39;),
 (&#39;es&#39;, &#39;Spanish&#39;),
 (&#39;es-ar&#39;, &#39;Argentinean Spanish&#39;),
 (&#39;et&#39;, &#39;Estonian&#39;),
 (&#39;eu&#39;, &#39;Basque&#39;),
 (&#39;fa&#39;, &#39;Persian&#39;),
 (&#39;fi&#39;, &#39;Finnish&#39;),
 (&#39;fr&#39;, &#39;French&#39;),
 (&#39;fy-nl&#39;, &#39;Frisian&#39;),
 (&#39;ga&#39;, &#39;Irish&#39;),
 (&#39;gl&#39;, &#39;Galician&#39;),
 (&#39;he&#39;, &#39;Hebrew&#39;),
 (&#39;hi&#39;, &#39;Hindi&#39;),
 (&#39;hr&#39;, &#39;Croatian&#39;),
 (&#39;hu&#39;, &#39;Hungarian&#39;),
 (&#39;is&#39;, &#39;Icelandic&#39;),
 (&#39;it&#39;, &#39;Italian&#39;),
 (&#39;ja&#39;, &#39;Japanese&#39;),
 (&#39;ka&#39;, &#39;Georgian&#39;),
 (&#39;km&#39;, &#39;Khmer&#39;),
 (&#39;kn&#39;, &#39;Kannada&#39;),
 (&#39;ko&#39;, &#39;Korean&#39;),
 (&#39;lt&#39;, &#39;Lithuanian&#39;),
 (&#39;lv&#39;, &#39;Latvian&#39;),
 (&#39;mk&#39;, &#39;Macedonian&#39;),
 (&#39;nl&#39;, &#39;Dutch&#39;),
 (&#39;no&#39;, &#39;Norwegian&#39;),
 (&#39;pl&#39;, &#39;Polish&#39;),
 (&#39;pt&#39;, &#39;Portuguese&#39;),
 (&#39;pt-br&#39;, &#39;Brazilian Portuguese&#39;),
 (&#39;ro&#39;, &#39;Romanian&#39;),
 (&#39;ru&#39;, &#39;Russian&#39;),
 (&#39;sk&#39;, &#39;Slovak&#39;),
 (&#39;sl&#39;, &#39;Slovenian&#39;),
 (&#39;sq&#39;, &#39;Albanian&#39;),
 (&#39;sr&#39;, &#39;Serbian&#39;),
 (&#39;sr-latn&#39;, &#39;Serbian Latin&#39;),
 (&#39;sv&#39;, &#39;Swedish&#39;),
 (&#39;ta&#39;, &#39;Tamil&#39;),
 (&#39;te&#39;, &#39;Telugu&#39;),
 (&#39;th&#39;, &#39;Thai&#39;),
 (&#39;tr&#39;, &#39;Turkish&#39;),
 (&#39;uk&#39;, &#39;Ukrainian&#39;),
 (&#39;zh-cn&#39;, &#39;Simplified Chinese&#39;),
 (&#39;zh-tw&#39;, &#39;Traditional Chinese&#39;))</div></td>
        </tr>
      
        <tr>
          <td>LANGUAGES_BIDI</td>
          <td class="code"><div>(&#39;he&#39;, &#39;ar&#39;, &#39;fa&#39;)</div></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_CODE</td>
          <td class="code"><div>&#39;en-us&#39;</div></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_NAME</td>
          <td class="code"><div>&#39;django_language&#39;</div></td>
        </tr>
      
        <tr>
          <td>LOCALE_PATHS</td>
          <td class="code"><div>()</div></td>
        </tr>
      
        <tr>
          <td>LOGIN_REDIRECT_URL</td>
          <td class="code"><div>&#39;/accounts/profile/&#39;</div></td>
        </tr>
      
        <tr>
          <td>LOGIN_URL</td>
          <td class="code"><div>&#39;/accounts/login/&#39;</div></td>
        </tr>
      
        <tr>
          <td>LOGOUT_URL</td>
          <td class="code"><div>&#39;/accounts/logout/&#39;</div></td>
        </tr>
      
        <tr>
          <td>MANAGERS</td>
          <td class="code"><div>()</div></td>
        </tr>
      
        <tr>
          <td>MEDIA_ROOT</td>
          <td class="code"><div>&#39;&#39;</div></td>
        </tr>
      
        <tr>
          <td>MEDIA_URL</td>
          <td class="code"><div>&#39;&#39;</div></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE_CLASSES</td>
          <td class="code"><div>(&#39;django.middleware.common.CommonMiddleware&#39;,
 &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,
 &#39;django.contrib.auth.middleware.AuthenticationMiddleware&#39;)</div></td>
        </tr>
      
        <tr>
          <td>MONTH_DAY_FORMAT</td>
          <td class="code"><div>&#39;F j&#39;</div></td>
        </tr>
      
        <tr>
          <td>PASSWORD_RESET_TIMEOUT_DAYS</td>
          <td class="code"><div>&#39;********************&#39;</div></td>
        </tr>
      
        <tr>
          <td>PREPEND_WWW</td>
          <td class="code"><div>False</div></td>
        </tr>
      
        <tr>
          <td>PROFANITIES_LIST</td>
          <td class="code"><div>&#39;********************&#39;</div></td>
        </tr>
      
        <tr>
          <td>ROOT_URLCONF</td>
          <td class="code"><div>&#39;consent.django.settings.urls.main&#39;</div></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY</td>
          <td class="code"><div>&#39;********************&#39;</div></td>
        </tr>
      
        <tr>
          <td>SEND_BROKEN_LINK_EMAILS</td>
          <td class="code"><div>False</div></td>
        </tr>
      
        <tr>
          <td>SERVER_EMAIL</td>
          <td class="code"><div>&#39;root@localhost&#39;</div></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_AGE</td>
          <td class="code"><div>1209600</div></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_DOMAIN</td>
          <td class="code"><div>None</div></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_NAME</td>
          <td class="code"><div>&#39;sessionid&#39;</div></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_PATH</td>
          <td class="code"><div>&#39;/&#39;</div></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SECURE</td>
          <td class="code"><div>False</div></td>
        </tr>
      
        <tr>
          <td>SESSION_ENGINE</td>
          <td class="code"><div>&#39;django.contrib.sessions.backends.db&#39;</div></td>
        </tr>
      
        <tr>
          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>
          <td class="code"><div>False</div></td>
        </tr>
      
        <tr>
          <td>SESSION_FILE_PATH</td>
          <td class="code"><div>None</div></td>
        </tr>
      
        <tr>
          <td>SESSION_SAVE_EVERY_REQUEST</td>
          <td class="code"><div>False</div></td>
        </tr>
      
        <tr>
          <td>SETTINGS_MODULE</td>
          <td class="code"><div>&#39;consent.django.settings.main&#39;</div></td>
        </tr>
      
        <tr>
          <td>SITE_ID</td>
          <td class="code"><div>1</div></td>
        </tr>
      
        <tr>
          <td>TEMPLATE_CONTEXT_PROCESSORS</td>
          <td class="code"><div>(&#39;django.core.context_processors.auth&#39;,
 &#39;django.core.context_processors.debug&#39;,
 &#39;django.core.context_processors.i18n&#39;,
 &#39;django.core.context_processors.media&#39;)</div></td>
        </tr>
      
        <tr>
          <td>TEMPLATE_DEBUG</td>
          <td class="code"><div>False</div></td>
        </tr>
      
        <tr>
          <td>TEMPLATE_DIRS</td>
          <td class="code"><div>(&#39;/home/john/asf/projects/consent-dev/site/templates&#39;,)</div></td>
        </tr>
      
        <tr>
          <td>TEMPLATE_LOADERS</td>
          <td class="code"><div>(&#39;django.template.loaders.filesystem.load_template_source&#39;,
 &#39;django.template.loaders.app_directories.load_template_source&#39;)</div></td>
        </tr>
      
        <tr>
          <td>TEMPLATE_STRING_IF_INVALID</td>
          <td class="code"><div>&#39;&#39;</div></td>
        </tr>
      
        <tr>
          <td>TEST_DATABASE_CHARSET</td>
          <td class="code"><div>None</div></td>
        </tr>
      
        <tr>
          <td>TEST_DATABASE_COLLATION</td>
          <td class="code"><div>None</div></td>
        </tr>
      
        <tr>
          <td>TEST_DATABASE_NAME</td>
          <td class="code"><div>None</div></td>
        </tr>
      
        <tr>
          <td>TEST_RUNNER</td>
          <td class="code"><div>&#39;django.test.simple.run_tests&#39;</div></td>
        </tr>
      
        <tr>
          <td>TIME_FORMAT</td>
          <td class="code"><div>&#39;P&#39;</div></td>
        </tr>
      
        <tr>
          <td>TIME_ZONE</td>
          <td class="code"><div>&#39;&#39;</div></td>
        </tr>
      
        <tr>
          <td>TRANSACTIONS_MANAGED</td>
          <td class="code"><div>False</div></td>
        </tr>
      
        <tr>
          <td>URL_VALIDATOR_USER_AGENT</td>
          <td class="code"><div>&#39;Django/1.1.4 (http://www.djangoproject.com)&#39;</div></td>
        </tr>
      
        <tr>
          <td>USE_ETAGS</td>
          <td class="code"><div>False</div></td>
        </tr>
      
        <tr>
          <td>USE_I18N</td>
          <td class="code"><div>True</div></td>
        </tr>
      
        <tr>
          <td>YEAR_MONTH_FORMAT</td>
          <td class="code"><div>&#39;F Y&#39;</div></td>
        </tr>
      
    </tbody>
  </table>

</div>

<div id="explanation">
  <p>
    You're seeing this error because you have <code>DEBUG = True</code> in your
    Django settings file. Change that to <code>False</code>, and Django will
    display a standard 500 page.
  </p>
</div>
</body>
</html>


>>> postAssertContent('/login/', None, [200, 301, 302])

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>ViewDoesNotExist at /login/</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h2 span { font-size:80%; color:#666; font-weight:normal; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th { padding:1px 6px 1px 3px; background:#fefefe; text-align:left; font-weight:normal; font-size:11px; border:1px solid #ddd; }
    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 0 2px 40px; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%; }
    table td.code div { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; }
    ul.traceback li.frame { margin-bottom:1em; }
    div.context { margin: 10px 0; }
    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { font-family:monospace; white-space:pre; color:#666; cursor:pointer; }
    div.context ol.context-line li { color:black; background-color:#ccc; }
    div.context ol.context-line li span { float: right; }
    div.commands { margin-left: 40px; }
    div.commands a { color:black; text-decoration:none; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 0 20px; }
    #unicode-hint { background:#eee; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
    h2 span.commands { font-size:.7em;}
    span.commands a:link {color:#5E5694;}
    pre.exception_value { font-family: sans-serif; color: #666; font-size: 1.5em; margin: 10px 0 10px 0; }
  </style>
  <script type="text/javascript">
  //<!--
    function getElementsByClassName(oElm, strTagName, strClassName){
        // Written by Jonathan Snook, http://www.snook.ca/jon; Add-ons by Robert Nyman, http://www.robertnyman.com
        var arrElements = (strTagName == "*" && document.all)? document.all :
        oElm.getElementsByTagName(strTagName);
        var arrReturnElements = new Array();
        strClassName = strClassName.replace(/\-/g, "\-");
        var oRegExp = new RegExp("(^|\s)" + strClassName + "(\s|$)");
        var oElement;
        for(var i=0; i<arrElements.length; i++){
            oElement = arrElements[i];
            if(oRegExp.test(oElement.className)){
                arrReturnElements.push(oElement);
            }
        }
        return (arrReturnElements)
    }
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(getElementsByClassName(document, 'table', 'vars'));
      hideAll(getElementsByClassName(document, 'ol', 'pre-context'));
      hideAll(getElementsByClassName(document, 'ol', 'post-context'));
      hideAll(getElementsByClassName(document, 'div', 'pastebin'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block' : 'none';
        }
      }
      return false;
    }
    function varToggle(link, id) {
      toggle('v' + id);
      var s = link.getElementsByTagName('span')[0];
      var uarr = String.fromCharCode(0x25b6);
      var darr = String.fromCharCode(0x25bc);
      s.innerHTML = s.innerHTML == uarr ? darr : uarr;
      return false;
    }
    function switchPastebinFriendly(link) {
      s1 = "Switch to copy-and-paste view";
      s2 = "Switch back to interactive view";
      link.innerHTML = link.innerHTML == s1 ? s2 : s1;
      toggle('browserTraceback', 'pastebinTraceback');
      return false;
    }
    //-->
  </script>
</head>
<body>
<div id="summary">
  <h1>ViewDoesNotExist at /login/</h1>
  <pre class="exception_value">Could not import consent.django.apps.kui.views.accesscontrol. Error was: No module named command</pre>
  <table class="meta">
    <tr>
      <th>Request Method:</th>
      <td>GET</td>
    </tr>
    <tr>
      <th>Request URL:</th>
      <td>http://consent.dev.localhost/login/</td>
    </tr>
    <tr>
      <th>Exception Type:</th>
      <td>ViewDoesNotExist</td>
    </tr>
    <tr>
      <th>Exception Value:</th>
      <td><pre>Could not import consent.django.apps.kui.views.accesscontrol. Error was: No module named command</pre></td>
    </tr>
    <tr>
      <th>Exception Location:</th>
      <td>/home/john/asf/projects/consent-dev/site-python2.7/lib/python2.7/site-packages/django/core/urlresolvers.py in _get_callback, line 138</td>
    </tr>
    <tr>
      <th>Python Executable:</th>
      <td>/usr/bin/python</td>
    </tr>
    <tr>
      <th>Python Version:</th>
      <td>2.7.2</td>
    </tr>
    <tr>
      <th>Python Path:</th>
      <td>[&#39;/home/john/asf/projects/consent-dev/site-python2.7/lib/python2.7/site-packages/distribute-0.6.19-py2.7.egg&#39;, &#39;/home/john/asf/projects/consent-dev/site-python2.7/lib/python2.7/site-packages/pip-1.0.2-py2.7.egg&#39;, &#39;/home/john/asf/projects/consent-dev/site-python2.7/lib/python2.7/site-packages/FormEncode-1.2.4-py2.7.egg&#39;, &#39;/home/john/asf/projects/consent-dev/site-python2.7/lib/python2.7/site-packages&#39;, &#39;/usr/lib/python2.7&#39;, &#39;/usr/lib/python2.7/plat-linux2&#39;, &#39;/usr/lib/python2.7/lib-tk&#39;, &#39;/usr/lib/python2.7/lib-old&#39;, &#39;/usr/lib/python2.7/lib-dynload&#39;, &#39;/usr/local/lib/python2.7/dist-packages&#39;, &#39;/usr/lib/python2.7/dist-packages&#39;, &#39;/usr/lib/python2.7/dist-packages/PIL&#39;, &#39;/usr/lib/python2.7/dist-packages/gst-0.10&#39;, &#39;/usr/lib/python2.7/dist-packages/gtk-2.0&#39;, &#39;/usr/lib/pymodules/python2.7&#39;, &#39;/usr/lib/pymodules/python2.7/libubuntuone&#39;, &#39;/usr/lib/python2.7/dist-packages/ubuntu-sso-client&#39;, &#39;/usr/lib/python2.7/dist-packages/ubuntuone-client&#39;, &#39;/usr/lib/python2.7/dist-packages/ubuntuone-control-panel&#39;, &#39;/usr/lib/python2.7/dist-packages/ubuntuone-couch&#39;, &#39;/usr/lib/python2.7/dist-packages/ubuntuone-installer&#39;, &#39;/usr/lib/python2.7/dist-packages/ubuntuone-storage-protocol&#39;, &#39;/usr/lib/python2.7/dist-packages/wx-2.8-gtk2-unicode&#39;]</td>
    </tr>
    <tr>
      <th>Server time:</th>
      <td>Mon, 19 Dec 2011 22:36:33 +0000</td>
    </tr>
  </table>
</div>



<div id="traceback">
  <h2>Traceback <span class="commands"><a href="#" onclick="return switchPastebinFriendly(this);">Switch to copy-and-paste view</a></span></h2>
  
  <div id="browserTraceback">
    <ul class="traceback">
      
        <li class="frame">
          <code>/home/john/asf/projects/consent-dev/site-python2.7/lib/python2.7/site-packages/django/core/handlers/base.py</code> in <code>get_response</code>

          
            <div class="context" id="c139809011986232">
              
                <ol start="83" class="pre-context" id="pre139809011986232"><li onclick="toggle('pre139809011986232', 'post139809011986232')">        # Set the urlconf for this thread to the one specified above.</li><li onclick="toggle('pre139809011986232', 'post139809011986232')">        urlresolvers.set_urlconf(urlconf)</li><li onclick="toggle('pre139809011986232', 'post139809011986232')"></li><li onclick="toggle('pre139809011986232', 'post139809011986232')">        resolver = urlresolvers.RegexURLResolver(r&#39;^/&#39;, urlconf)</li><li onclick="toggle('pre139809011986232', 'post139809011986232')">        try:</li><li onclick="toggle('pre139809011986232', 'post139809011986232')">            try:</li><li onclick="toggle('pre139809011986232', 'post139809011986232')">                callback, callback_args, callback_kwargs = resolver.resolve(</li></ol>
              
              <ol start="90" class="context-line"><li onclick="toggle('pre139809011986232', 'post139809011986232')">                        request.path_info) <span>...</span></li></ol>
              
                <ol start='91' class="post-context" id="post139809011986232"><li onclick="toggle('pre139809011986232', 'post139809011986232')"></li><li onclick="toggle('pre139809011986232', 'post139809011986232')">                # Apply view middleware</li><li onclick="toggle('pre139809011986232', 'post139809011986232')">                for middleware_method in self._view_middleware:</li><li onclick="toggle('pre139809011986232', 'post139809011986232')">                    response = middleware_method(request, callback, callback_args, callback_kwargs)</li><li onclick="toggle('pre139809011986232', 'post139809011986232')">                    if response:</li><li onclick="toggle('pre139809011986232', 'post139809011986232')">                        return response</li></ol>
              
            </div>
          

          
            <div class="commands">
                <a href="#" onclick="return varToggle(this, '139809011986232')"><span>&#x25b6;</span> Local vars</a>
            </div>
            <table class="vars" id="v139809011986232">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>exc_info</td>
                    <td class="code"><div>(&lt;class &#39;django.core.exceptions.ViewDoesNotExist&#39;&gt;,
 ViewDoesNotExist(&#39;Could not import consent.django.apps.kui.views.accesscontrol. Error was: No module named command&#39;,),
 &lt;traceback object at 0x7f27d27eef38&gt;)</div></td>
                  </tr>
                
                  <tr>
                    <td>exceptions</td>
                    <td class="code"><div>&lt;module &#39;django.core.exceptions&#39; from &#39;/home/john/asf/projects/consent-dev/site-python2.7/lib/python2.7/site-packages/django/core/exceptions.pyc&#39;&gt;</div></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><div>&lt;bound method AuthenticationMiddleware.process_request of &lt;django.contrib.auth.middleware.AuthenticationMiddleware object at 0x7f27d23cfc10&gt;&gt;</div></td>
                  </tr>
                
                  <tr>
                    <td>receivers</td>
                    <td class="code"><div>[(&lt;function _rollback_on_exception at 0x7f27d247bed8&gt;, None)]</div></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><div>&lt;WSGIRequest
GET:&lt;QueryDict: {}&gt;,
POST:&lt;QueryDict: {}&gt;,
COOKIES:{},
META:{&#39;DOCUMENT_ROOT&#39;: &#39;/etc/apache2/htdocs&#39;,
 &#39;GATEWAY_INTERFACE&#39;: &#39;CGI/1.1&#39;,
 &#39;HTTP_HOST&#39;: &#39;consent.dev.localhost&#39;,
 &#39;PATH_INFO&#39;: u&#39;/login/&#39;,
 &#39;PATH_TRANSLATED&#39;: &#39;/home/john/asf/projects/consent-dev/site/wsgi/consent.wsgi/login/&#39;,
 &#39;QUERY_STRING&#39;: &#39;&#39;,
 &#39;REMOTE_ADDR&#39;: &#39;127.0.0.1&#39;,
 &#39;REMOTE_PORT&#39;: &#39;53263&#39;,
 &#39;REQUEST_METHOD&#39;: &#39;GET&#39;,
 &#39;REQUEST_URI&#39;: &#39;/login/&#39;,
 &#39;SCRIPT_FILENAME&#39;: &#39;/home/john/asf/projects/consent-dev/site/wsgi/consent.wsgi&#39;,
 &#39;SCRIPT_NAME&#39;: u&#39;&#39;,
 &#39;SERVER_ADDR&#39;: &#39;127.0.0.1&#39;,
 &#39;SERVER_ADMIN&#39;: &#39;webmaster@localhost&#39;,
 &#39;SERVER_NAME&#39;: &#39;consent.dev.localhost&#39;,
 &#39;SERVER_PORT&#39;: &#39;80&#39;,
 &#39;SERVER_PROTOCOL&#39;: &#39;HTTP/1.0&#39;,
 &#39;SERVER_SIGNATURE&#39;: &#39;&lt;address&gt;Apache/2.2.20 (Ubuntu) Server at consent.dev.localhost Port 80&lt;/address&gt;\n&#39;,
 &#39;SERVER_SOFTWARE&#39;: &#39;Apache/2.2.20 (Ubuntu)&#39;,
 &#39;mod_wsgi.application_group&#39;: &#39;&#39;,
 &#39;mod_wsgi.callable_object&#39;: &#39;application&#39;,
 &#39;mod_wsgi.handler_script&#39;: &#39;&#39;,
 &#39;mod_wsgi.input_chunked&#39;: &#39;0&#39;,
 &#39;mod_wsgi.listener_host&#39;: &#39;&#39;,
 &#39;mod_wsgi.listener_port&#39;: &#39;80&#39;,
 &#39;mod_wsgi.process_group&#39;: &#39;consent&#39;,
 &#39;mod_wsgi.request_handler&#39;: &#39;wsgi-script&#39;,
 &#39;mod_wsgi.script_reloading&#39;: &#39;1&#39;,
 &#39;mod_wsgi.version&#39;: (3, 3),
 &#39;wsgi.errors&#39;: &lt;mod_wsgi.Log object at 0x7f27d27d5df0&gt;,
 &#39;wsgi.file_wrapper&#39;: &lt;built-in method file_wrapper of mod_wsgi.Adapter object at 0x7f27d27e9f30&gt;,
 &#39;wsgi.input&#39;: &lt;mod_wsgi.Input object at 0x7f27d27d5ef0&gt;,
 &#39;wsgi.multiprocess&#39;: False,
 &#39;wsgi.multithread&#39;: True,
 &#39;wsgi.run_once&#39;: False,
 &#39;wsgi.url_scheme&#39;: &#39;http&#39;,
 &#39;wsgi.version&#39;: (1, 1)}&gt;</div></td>
                  </tr>
                
                  <tr>
                    <td>resolver</td>
                    <td class="code"><div>&lt;RegexURLResolver consent.django.settings.urls.main (None:None) ^/&gt;</div></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><div>None</div></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><div>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x7f27d1a1dd50&gt;</div></td>
                  </tr>
                
                  <tr>
                    <td>settings</td>
                    <td class="code"><div>&lt;django.conf.LazySettings object at 0x7f27d19ea610&gt;</div></td>
                  </tr>
                
                  <tr>
                    <td>urlconf</td>
                    <td class="code"><div>&#39;consent.django.settings.urls.main&#39;</div></td>
                  </tr>
                
                  <tr>
                    <td>urlresolvers</td>
                    <td class="code"><div>&lt;module &#39;django.core.urlresolvers&#39; from &#39;/home/john/asf/projects/consent-dev/site-python2.7/lib/python2.7/site-packages/django/core/urlresolvers.pyc&#39;&gt;</div></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        <li class="frame">
          <code>/home/john/asf/projects/consent-dev/site-python2.7/lib/python2.7/site-packages/django/core/urlresolvers.py</code> in <code>resolve</code>

          
            <div class="context" id="c139809011920336">
              
                <ol start="215" class="pre-context" id="pre139809011920336"><li onclick="toggle('pre139809011920336', 'post139809011920336')">    def resolve(self, path):</li><li onclick="toggle('pre139809011920336', 'post139809011920336')">        tried = []</li><li onclick="toggle('pre139809011920336', 'post139809011920336')">        match = self.regex.search(path)</li><li onclick="toggle('pre139809011920336', 'post139809011920336')">        if match:</li><li onclick="toggle('pre139809011920336', 'post139809011920336')">            new_path = path[match.end():]</li><li onclick="toggle('pre139809011920336', 'post139809011920336')">            for pattern in self.url_patterns:</li><li onclick="toggle('pre139809011920336', 'post139809011920336')">                try:</li></ol>
              
              <ol start="222" class="context-line"><li onclick="toggle('pre139809011920336', 'post139809011920336')">                    sub_match = pattern.resolve(new_path) <span>...</span></li></ol>
              
                <ol start='223' class="post-context" id="post139809011920336"><li onclick="toggle('pre139809011920336', 'post139809011920336')">                except Resolver404, e:</li><li onclick="toggle('pre139809011920336', 'post139809011920336')">                    sub_tried = e.args[0].get(&#39;tried&#39;)</li><li onclick="toggle('pre139809011920336', 'post139809011920336')">                    if sub_tried is not None:</li><li onclick="toggle('pre139809011920336', 'post139809011920336')">                        tried.extend([(pattern.regex.pattern + &#39;   &#39; + t) for t in sub_tried])</li><li onclick="toggle('pre139809011920336', 'post139809011920336')">                    else:</li><li onclick="toggle('pre139809011920336', 'post139809011920336')">                        tried.append(pattern.regex.pattern)</li></ol>
              
            </div>
          

          
            <div class="commands">
                <a href="#" onclick="return varToggle(this, '139809011920336')"><span>&#x25b6;</span> Local vars</a>
            </div>
            <table class="vars" id="v139809011920336">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>match</td>
                    <td class="code"><div>&lt;_sre.SRE_Match object at 0x7f27d27c68b8&gt;</div></td>
                  </tr>
                
                  <tr>
                    <td>new_path</td>
                    <td class="code"><div>u&#39;login/&#39;</div></td>
                  </tr>
                
                  <tr>
                    <td>path</td>
                    <td class="code"><div>u&#39;/login/&#39;</div></td>
                  </tr>
                
                  <tr>
                    <td>pattern</td>
                    <td class="code"><div>&lt;RegexURLResolver consent.django.settings.urls.kui (None:None) ^&gt;</div></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><div>&lt;RegexURLResolver consent.django.settings.urls.main (None:None) ^/&gt;</div></td>
                  </tr>
                
                  <tr>
                    <td>tried</td>
                    <td class="code"><div>[]</div></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        <li class="frame">
          <code>/home/john/asf/projects/consent-dev/site-python2.7/lib/python2.7/site-packages/django/core/urlresolvers.py</code> in <code>resolve</code>

          
            <div class="context" id="c139809011919040">
              
                <ol start="215" class="pre-context" id="pre139809011919040"><li onclick="toggle('pre139809011919040', 'post139809011919040')">    def resolve(self, path):</li><li onclick="toggle('pre139809011919040', 'post139809011919040')">        tried = []</li><li onclick="toggle('pre139809011919040', 'post139809011919040')">        match = self.regex.search(path)</li><li onclick="toggle('pre139809011919040', 'post139809011919040')">        if match:</li><li onclick="toggle('pre139809011919040', 'post139809011919040')">            new_path = path[match.end():]</li><li onclick="toggle('pre139809011919040', 'post139809011919040')">            for pattern in self.url_patterns:</li><li onclick="toggle('pre139809011919040', 'post139809011919040')">                try:</li></ol>
              
              <ol start="222" class="context-line"><li onclick="toggle('pre139809011919040', 'post139809011919040')">                    sub_match = pattern.resolve(new_path) <span>...</span></li></ol>
              
                <ol start='223' class="post-context" id="post139809011919040"><li onclick="toggle('pre139809011919040', 'post139809011919040')">                except Resolver404, e:</li><li onclick="toggle('pre139809011919040', 'post139809011919040')">                    sub_tried = e.args[0].get(&#39;tried&#39;)</li><li onclick="toggle('pre139809011919040', 'post139809011919040')">                    if sub_tried is not None:</li><li onclick="toggle('pre139809011919040', 'post139809011919040')">                        tried.extend([(pattern.regex.pattern + &#39;   &#39; + t) for t in sub_tried])</li><li onclick="toggle('pre139809011919040', 'post139809011919040')">                    else:</li><li onclick="toggle('pre139809011919040', 'post139809011919040')">                        tried.append(pattern.regex.pattern)</li></ol>
              
            </div>
          

          
            <div class="commands">
                <a href="#" onclick="return varToggle(this, '139809011919040')"><span>&#x25b6;</span> Local vars</a>
            </div>
            <table class="vars" id="v139809011919040">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>match</td>
                    <td class="code"><div>&lt;_sre.SRE_Match object at 0x7f27d27c67e8&gt;</div></td>
                  </tr>
                
                  <tr>
                    <td>new_path</td>
                    <td class="code"><div>u&#39;login/&#39;</div></td>
                  </tr>
                
                  <tr>
                    <td>path</td>
                    <td class="code"><div>u&#39;login/&#39;</div></td>
                  </tr>
                
                  <tr>
                    <td>pattern</td>
                    <td class="code"><div>&lt;RegexURLPattern None ^login/(?P&lt;returnPath&gt;(.*))$&gt;</div></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><div>&lt;RegexURLResolver consent.django.settings.urls.kui (None:None) ^&gt;</div></td>
                  </tr>
                
                  <tr>
                    <td>sub_match</td>
                    <td class="code"><div>None</div></td>
                  </tr>
                
                  <tr>
                    <td>tried</td>
                    <td class="code"><div>[&#39;^$&#39;, &#39;^about/$&#39;, &#39;^feed/$&#39;, &#39;^recover/$&#39;]</div></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        <li class="frame">
          <code>/home/john/asf/projects/consent-dev/site-python2.7/lib/python2.7/site-packages/django/core/urlresolvers.py</code> in <code>resolve</code>

          
            <div class="context" id="c139809011879448">
              
                <ol start="122" class="pre-context" id="pre139809011879448"><li onclick="toggle('pre139809011879448', 'post139809011879448')">            if kwargs:</li><li onclick="toggle('pre139809011879448', 'post139809011879448')">                args = ()</li><li onclick="toggle('pre139809011879448', 'post139809011879448')">            else:</li><li onclick="toggle('pre139809011879448', 'post139809011879448')">                args = match.groups()</li><li onclick="toggle('pre139809011879448', 'post139809011879448')">            # In both cases, pass any extra_kwargs as **kwargs.</li><li onclick="toggle('pre139809011879448', 'post139809011879448')">            kwargs.update(self.default_args)</li><li onclick="toggle('pre139809011879448', 'post139809011879448')"></li></ol>
              
              <ol start="129" class="context-line"><li onclick="toggle('pre139809011879448', 'post139809011879448')">            return self.callback, args, kwargs <span>...</span></li></ol>
              
                <ol start='130' class="post-context" id="post139809011879448"><li onclick="toggle('pre139809011879448', 'post139809011879448')"></li><li onclick="toggle('pre139809011879448', 'post139809011879448')">    def _get_callback(self):</li><li onclick="toggle('pre139809011879448', 'post139809011879448')">        if self._callback is not None:</li><li onclick="toggle('pre139809011879448', 'post139809011879448')">            return self._callback</li><li onclick="toggle('pre139809011879448', 'post139809011879448')">        try:</li><li onclick="toggle('pre139809011879448', 'post139809011879448')">            self._callback = get_callable(self._callback_str)</li></ol>
              
            </div>
          

          
            <div class="commands">
                <a href="#" onclick="return varToggle(this, '139809011879448')"><span>&#x25b6;</span> Local vars</a>
            </div>
            <table class="vars" id="v139809011879448">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><div>()</div></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><div>{&#39;returnPath&#39;: u&#39;&#39;}</div></td>
                  </tr>
                
                  <tr>
                    <td>match</td>
                    <td class="code"><div>&lt;_sre.SRE_Match object at 0x7f27d2699690&gt;</div></td>
                  </tr>
                
                  <tr>
                    <td>path</td>
                    <td class="code"><div>u&#39;login/&#39;</div></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><div>&lt;RegexURLPattern None ^login/(?P&lt;returnPath&gt;(.*))$&gt;</div></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        <li class="frame">
          <code>/home/john/asf/projects/consent-dev/site-python2.7/lib/python2.7/site-packages/django/core/urlresolvers.py</code> in <code>_get_callback</code>

          
            <div class="context" id="c139809012020936">
              
                <ol start="131" class="pre-context" id="pre139809012020936"><li onclick="toggle('pre139809012020936', 'post139809012020936')">    def _get_callback(self):</li><li onclick="toggle('pre139809012020936', 'post139809012020936')">        if self._callback is not None:</li><li onclick="toggle('pre139809012020936', 'post139809012020936')">            return self._callback</li><li onclick="toggle('pre139809012020936', 'post139809012020936')">        try:</li><li onclick="toggle('pre139809012020936', 'post139809012020936')">            self._callback = get_callable(self._callback_str)</li><li onclick="toggle('pre139809012020936', 'post139809012020936')">        except ImportError, e:</li><li onclick="toggle('pre139809012020936', 'post139809012020936')">            mod_name, _ = get_mod_func(self._callback_str)</li></ol>
              
              <ol start="138" class="context-line"><li onclick="toggle('pre139809012020936', 'post139809012020936')">            raise ViewDoesNotExist, &quot;Could not import %s. Error was: %s&quot; % (mod_name, str(e)) <span>...</span></li></ol>
              
                <ol start='139' class="post-context" id="post139809012020936"><li onclick="toggle('pre139809012020936', 'post139809012020936')">        except AttributeError, e:</li><li onclick="toggle('pre139809012020936', 'post139809012020936')">            mod_name, func_name = get_mod_func(self._callback_str)</li><li onclick="toggle('pre139809012020936', 'post139809012020936')">            raise ViewDoesNotExist, &quot;Tried %s in module %s. Error was: %s&quot; % (func_name, mod_name, str(e))</li><li onclick="toggle('pre139809012020936', 'post139809012020936')">        return self._callback</li><li onclick="toggle('pre139809012020936', 'post139809012020936')">    callback = property(_get_callback)</li><li onclick="toggle('pre139809012020936', 'post139809012020936')"></li></ol>
              
            </div>
          

          
            <div class="commands">
                <a href="#" onclick="return varToggle(this, '139809012020936')"><span>&#x25b6;</span> Local vars</a>
            </div>
            <table class="vars" id="v139809012020936">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>_</td>
                    <td class="code"><div>&#39;login&#39;</div></td>
                  </tr>
                
                  <tr>
                    <td>e</td>
                    <td class="code"><div>ImportError(&#39;No module named command&#39;,)</div></td>
                  </tr>
                
                  <tr>
                    <td>mod_name</td>
                    <td class="code"><div>&#39;consent.django.apps.kui.views.accesscontrol&#39;</div></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><div>&lt;RegexURLPattern None ^login/(?P&lt;returnPath&gt;(.*))$&gt;</div></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
    </ul>
  </div>
  
  <form action="http://dpaste.com/" name="pasteform" id="pasteform" method="post">
  <div id="pastebinTraceback" class="pastebin">
    <input type="hidden" name="language" value="PythonConsole">
    <input type="hidden" name="title" value="ViewDoesNotExist at /login/">
    <input type="hidden" name="source" value="Django Dpaste Agent">
    <input type="hidden" name="poster" value="Django">
    <textarea name="content" id="traceback_area" cols="140" rows="25">
Environment:

Request Method: GET
Request URL: http://consent.dev.localhost/login/
Django Version: 1.1.4
Python Version: 2.7.2
Installed Applications:
[]
Installed Middleware:
(&#39;django.middleware.common.CommonMiddleware&#39;,
 &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,
 &#39;django.contrib.auth.middleware.AuthenticationMiddleware&#39;)


Traceback:
File "/home/john/asf/projects/consent-dev/site-python2.7/lib/python2.7/site-packages/django/core/handlers/base.py" in get_response
  90.                         request.path_info)
File "/home/john/asf/projects/consent-dev/site-python2.7/lib/python2.7/site-packages/django/core/urlresolvers.py" in resolve
  222.                     sub_match = pattern.resolve(new_path)
File "/home/john/asf/projects/consent-dev/site-python2.7/lib/python2.7/site-packages/django/core/urlresolvers.py" in resolve
  222.                     sub_match = pattern.resolve(new_path)
File "/home/john/asf/projects/consent-dev/site-python2.7/lib/python2.7/site-packages/django/core/urlresolvers.py" in resolve
  129.             return self.callback, args, kwargs
File "/home/john/asf/projects/consent-dev/site-python2.7/lib/python2.7/site-packages/django/core/urlresolvers.py" in _get_callback
  138.             raise ViewDoesNotExist, &quot;Could not import %s. Error was: %s&quot; % (mod_name, str(e))

Exception Type: ViewDoesNotExist at /login/
Exception Value: Could not import consent.django.apps.kui.views.accesscontrol. Error was: No module named command
</textarea>
  <br><br>
  <input type="submit" value="Share this traceback on a public Web site">
  </div>
</form>
</div>

<div id="requestinfo">
  <h2>Request information</h2>

  <h3 id="get-info">GET</h3>
  
    <p>No GET data</p>
  

  <h3 id="post-info">POST</h3>
  
    <p>No POST data</p>
  
  <h3 id="files-info">FILES</h3>
  
    <p>No FILES data</p>
  


  <h3 id="cookie-info">COOKIES</h3>
  
    <p>No cookie data</p>
  

  <h3 id="meta-info">META</h3>
  <table class="req">
    <thead>
      <tr>
        <th>Variable</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>DOCUMENT_ROOT</td>
          <td class="code"><div>&#39;/etc/apache2/htdocs&#39;</div></td>
        </tr>
      
        <tr>
          <td>GATEWAY_INTERFACE</td>
          <td class="code"><div>&#39;CGI/1.1&#39;</div></td>
        </tr>
      
        <tr>
          <td>HTTP_HOST</td>
          <td class="code"><div>&#39;consent.dev.localhost&#39;</div></td>
        </tr>
      
        <tr>
          <td>PATH_INFO</td>
          <td class="code"><div>u&#39;/login/&#39;</div></td>
        </tr>
      
        <tr>
          <td>PATH_TRANSLATED</td>
          <td class="code"><div>&#39;/home/john/asf/projects/consent-dev/site/wsgi/consent.wsgi/login/&#39;</div></td>
        </tr>
      
        <tr>
          <td>QUERY_STRING</td>
          <td class="code"><div>&#39;&#39;</div></td>
        </tr>
      
        <tr>
          <td>REMOTE_ADDR</td>
          <td class="code"><div>&#39;127.0.0.1&#39;</div></td>
        </tr>
      
        <tr>
          <td>REMOTE_PORT</td>
          <td class="code"><div>&#39;53263&#39;</div></td>
        </tr>
      
        <tr>
          <td>REQUEST_METHOD</td>
          <td class="code"><div>&#39;GET&#39;</div></td>
        </tr>
      
        <tr>
          <td>REQUEST_URI</td>
          <td class="code"><div>&#39;/login/&#39;</div></td>
        </tr>
      
        <tr>
          <td>SCRIPT_FILENAME</td>
          <td class="code"><div>&#39;/home/john/asf/projects/consent-dev/site/wsgi/consent.wsgi&#39;</div></td>
        </tr>
      
        <tr>
          <td>SCRIPT_NAME</td>
          <td class="code"><div>u&#39;&#39;</div></td>
        </tr>
      
        <tr>
          <td>SERVER_ADDR</td>
          <td class="code"><div>&#39;127.0.0.1&#39;</div></td>
        </tr>
      
        <tr>
          <td>SERVER_ADMIN</td>
          <td class="code"><div>&#39;webmaster@localhost&#39;</div></td>
        </tr>
      
        <tr>
          <td>SERVER_NAME</td>
          <td class="code"><div>&#39;consent.dev.localhost&#39;</div></td>
        </tr>
      
        <tr>
          <td>SERVER_PORT</td>
          <td class="code"><div>&#39;80&#39;</div></td>
        </tr>
      
        <tr>
          <td>SERVER_PROTOCOL</td>
          <td class="code"><div>&#39;HTTP/1.0&#39;</div></td>
        </tr>
      
        <tr>
          <td>SERVER_SIGNATURE</td>
          <td class="code"><div>&#39;&lt;address&gt;Apache/2.2.20 (Ubuntu) Server at consent.dev.localhost Port 80&lt;/address&gt;\n&#39;</div></td>
        </tr>
      
        <tr>
          <td>SERVER_SOFTWARE</td>
          <td class="code"><div>&#39;Apache/2.2.20 (Ubuntu)&#39;</div></td>
        </tr>
      
        <tr>
          <td>mod_wsgi.application_group</td>
          <td class="code"><div>&#39;&#39;</div></td>
        </tr>
      
        <tr>
          <td>mod_wsgi.callable_object</td>
          <td class="code"><div>&#39;application&#39;</div></td>
        </tr>
      
        <tr>
          <td>mod_wsgi.handler_script</td>
          <td class="code"><div>&#39;&#39;</div></td>
        </tr>
      
        <tr>
          <td>mod_wsgi.input_chunked</td>
          <td class="code"><div>&#39;0&#39;</div></td>
        </tr>
      
        <tr>
          <td>mod_wsgi.listener_host</td>
          <td class="code"><div>&#39;&#39;</div></td>
        </tr>
      
        <tr>
          <td>mod_wsgi.listener_port</td>
          <td class="code"><div>&#39;80&#39;</div></td>
        </tr>
      
        <tr>
          <td>mod_wsgi.process_group</td>
          <td class="code"><div>&#39;consent&#39;</div></td>
        </tr>
      
        <tr>
          <td>mod_wsgi.request_handler</td>
          <td class="code"><div>&#39;wsgi-script&#39;</div></td>
        </tr>
      
        <tr>
          <td>mod_wsgi.script_reloading</td>
          <td class="code"><div>&#39;1&#39;</div></td>
        </tr>
      
        <tr>
          <td>mod_wsgi.version</td>
          <td class="code"><div>(3, 3)</div></td>
        </tr>
      
        <tr>
          <td>wsgi.errors</td>
          <td class="code"><div>&lt;mod_wsgi.Log object at 0x7f27d27d5df0&gt;</div></td>
        </tr>
      
        <tr>
          <td>wsgi.file_wrapper</td>
          <td class="code"><div>&lt;built-in method file_wrapper of mod_wsgi.Adapter object at 0x7f27d27e9f30&gt;</div></td>
        </tr>
      
        <tr>
          <td>wsgi.input</td>
          <td class="code"><div>&lt;mod_wsgi.Input object at 0x7f27d27d5ef0&gt;</div></td>
        </tr>
      
        <tr>
          <td>wsgi.multiprocess</td>
          <td class="code"><div>False</div></td>
        </tr>
      
        <tr>
          <td>wsgi.multithread</td>
          <td class="code"><div>True</div></td>
        </tr>
      
        <tr>
          <td>wsgi.run_once</td>
          <td class="code"><div>False</div></td>
        </tr>
      
        <tr>
          <td>wsgi.url_scheme</td>
          <td class="code"><div>&#39;http&#39;</div></td>
        </tr>
      
        <tr>
          <td>wsgi.version</td>
          <td class="code"><div>(1, 1)</div></td>
        </tr>
      
    </tbody>
  </table>

  <h3 id="settings-info">Settings</h3>
  <h4>Using settings module <code>consent.django.settings.main</code></h4>
  <table class="req">
    <thead>
      <tr>
        <th>Setting</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>ABSOLUTE_URL_OVERRIDES</td>
          <td class="code"><div>{}</div></td>
        </tr>
      
        <tr>
          <td>ADMINS</td>
          <td class="code"><div>()</div></td>
        </tr>
      
        <tr>
          <td>ADMIN_FOR</td>
          <td class="code"><div>()</div></td>
        </tr>
      
        <tr>
          <td>ADMIN_MEDIA_PREFIX</td>
          <td class="code"><div>&#39;/media/&#39;</div></td>
        </tr>
      
        <tr>
          <td>ALLOWED_INCLUDE_ROOTS</td>
          <td class="code"><div>()</div></td>
        </tr>
      
        <tr>
          <td>APPEND_SLASH</td>
          <td class="code"><div>True</div></td>
        </tr>
      
        <tr>
          <td>AUTHENTICATION_BACKENDS</td>
          <td class="code"><div>(&#39;django.contrib.auth.backends.ModelBackend&#39;,)</div></td>
        </tr>
      
        <tr>
          <td>BANNED_IPS</td>
          <td class="code"><div>()</div></td>
        </tr>
      
        <tr>
          <td>CACHE_BACKEND</td>
          <td class="code"><div>&#39;locmem://&#39;</div></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>
          <td class="code"><div>&#39;&#39;</div></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_SECONDS</td>
          <td class="code"><div>600</div></td>
        </tr>
      
        <tr>
          <td>COMMENTS_ALLOW_PROFANITIES</td>
          <td class="code"><div>False</div></td>
        </tr>
      
        <tr>
          <td>COMMENTS_BANNED_USERS_GROUP</td>
          <td class="code"><div>None</div></td>
        </tr>
      
        <tr>
          <td>COMMENTS_FIRST_FEW</td>
          <td class="code"><div>0</div></td>
        </tr>
      
        <tr>
          <td>COMMENTS_MODERATORS_GROUP</td>
          <td class="code"><div>None</div></td>
        </tr>
      
        <tr>
          <td>COMMENTS_SKETCHY_USERS_GROUP</td>
          <td class="code"><div>None</div></td>
        </tr>
      
        <tr>
          <td>DATABASE_ENGINE</td>
          <td class="code"><div>&#39;dummy&#39;</div></td>
        </tr>
      
        <tr>
          <td>DATABASE_HOST</td>
          <td class="code"><div>&#39;&#39;</div></td>
        </tr>
      
        <tr>
          <td>DATABASE_NAME</td>
          <td class="code"><div>&#39;&#39;</div></td>
        </tr>
      
        <tr>
          <td>DATABASE_OPTIONS</td>
          <td class="code"><div>{}</div></td>
        </tr>
      
        <tr>
          <td>DATABASE_PASSWORD</td>
          <td class="code"><div>&#39;********************&#39;</div></td>
        </tr>
      
        <tr>
          <td>DATABASE_PORT</td>
          <td class="code"><div>&#39;&#39;</div></td>
        </tr>
      
        <tr>
          <td>DATABASE_USER</td>
          <td class="code"><div>&#39;&#39;</div></td>
        </tr>
      
        <tr>
          <td>DATETIME_FORMAT</td>
          <td class="code"><div>&#39;N j, Y, P&#39;</div></td>
        </tr>
      
        <tr>
          <td>DATE_FORMAT</td>
          <td class="code"><div>&#39;N j, Y&#39;</div></td>
        </tr>
      
        <tr>
          <td>DEBUG</td>
          <td class="code"><div>True</div></td>
        </tr>
      
        <tr>
          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>
          <td class="code"><div>False</div></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CHARSET</td>
          <td class="code"><div>&#39;utf-8&#39;</div></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CONTENT_TYPE</td>
          <td class="code"><div>&#39;text/html&#39;</div></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FILE_STORAGE</td>
          <td class="code"><div>&#39;django.core.files.storage.FileSystemStorage&#39;</div></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FROM_EMAIL</td>
          <td class="code"><div>&#39;webmaster@localhost&#39;</div></td>
        </tr>
      
        <tr>
          <td>DEFAULT_INDEX_TABLESPACE</td>
          <td class="code"><div>&#39;&#39;</div></td>
        </tr>
      
        <tr>
          <td>DEFAULT_TABLESPACE</td>
          <td class="code"><div>&#39;&#39;</div></td>
        </tr>
      
        <tr>
          <td>DISALLOWED_USER_AGENTS</td>
          <td class="code"><div>()</div></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST</td>
          <td class="code"><div>&#39;localhost&#39;</div></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_PASSWORD</td>
          <td class="code"><div>&#39;********************&#39;</div></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_USER</td>
          <td class="code"><div>&#39;&#39;</div></td>
        </tr>
      
        <tr>
          <td>EMAIL_PORT</td>
          <td class="code"><div>25</div></td>
        </tr>
      
        <tr>
          <td>EMAIL_SUBJECT_PREFIX</td>
          <td class="code"><div>&#39;[Django] &#39;</div></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_TLS</td>
          <td class="code"><div>False</div></td>
        </tr>
      
        <tr>
          <td>FILE_CHARSET</td>
          <td class="code"><div>&#39;utf-8&#39;</div></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_HANDLERS</td>
          <td class="code"><div>(&#39;django.core.files.uploadhandler.MemoryFileUploadHandler&#39;,
 &#39;django.core.files.uploadhandler.TemporaryFileUploadHandler&#39;)</div></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><div>2621440</div></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_PERMISSIONS</td>
          <td class="code"><div>None</div></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_TEMP_DIR</td>
          <td class="code"><div>None</div></td>
        </tr>
      
        <tr>
          <td>FIXTURE_DIRS</td>
          <td class="code"><div>()</div></td>
        </tr>
      
        <tr>
          <td>FORCE_SCRIPT_NAME</td>
          <td class="code"><div>None</div></td>
        </tr>
      
        <tr>
          <td>IGNORABLE_404_ENDS</td>
          <td class="code"><div>(&#39;mail.pl&#39;, &#39;mailform.pl&#39;, &#39;mail.cgi&#39;, &#39;mailform.cgi&#39;, &#39;favicon.ico&#39;, &#39;.php&#39;)</div></td>
        </tr>
      
        <tr>
          <td>IGNORABLE_404_STARTS</td>
          <td class="code"><div>(&#39;/cgi-bin/&#39;, &#39;/_vti_bin&#39;, &#39;/_vti_inf&#39;)</div></td>
        </tr>
      
        <tr>
          <td>INSTALLED_APPS</td>
          <td class="code"><div>[]</div></td>
        </tr>
      
        <tr>
          <td>INTERNAL_IPS</td>
          <td class="code"><div>()</div></td>
        </tr>
      
        <tr>
          <td>LANGUAGES</td>
          <td class="code"><div>((&#39;ar&#39;, &#39;Arabic&#39;),
 (&#39;bg&#39;, &#39;Bulgarian&#39;),
 (&#39;bn&#39;, &#39;Bengali&#39;),
 (&#39;bs&#39;, &#39;Bosnian&#39;),
 (&#39;ca&#39;, &#39;Catalan&#39;),
 (&#39;cs&#39;, &#39;Czech&#39;),
 (&#39;cy&#39;, &#39;Welsh&#39;),
 (&#39;da&#39;, &#39;Danish&#39;),
 (&#39;de&#39;, &#39;German&#39;),
 (&#39;el&#39;, &#39;Greek&#39;),
 (&#39;en&#39;, &#39;English&#39;),
 (&#39;es&#39;, &#39;Spanish&#39;),
 (&#39;es-ar&#39;, &#39;Argentinean Spanish&#39;),
 (&#39;et&#39;, &#39;Estonian&#39;),
 (&#39;eu&#39;, &#39;Basque&#39;),
 (&#39;fa&#39;, &#39;Persian&#39;),
 (&#39;fi&#39;, &#39;Finnish&#39;),
 (&#39;fr&#39;, &#39;French&#39;),
 (&#39;fy-nl&#39;, &#39;Frisian&#39;),
 (&#39;ga&#39;, &#39;Irish&#39;),
 (&#39;gl&#39;, &#39;Galician&#39;),
 (&#39;he&#39;, &#39;Hebrew&#39;),
 (&#39;hi&#39;, &#39;Hindi&#39;),
 (&#39;hr&#39;, &#39;Croatian&#39;),
 (&#39;hu&#39;, &#39;Hungarian&#39;),
 (&#39;is&#39;, &#39;Icelandic&#39;),
 (&#39;it&#39;, &#39;Italian&#39;),
 (&#39;ja&#39;, &#39;Japanese&#39;),
 (&#39;ka&#39;, &#39;Georgian&#39;),
 (&#39;km&#39;, &#39;Khmer&#39;),
 (&#39;kn&#39;, &#39;Kannada&#39;),
 (&#39;ko&#39;, &#39;Korean&#39;),
 (&#39;lt&#39;, &#39;Lithuanian&#39;),
 (&#39;lv&#39;, &#39;Latvian&#39;),
 (&#39;mk&#39;, &#39;Macedonian&#39;),
 (&#39;nl&#39;, &#39;Dutch&#39;),
 (&#39;no&#39;, &#39;Norwegian&#39;),
 (&#39;pl&#39;, &#39;Polish&#39;),
 (&#39;pt&#39;, &#39;Portuguese&#39;),
 (&#39;pt-br&#39;, &#39;Brazilian Portuguese&#39;),
 (&#39;ro&#39;, &#39;Romanian&#39;),
 (&#39;ru&#39;, &#39;Russian&#39;),
 (&#39;sk&#39;, &#39;Slovak&#39;),
 (&#39;sl&#39;, &#39;Slovenian&#39;),
 (&#39;sq&#39;, &#39;Albanian&#39;),
 (&#39;sr&#39;, &#39;Serbian&#39;),
 (&#39;sr-latn&#39;, &#39;Serbian Latin&#39;),
 (&#39;sv&#39;, &#39;Swedish&#39;),
 (&#39;ta&#39;, &#39;Tamil&#39;),
 (&#39;te&#39;, &#39;Telugu&#39;),
 (&#39;th&#39;, &#39;Thai&#39;),
 (&#39;tr&#39;, &#39;Turkish&#39;),
 (&#39;uk&#39;, &#39;Ukrainian&#39;),
 (&#39;zh-cn&#39;, &#39;Simplified Chinese&#39;),
 (&#39;zh-tw&#39;, &#39;Traditional Chinese&#39;))</div></td>
        </tr>
      
        <tr>
          <td>LANGUAGES_BIDI</td>
          <td class="code"><div>(&#39;he&#39;, &#39;ar&#39;, &#39;fa&#39;)</div></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_CODE</td>
          <td class="code"><div>&#39;en-us&#39;</div></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_NAME</td>
          <td class="code"><div>&#39;django_language&#39;</div></td>
        </tr>
      
        <tr>
          <td>LOCALE_PATHS</td>
          <td class="code"><div>()</div></td>
        </tr>
      
        <tr>
          <td>LOGIN_REDIRECT_URL</td>
          <td class="code"><div>&#39;/accounts/profile/&#39;</div></td>
        </tr>
      
        <tr>
          <td>LOGIN_URL</td>
          <td class="code"><div>&#39;/accounts/login/&#39;</div></td>
        </tr>
      
        <tr>
          <td>LOGOUT_URL</td>
          <td class="code"><div>&#39;/accounts/logout/&#39;</div></td>
        </tr>
      
        <tr>
          <td>MANAGERS</td>
          <td class="code"><div>()</div></td>
        </tr>
      
        <tr>
          <td>MEDIA_ROOT</td>
          <td class="code"><div>&#39;&#39;</div></td>
        </tr>
      
        <tr>
          <td>MEDIA_URL</td>
          <td class="code"><div>&#39;&#39;</div></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE_CLASSES</td>
          <td class="code"><div>(&#39;django.middleware.common.CommonMiddleware&#39;,
 &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,
 &#39;django.contrib.auth.middleware.AuthenticationMiddleware&#39;)</div></td>
        </tr>
      
        <tr>
          <td>MONTH_DAY_FORMAT</td>
          <td class="code"><div>&#39;F j&#39;</div></td>
        </tr>
      
        <tr>
          <td>PASSWORD_RESET_TIMEOUT_DAYS</td>
          <td class="code"><div>&#39;********************&#39;</div></td>
        </tr>
      
        <tr>
          <td>PREPEND_WWW</td>
          <td class="code"><div>False</div></td>
        </tr>
      
        <tr>
          <td>PROFANITIES_LIST</td>
          <td class="code"><div>&#39;********************&#39;</div></td>
        </tr>
      
        <tr>
          <td>ROOT_URLCONF</td>
          <td class="code"><div>&#39;consent.django.settings.urls.main&#39;</div></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY</td>
          <td class="code"><div>&#39;********************&#39;</div></td>
        </tr>
      
        <tr>
          <td>SEND_BROKEN_LINK_EMAILS</td>
          <td class="code"><div>False</div></td>
        </tr>
      
        <tr>
          <td>SERVER_EMAIL</td>
          <td class="code"><div>&#39;root@localhost&#39;</div></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_AGE</td>
          <td class="code"><div>1209600</div></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_DOMAIN</td>
          <td class="code"><div>None</div></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_NAME</td>
          <td class="code"><div>&#39;sessionid&#39;</div></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_PATH</td>
          <td class="code"><div>&#39;/&#39;</div></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SECURE</td>
          <td class="code"><div>False</div></td>
        </tr>
      
        <tr>
          <td>SESSION_ENGINE</td>
          <td class="code"><div>&#39;django.contrib.sessions.backends.db&#39;</div></td>
        </tr>
      
        <tr>
          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>
          <td class="code"><div>False</div></td>
        </tr>
      
        <tr>
          <td>SESSION_FILE_PATH</td>
          <td class="code"><div>None</div></td>
        </tr>
      
        <tr>
          <td>SESSION_SAVE_EVERY_REQUEST</td>
          <td class="code"><div>False</div></td>
        </tr>
      
        <tr>
          <td>SETTINGS_MODULE</td>
          <td class="code"><div>&#39;consent.django.settings.main&#39;</div></td>
        </tr>
      
        <tr>
          <td>SITE_ID</td>
          <td class="code"><div>1</div></td>
        </tr>
      
        <tr>
          <td>TEMPLATE_CONTEXT_PROCESSORS</td>
          <td class="code"><div>(&#39;django.core.context_processors.auth&#39;,
 &#39;django.core.context_processors.debug&#39;,
 &#39;django.core.context_processors.i18n&#39;,
 &#39;django.core.context_processors.media&#39;)</div></td>
        </tr>
      
        <tr>
          <td>TEMPLATE_DEBUG</td>
          <td class="code"><div>False</div></td>
        </tr>
      
        <tr>
          <td>TEMPLATE_DIRS</td>
          <td class="code"><div>(&#39;/home/john/asf/projects/consent-dev/site/templates&#39;,)</div></td>
        </tr>
      
        <tr>
          <td>TEMPLATE_LOADERS</td>
          <td class="code"><div>(&#39;django.template.loaders.filesystem.load_template_source&#39;,
 &#39;django.template.loaders.app_directories.load_template_source&#39;)</div></td>
        </tr>
      
        <tr>
          <td>TEMPLATE_STRING_IF_INVALID</td>
          <td class="code"><div>&#39;&#39;</div></td>
        </tr>
      
        <tr>
          <td>TEST_DATABASE_CHARSET</td>
          <td class="code"><div>None</div></td>
        </tr>
      
        <tr>
          <td>TEST_DATABASE_COLLATION</td>
          <td class="code"><div>None</div></td>
        </tr>
      
        <tr>
          <td>TEST_DATABASE_NAME</td>
          <td class="code"><div>None</div></td>
        </tr>
      
        <tr>
          <td>TEST_RUNNER</td>
          <td class="code"><div>&#39;django.test.simple.run_tests&#39;</div></td>
        </tr>
      
        <tr>
          <td>TIME_FORMAT</td>
          <td class="code"><div>&#39;P&#39;</div></td>
        </tr>
      
        <tr>
          <td>TIME_ZONE</td>
          <td class="code"><div>&#39;&#39;</div></td>
        </tr>
      
        <tr>
          <td>TRANSACTIONS_MANAGED</td>
          <td class="code"><div>False</div></td>
        </tr>
      
        <tr>
          <td>URL_VALIDATOR_USER_AGENT</td>
          <td class="code"><div>&#39;Django/1.1.4 (http://www.djangoproject.com)&#39;</div></td>
        </tr>
      
        <tr>
          <td>USE_ETAGS</td>
          <td class="code"><div>False</div></td>
        </tr>
      
        <tr>
          <td>USE_I18N</td>
          <td class="code"><div>True</div></td>
        </tr>
      
        <tr>
          <td>YEAR_MONTH_FORMAT</td>
          <td class="code"><div>&#39;F Y&#39;</div></td>
        </tr>
      
    </tbody>
  </table>

</div>

<div id="explanation">
  <p>
    You're seeing this error because you have <code>DEBUG = True</code> in your
    Django settings file. Change that to <code>False</code>, and Django will
    display a standard 500 page.
  </p>
</div>
</body>
</html>

