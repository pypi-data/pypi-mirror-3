#!/usr/bin/env python

# Copyright (c) 2009, Purdue University
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer.
#
# Redistributions in binary form must reproduce the above copyright notice, this
# list of conditions and the following disclaimer in the documentation and/or
# other materials provided with the distribution.
#
# Neither the name of the Purdue University nor the names of its contributors
# may be used to endorse or promote products derived from this software without
# specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

"""list CNAMEs for a given assignment hostname"""


__copyright__ = 'Copyright (C) 2009, Purdue University'
__license__ = 'BSD'
__version__ = '0.17'


import sys

from roster_user_tools import cli_common_lib
from roster_user_tools import roster_client_lib
from roster_user_tools.action_flags import List
from roster_user_tools.data_flags import CNAME


class Args(List, CNAME):
  pass


def Main(args):
  """Collects command line arguments.

  Inputs:
    args: list of arguments from the command line
  """
  command = None
  if( args and not args[0].startswith('-') ):
    command = args.pop(0)
  usage = ('\n'
           '\n'
           'To list all CNAMEs for a specified hostname:\n'
           '\t%s cname --hostname <hostname> -v <view-name> '
           '-z <zone-name> [-r]\n'
           '\n' % tuple(sys.argv[0] for x in range(1)))
  args_instance = Args(command, ['cname'], args, usage)
  options = args_instance.options

  try:
    cli_common_lib_instance = cli_common_lib.CliCommonLib(options)
  except cli_common_lib.ArgumentError, error:
    print 'ERROR: %s' % error
    sys.exit(1)

  views = roster_client_lib.RunFunction(
      u'ListViews', options.username,
      credfile=options.credfile, credstring=options.credstring,
      server_name=options.server, kwargs={
          u'view_name': options.view_name})['core_return']

  if( options.view_name and not views and options.view_name != 'any' ):
    cli_common_lib.DnsError('View not found.', 1)

  if( not options.no_header ):
    print_list = [['target', 'assignment_host']]

  cnames = roster_client_lib.RunFunction(
      u'GetAssociatedCNAMEs', options.username,
      credfile=options.credfile, credstring=options.credstring,
      server_name=options.server, kwargs={
          u'hostname': options.hostname, u'zone_name': options.zone_name,
          u'view_name': options.view_name,
          u'recursive': options.recursive})['core_return']

  for cname in cnames:
    print_list.append([cname['target'], cname['assignment_host']])

  print cli_common_lib.PrintColumns(
      print_list, first_line_header=(not options.no_header))

if __name__ == "__main__":
  Main(sys.argv[1:])
