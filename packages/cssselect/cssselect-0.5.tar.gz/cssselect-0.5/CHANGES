Changelog
=========

Version 0.5
-----------

Released on 2012-04-20.

* Fix case sensitivity issues.
* Implement :class:`HTMLTranslator` based on the `HTML5 specification`_
  rather than guessing; add the ``xhtml`` parameter.
* Several bug fixes and better test coverage.

.. _HTML5 specification: http://www.w3.org/TR/html5/links.html#selectors


Version 0.4
-----------

Released on 2012-04-18.

* Add proper support for pseudo-elements
* Add specificity calculation
* Expose the :func:`parse` function and the parsed :class:`Selector` objects
  in the API.
* Add the :meth:`~GenericTranslator.selector_to_xpath` method.


Version 0.3
-----------

Released on 2012-04-17.

* Fix many parsing bugs.
* Rename the :class:`Translator` class to :class:`GenericTranslator`
* There, implement ``:target``, ``:hover``, ``:focus``, ``:active``
  ``:checked``, ``:enabled``, ``:disabled``, ``:link`` and ``:visited``
  as never matching.
* Make a new HTML-specific ``HTMLTranslator`` subclass. There, implement
  ``:checked``, ``:enabled``, ``:disabled``, ``:link`` and ``:visited``
  as appropriate for HTML, with all links  "not visited".
* Remove the :func:`css_to_xpath` function. The translator classes
  are the new API.
* Add support for ``:contains()`` back, but case-sensitive. lxml will
  override it to be case-insensitive for backward-compatibility.

Discussion is open if anyone is interested in implementing eg. ``:target``
or ``:visited`` differently, but they can always do it in a ``Translator``
subclass.


Version 0.2
-----------

Released on 2012-04-16.

* Remove the ``CSSSelector`` class. (The ``css_to_xpath()`` function is now
  the main API.)
* Remove support for the ``:contains()`` pseudo-class.

These changes allow cssselect to be used without lxml. (Hey, this was
the whole point of this project.) The tests still require lxml, though.
The removed parts are expected to stay in lxml for backward-compatibility.

``:contains()`` only existed in an `early draft
<http://www.w3.org/TR/2001/CR-css3-selectors-20011113/#content-selectors>`_
of the Selectors specification, and was removed before Level 3 stabilized.
Internally, it used a custom XPath extension function which can be
difficult to express outside of lxml.


* Separate the XPath translation from the parsed objects into a new
  ``Translator`` class.

Subclasses of ``Translator`` can be made to change the way that some selector
(eg. a pseudo-class) is implemented.


Version 0.1
-----------

Released on 2012-04-13.

Extract lxml.cssselect from the rest of lxml and make it a stand-alone project.

Commit ``ea53ceaf7e44ba4fbb5c818ae31370932f47774e`` was taken on 2012-04-11
from the 'master' branch of lxml’s git repository. This is somewhere
between versions 2.3.4 and 2.4.

The commit history has been rewritten to:

* Remove lxml files unrelated to cssselect
* Import the early history from the 'html' branch in the old SVN repository
* Fix author names in commits from SVN

This project has its own import name, tests and documentation. But the
code itself is unchanged and still depends on lxml.


Earlier history
---------------

Search for *cssselect* in `lxml’s changelog
<https://github.com/lxml/lxml/blob/master/CHANGES.txt>`_
