#Pipe pipe_TExzMl2Z3RGySjx9BRNMsA generated by pipe2py

from pipe2py import Context
from pipe2py.modules import *

import pipe_RmaGqXW63RG5ZBSspgt1Yg

def pipe_TExzMl2Z3RGySjx9BRNMsA(context, _INPUT, conf=None, **kwargs):
    "Pipeline"
    if conf is None:
        conf = {}

    if context.describe_input:
        return [(u'', u'feedtype', u'Which items do you want to see? (i.e. comic, news, both, or merged)', u'text', u'merged, news')]

    forever = pipeforever.pipe_forever(context, None, conf=None)

    def pipe_sw_493(context, _INPUT, conf=None, **kwargs):
        "Submodule"
        sw_493 = pipestrregex.pipe_strregex(context, _INPUT, conf={u'RULE': {u'match': {u'type': u'text', u'value': u'.*(\\d{4}\\/\\d+\\/\\d+).*'}, u'replace': {u'type': u'text', u'value': u'comic/$1'}}})
        return sw_493
    sw_214 = pipetextinput.pipe_textinput(context, forever, conf={u'default': {u'type': u'text', u'value': u'merged, news'}, u'position': {u'type': u'number', u'value': u''}, u'prompt': {u'type': u'text', u'value': u'Which items do you want to see? (i.e. comic, news, both, or merged)'}, u'name': {u'type': u'text', u'value': u'feedtype'}, u'debug': {u'type': u'text', u'value': u'merged'}})
    sw_218 = pipestrreplace.pipe_strreplace(context, sw_214, conf={u'RULE': [{u'find': {u'type': u'text', u'value': u','}, u'param': {u'type': u'text', u'value': u'3'}, u'replace': {u'type': u'text', u'value': u'|'}}, {u'find': {u'type': u'text', u'value': None}, u'param': {u'type': u'text', u'value': u'3'}, u'replace': {u'type': u'text', u'value': u''}}, {u'find': {u'type': u'text', u'value': u'both'}, u'param': {u'type': u'text', u'value': u'3'}, u'replace': {u'type': u'text', u'value': u'comic|news'}}, {u'find': {u'type': u'text', u'value': u'comics'}, u'param': {u'type': u'text', u'value': u'3'}, u'replace': {u'type': u'text', u'value': u'comic'}}]})
    sw_265 = pipestrconcat.pipe_strconcat(context, forever, conf={u'part': [{u'type': u'text', u'value': u'^['}, {u'terminal': u'2_part', u'type': u'text'}, {u'type': u'text', u'value': u'].*'}]}, _2_part = sw_218)
    def pipe_sw_631(context, _INPUT, conf=None, **kwargs):
        "Submodule"
        sw_631 = pipestrregex.pipe_strregex(context, _INPUT, conf={u'RULE': {u'match': {u'type': u'text', u'subkey': u'possibleComic'}, u'replace': {u'type': u'text', u'value': u'ThisMatchesAComic!!!ThatMeansDontUseThisNewsArticleIfTheFeedIsMerged!PurpleMonkeyDishwasher!'}}})
        return sw_631
    def pipe_sw_367(context, _INPUT, conf=None, **kwargs):
        "Submodule"
        sw_367 = pipe_RmaGqXW63RG5ZBSspgt1Yg.pipe_RmaGqXW63RG5ZBSspgt1Yg(context, _INPUT, conf={u'ComicTitle': {u'type': u'text', u'subkey': u'title'}, u'ComicURL': {u'type': u'url', u'subkey': u'feedburner:origLink'}, u'pubDate': {u'type': u'text', u'subkey': u'pubDate'}})
        return sw_367
    def pipe_sw_106(context, _INPUT, conf=None, **kwargs):
        "Submodule"
        sw_106 = pipefetchpage.pipe_fetchpage(context, _INPUT, conf={u'URL': {u'type': u'url', u'subkey': u'feedburner:origLink'}, u'to': {u'type': u'text', u'value': u'<div class="clear">'}, u'token': {u'type': u'text', u'value': u''}, u'from': {u'type': u'text', u'value': u'<div class="body">'}})
        return sw_106
    def pipe_sw_358(context, _INPUT, conf=None, **kwargs):
        "Submodule"
        sw_358 = pipefetchpage.pipe_fetchpage(context, _INPUT, conf={u'URL': {u'type': u'url', u'subkey': u'feedburner:origLink'}, u'to': {u'type': u'text', u'value': u'<div class="clear">'}, u'token': {u'type': u'text', u'value': u''}, u'from': {u'type': u'text', u'value': u'<div class="body">'}})
        return sw_358
    sw_252 = pipefetchsitefeed.pipe_fetchsitefeed(context, forever, conf={u'URL': {u'type': u'url', u'value': u'http://www.penny-arcade.com/'}})
    sw_281 = piperename.pipe_rename(context, sw_252, conf={u'RULE': {u'newval': {u'type': u'text', u'value': u'category'}, u'field': {u'type': u'text', u'value': u'title'}, u'op': {u'type': u'text', u'value': u'copy'}}})
    sw_292 = piperegex.pipe_regex(context, sw_281, conf={u'RULE': [{u'casematch': {u'type': u'text', u'value': u'8'}, u'field': {u'type': u'text', u'value': u'category'}, u'multilinematch': {u'type': u'text', u'value': u'4'}, u'match': {u'type': u'text', u'value': u'^news\\:.*'}, u'replace': {u'type': u'text', u'value': u'news'}}, {u'casematch': {u'type': u'text', u'value': u'8'}, u'field': {u'type': u'text', u'value': u'category'}, u'multilinematch': {u'type': u'text', u'value': u'4'}, u'match': {u'type': u'text', u'value': u'^comic\\:.*'}, u'replace': {u'type': u'text', u'value': u'comic'}}, {u'field': {u'type': u'text', u'value': u'requested'}, u'match': {u'type': u'text', u'value': u'.*'}, u'replace': {u'terminal': u'RULE_3_replace', u'type': u'text'}}]}, RULE_3_replace = sw_214)
    sw_322 = pipesplit.pipe_split(context, sw_292, conf=None, splits = 2)
    sw_332 = pipefilter.pipe_filter(context, sw_322, conf={u'COMBINE': {u'type': u'text', u'value': u'and'}, u'MODE': {u'type': u'text', u'value': u'permit'}, u'RULE': [{u'field': {u'type': u'text', u'value': u'category'}, u'value': {u'type': u'text', u'value': u'comic'}, u'op': {u'type': u'text', u'value': u'contains'}}, {u'field': {u'type': u'text', u'value': u'requested'}, u'value': {u'type': u'text', u'value': u'merged'}, u'op': {u'type': u'text', u'value': u'contains'}}]})
    sw_359 = pipeloop.pipe_loop(context, sw_332, conf={u'assign_part': {u'type': u'text', u'value': u'first'}, u'with': {u'type': u'text', u'value': u''}, u'emit_part': {u'type': u'text', u'value': u'all'}, u'mode': {u'type': u'text', u'value': u'EMIT'}, u'embed': {u'type': u'module', u'value': {u'type': u'pipe:RmaGqXW63RG5ZBSspgt1Yg', u'id': u'sw-367', u'conf': {u'ComicTitle': {u'type': u'text', u'subkey': u'title'}, u'ComicURL': {u'type': u'url', u'subkey': u'feedburner:origLink'}, u'pubDate': {u'type': u'text', u'subkey': u'pubDate'}}}}, u'assign_to': {u'type': u'text', u'value': u'description'}}, embed = pipe_sw_367)
    sw_228 = pipesplit.pipe_split(context, sw_322, conf=None, splits = 2)
    sw_291 = pipefilter.pipe_filter(context, sw_228, conf={u'COMBINE': {u'type': u'text', u'value': u'and'}, u'MODE': {u'type': u'text', u'value': u'permit'}, u'RULE': [{u'field': {u'type': u'text', u'value': u'category'}, u'value': {u'type': u'text', u'value': u'news'}, u'op': {u'type': u'text', u'value': u'is'}}, {u'field': {u'type': u'text', u'value': u'category'}, u'value': {u'terminal': u'RULE_2_value', u'type': u'text'}, u'op': {u'type': u'text', u'value': u'matches'}}]}, RULE_2_value = sw_265)
    sw_350 = pipeloop.pipe_loop(context, sw_291, conf={u'assign_part': {u'type': u'text', u'value': u'first'}, u'with': {u'type': u'text', u'value': u''}, u'emit_part': {u'type': u'text', u'value': u'all'}, u'mode': {u'type': u'text', u'value': u'assign'}, u'embed': {u'type': u'module', u'value': {u'type': u'fetchpage', u'id': u'sw-358', u'conf': {u'URL': {u'type': u'url', u'subkey': u'feedburner:origLink'}, u'to': {u'type': u'text', u'value': u'<div class="clear">'}, u'token': {u'type': u'text', u'value': u''}, u'from': {u'type': u'text', u'value': u'<div class="body">'}}}}, u'assign_to': {u'type': u'text', u'value': u'description'}}, embed = pipe_sw_358)
    sw_535 = piperename.pipe_rename(context, sw_350, conf={u'RULE': {u'newval': {u'type': u'text', u'value': u'description'}, u'field': {u'type': u'text', u'value': u'description.content'}, u'op': {u'type': u'text', u'value': u'rename'}}})
    sw_582 = pipesplit.pipe_split(context, sw_535, conf=None, splits = 2)
    sw_592 = pipefilter.pipe_filter(context, sw_582, conf={u'COMBINE': {u'type': u'text', u'value': u'and'}, u'MODE': {u'type': u'text', u'value': u'permit'}, u'RULE': {u'field': {u'type': u'text', u'value': u'requested'}, u'value': {u'type': u'text', u'value': u'merged'}, u'op': {u'type': u'text', u'value': u'contains'}}})
    sw_485 = pipeloop.pipe_loop(context, sw_592, conf={u'assign_part': {u'type': u'text', u'value': u'all'}, u'with': {u'type': u'text', u'value': u'feedburner:origLink'}, u'emit_part': {u'type': u'text', u'value': u'all'}, u'mode': {u'type': u'text', u'value': u'assign'}, u'embed': {u'type': u'module', u'value': {u'type': u'strregex', u'id': u'sw-493', u'conf': {u'RULE': {u'match': {u'type': u'text', u'value': u'.*(\\d{4}\\/\\d+\\/\\d+).*'}, u'replace': {u'type': u'text', u'value': u'comic/$1'}}}}}, u'assign_to': {u'type': u'text', u'value': u'possibleComic'}}, embed = pipe_sw_493)
    sw_520 = piperegex.pipe_regex(context, sw_485, conf={u'RULE': [{u'field': {u'type': u'text', u'value': u'possibleComic'}, u'globalmatch': {u'type': u'text', u'value': u'1'}, u'match': {u'type': u'text', u'value': u'\\/'}, u'replace': {u'type': u'text', u'value': u'\\/'}}, {u'field': {u'type': u'text', u'value': u'possibleComic'}, u'match': {u'type': u'text', u'value': u'^'}, u'replace': {u'type': u'text', u'value': u'.*<a[^>]*?href=\\"[^\\"]*?\\/'}}, {u'field': {u'type': u'text', u'value': u'possibleComic'}, u'match': {u'type': u'text', u'value': u'$'}, u'replace': {u'type': u'text', u'value': u'.*'}}]})
    sw_623 = pipeloop.pipe_loop(context, sw_520, conf={u'assign_part': {u'type': u'text', u'value': u'all'}, u'with': {u'type': u'text', u'value': u'description'}, u'emit_part': {u'type': u'text', u'value': u'all'}, u'mode': {u'type': u'text', u'value': u'assign'}, u'embed': {u'type': u'module', u'value': {u'type': u'strregex', u'id': u'sw-631', u'conf': {u'RULE': {u'match': {u'type': u'text', u'subkey': u'possibleComic'}, u'replace': {u'type': u'text', u'value': u'ThisMatchesAComic!!!ThatMeansDontUseThisNewsArticleIfTheFeedIsMerged!PurpleMonkeyDishwasher!'}}}}}, u'assign_to': {u'type': u'text', u'value': u'matchMade'}}, embed = pipe_sw_631)
    sw_648 = pipefilter.pipe_filter(context, sw_623, conf={u'COMBINE': {u'type': u'text', u'value': u'and'}, u'MODE': {u'type': u'text', u'value': u'block'}, u'RULE': {u'field': {u'type': u'text', u'value': u'matchMade'}, u'value': {u'type': u'text', u'value': u'ThisMatchesAComic!!!ThatMeansDontUseThisNewsArticleIfTheFeedIsMerged!PurpleMonkeyDishwasher!'}, u'op': {u'type': u'text', u'value': u'contains'}}})
    sw_563 = pipefilter.pipe_filter(context, sw_582, conf={u'COMBINE': {u'type': u'text', u'value': u'and'}, u'MODE': {u'type': u'text', u'value': u'permit'}, u'RULE': {u'field': {u'type': u'text', u'value': u'requested'}, u'value': {u'type': u'text', u'value': u'merged'}, u'op': {u'type': u'text', u'value': u'doesnotcontain'}}})
    sw_280 = pipefilter.pipe_filter(context, sw_228, conf={u'COMBINE': {u'type': u'text', u'value': u'and'}, u'MODE': {u'type': u'text', u'value': u'permit'}, u'RULE': [{u'field': {u'type': u'text', u'value': u'category'}, u'value': {u'type': u'text', u'value': u'comic'}, u'op': {u'type': u'text', u'value': u'is'}}, {u'field': {u'type': u'text', u'value': u'category'}, u'value': {u'terminal': u'RULE_2_value', u'type': u'text'}, u'op': {u'type': u'text', u'value': u'matches'}}]}, RULE_2_value = sw_265)
    sw_98 = pipeloop.pipe_loop(context, sw_280, conf={u'assign_part': {u'type': u'text', u'value': u'first'}, u'with': {u'type': u'text', u'value': u''}, u'emit_part': {u'type': u'text', u'value': u'all'}, u'mode': {u'type': u'text', u'value': u'assign'}, u'embed': {u'type': u'module', u'value': {u'type': u'fetchpage', u'id': u'sw-106', u'conf': {u'URL': {u'type': u'url', u'subkey': u'feedburner:origLink'}, u'to': {u'type': u'text', u'value': u'<div class="clear">'}, u'token': {u'type': u'text', u'value': u''}, u'from': {u'type': u'text', u'value': u'<div class="body">'}}}}, u'assign_to': {u'type': u'text', u'value': u'description'}}, embed = pipe_sw_106)
    sw_382 = pipeunion.pipe_union(context, sw_98, conf=None, _OTHER3 = sw_359, _OTHER2 = sw_648, _OTHER = sw_563)
    sw_401 = pipesort.pipe_sort(context, sw_382, conf={u'KEY': {u'field': {u'type': u'text', u'value': u'pubDate'}, u'dir': {u'type': u'text', u'value': u'DESC'}}})
    sw_385 = piperegex.pipe_regex(context, sw_401, conf={u'RULE': {u'singlelinematch': {u'type': u'text', u'value': u'2'}, u'globalmatch': {u'type': u'text', u'value': u'1'}, u'replace': {u'type': u'text', u'value': u'$1$2$3$4$5'}, u'field': {u'type': u'text', u'value': u'feedburner:origLink'}, u'match': {u'type': u'text', u'value': u'^(.*\\.penny-arcade\\.com\\/)(\\d{4}\\/)0?(\\d{1,2}\\/)0?(\\d{1,2}\\/)(.*\\/)'}, u'multilinematch': {u'type': u'text', u'value': u'4'}}})
    sw_383 = pipeuniq.pipe_uniq(context, sw_385, conf={u'field': {u'type': u'text', u'value': u'feedburner:origLink'}})
    _OUTPUT = pipeoutput.pipe_output(context, sw_383, conf=None)
    return _OUTPUT

if __name__ == "__main__":
    context = Context()
    p = pipe_TExzMl2Z3RGySjx9BRNMsA(context, None)
    for i in p:
        print i

