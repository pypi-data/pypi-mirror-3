<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
                      "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html lang="en"
      xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
      metal:use-macro="here/main_template/macros/master"
      i18n:domain="eduComponents">

  <body>
    <metal:block fill-slot="css_slot">
      <style type="text/css" media="screen"
          tal:content="string: @import url($portal_url/ecabstyles.css);" />
    </metal:block>

    <metal:main fill-slot="main">
      <tal:main-macro metal:define-macro="main"
          tal:define="template_id    template/getId;
                      wtool          context/portal_workflow;
                      putils         context/plone_utils;
                      errors         options/state/getErrors | nothing;
                      readFieldNames here/getGradeModeReadFieldNames;
                      editFieldNames here/getGradeModeEditFieldNames;">
  
        <!-- show header information -->
        <metal:use use-macro="here/base_macros/macros/eca_view_head" />
    
        <!-- print all readonly fields -->    
        <tal:fields repeat="fieldName readFieldNames">

          <tal:field define="field python:here.getField(fieldName);">
            <metal:use use-macro="here/base_macros/macros/base_view" />
          </tal:field>
        </tal:fields>
    
        <!-- print a form with all editable fields, and buttons -->
        <form name="edit_form"
            method="post"
            enctype="multipart/form-data"
            class="enableUnloadProtection"
            action="eca_grade"
            tal:attributes="action string:${here/absolute_url}/${template/getId}">

          <!-- all editable fields -->    
          <tal:fields repeat="fieldName editFieldNames">
            <metal:use use-macro="python:here.widget(fieldName, mode='edit', use_label=1)" />
          </tal:fields>


          <!-- modifiy workflow state -->
          <!-- 
          <div class="field">
            <label i18n:translate="label_change_status">Change State</label>
            <div class="formHelp"
                 i18n:translate="help_change_status_action">
              Select the transition to be used for modifying the items state.
            </div>

            <div tal:define="review_state context/@@plone_context_state/workflow_state;
                             error_workflow_action errors/workflow_action|nothing;
                             objs request/paths|nothing;
                             target python:test(objs, objs, context);"
                 tal:attributes="class python:test(error_workflow_action, 'field error', 'field')">
  
              <div tal:condition="error_workflow_action">
                <tal:block content="error_workflow_action">Error</tal:block>
                <br />
              </div>

              <span tal:replace="nothing">
                For usability we will want to signify what state we are
                currently in. DCWorkflow only returns what transitions are
                available. But we want to visually represent what *state* we
                are currently in along with possible transitions.
              </span>

              <input class="noborder"
                     id="workflow_action"
                     type="radio"
                     name="workflow_action"
                     title=""
                     value=""
                     tal:attributes="value review_state;
                                     title review_state;
                                     checked python:test(request.get('workflow_action', review_state)==review_state,1,0);" />
              <label for="workflow_action"
                     i18n:translate="label_no_change">No change</label>
              <br />

              <tal:block define="transitions python:context.portal_workflow.getTransitionsFor(target, context)"
                         repeat="transition transitions">
                  <input class="noborder"
                         id=""
                         type="radio"
                         name="workflow_action"
                         title=""
                         value=""
                         i18n:attributes="title"
                         tal:attributes="value transition/id;
                                         id    transition/id;
                                         title transition/name;
                                         checked python:test(transition.get('id') == request.get('workflow_action', ''), 'checked', None)" />
                  <label for=""
                         i18n:translate=""
                         tal:attributes="for transition/id;"
                         tal:content="transition/name"
                         >Transition Name</label>
                         <br />
              </tal:block>
  
            </div>
          </div>
          -->
          
          <!-- submit button -->
          <div class="formControls" i18n:domain="plone">
            <input class="context"
                type="submit"
                name="form.button.Submit"
                value="Save"
                i18n:domain="plone"
                i18n:attributes="value" />

            <input class="standalone"
                type="submit"
                name="form.button.Cancel"
                i18n:domain="plone"
                value="Cancel"
                i18n:attributes="value" />
          </div>

          <input type="hidden" name="form.submitted" value="1" />
        </form>

        <div tal:replace="structure provider:plone.belowcontenttitle" />

      </tal:main-macro>
    </metal:main>

  </body>
</html>