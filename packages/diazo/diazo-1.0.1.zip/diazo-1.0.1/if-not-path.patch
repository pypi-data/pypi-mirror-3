diff --git a/lib/diazo/apply-conditions.xsl b/lib/diazo/apply-conditions.xsl
index 12cbf8c..5900fe7 100644
--- a/lib/diazo/apply-conditions.xsl
+++ b/lib/diazo/apply-conditions.xsl
@@ -6,7 +6,7 @@
     xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
     >
 
-    <xsl:template match="diazo:*[@if-content or @if-path or @if or @if-not or @if-not-content]">
+    <xsl:template match="diazo:*[@if-content or @if-not-content or @if-path or @if-not-path or @if or @if-not]">
         <xsl:copy>
             <xsl:apply-templates select="@*"/>
             <xsl:attribute name="condition">
@@ -14,7 +14,12 @@
                     <xsl:when test="@if-content = ''"><xsl:value-of select="@content"/></xsl:when>
                     <xsl:when test="@if-content">(<xsl:value-of select="@if-content"/>)</xsl:when>
                 </xsl:choose>
-                <xsl:if test="@if-content and @if-path"> and </xsl:if>
+                <xsl:if test="(@if-content) and (@if-not-content or @if-path or @if-not-path or @if or @if-not)"> and </xsl:if>
+                <xsl:choose>
+                    <xsl:when test="@if-not-content = ''">not(<xsl:value-of select="@content"/>)</xsl:when>
+                    <xsl:when test="@if-not-content">not(<xsl:value-of select="@if-not-content"/>)</xsl:when>
+                </xsl:choose>
+                <xsl:if test="(@if-content or @if-not-content) and (@if-path or @if-not-path or @if or @if-not)"> and </xsl:if>
                 <xsl:if test="@if-path">
                     <xsl:variable name="paths" select="str:tokenize(@if-path)"/>
                     <xsl:if test="count($paths) > 1">(</xsl:if>
@@ -34,15 +39,30 @@
                     </xsl:for-each>
                     <xsl:if test="count($paths) > 1">)</xsl:if>
                 </xsl:if>
-                <xsl:if test="@if and (@if-content or @if-path)"> and </xsl:if>
+                <xsl:if test="(@if-content or @if-not-content or @if-path) and (@if-not-path or @if or @if-not)"> and </xsl:if>
+                <xsl:if test="@if-not-path">
+                    <xsl:variable name="paths" select="str:tokenize(@if-not-path)"/>
+                    <xsl:if test="count($paths) > 1">not(</xsl:if>
+                    <xsl:for-each select="$paths">
+                        <xsl:variable name="path" select="text()"/>
+                        <xsl:choose>
+                            <xsl:when test="starts-with($path, '/') and substring($path, string-length($path)) = '/'"
+                                >$normalized_path = '<xsl:value-of select="$path"/>'</xsl:when>
+                            <xsl:when test="substring($path, string-length($path)) = '/'"
+                                >substring($normalized_path, string-length($normalized_path) - <xsl:value-of select="string-length($path)"/>) = '/<xsl:value-of select="$path"/>'</xsl:when>
+                            <xsl:when test="starts-with($path, '/')"
+                                >starts-with($normalized_path, '<xsl:value-of select="$path"/>/')</xsl:when>
+                            <xsl:otherwise
+                                >contains($normalized_path, '/<xsl:value-of select="$path"/>/')</xsl:otherwise>
+                        </xsl:choose>
+                        <xsl:if test="count($paths) > 1 and position() != last()"> or </xsl:if>
+                    </xsl:for-each>
+                    <xsl:if test="count($paths) > 1">)</xsl:if>
+                </xsl:if>
+                <xsl:if test="(@if-content or @if-not-content or @if-path or @if-not-path) and (@if or @if-not)"> and </xsl:if>
                 <xsl:if test="@if">(<xsl:value-of select="@if"/>)</xsl:if>
-                <xsl:if test="@if-not and (@if-content or @if-path or @if)"> and </xsl:if>
+                <xsl:if test="(@if-content or @if-not-content or @if-path or @if-not-path or @if) and (@if-not)"> and </xsl:if>
                 <xsl:if test="@if-not">not(<xsl:value-of select="@if-not"/>)</xsl:if>
-                <xsl:if test="@if-not-content and (@if-content or @if-path or @if or @if-not)"> and </xsl:if>
-                <xsl:choose>
-                    <xsl:when test="@if-not-content = ''">not(<xsl:value-of select="@content"/>)</xsl:when>
-                    <xsl:when test="@if-not-content">not(<xsl:value-of select="@if-not-content"/>)</xsl:when>
-                </xsl:choose>
             </xsl:attribute>
             <xsl:apply-templates select="node()"/>
         </xsl:copy>
