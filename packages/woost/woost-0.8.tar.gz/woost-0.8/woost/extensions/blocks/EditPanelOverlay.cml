<?xml version="1.0" encoding="utf-8"?>
<?py
from cocktail import schema
from woost.extensions.blocks.block import Block
?>

<py:overlay
    py:class="woost.views.EditPanel"
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:py="http://www.whads.com/ns/cocktail/templates">

    <?py-class
    def get_slots(self):
        slots = []

        for member in self.publishable.__class__.ordered_members():
            if getattr(member, "is_persistent_relation", False) \
            and issubclass(member.related_type, Block) \
            and member.visible:
                slots.append(member.name)

        return slots

    def get_slot_blocks(self, slot):
        blocks = getattr(self.publishable, slot, None)
        
        if blocks is None:
            return ()

        if isinstance(blocks, Block):
            blocks = [blocks]

        return blocks
    ?>

    <py:with py:element="self.panel_content">
        <py:ready>
            <?py
            for slot in self.get_slots():
                blocks = self.get_slot_blocks(slot)
                if blocks:
                    section = self.create_block_section()
                    section.slot = slot
                    section.blocks = blocks
                    element.append(section)
                    setattr(self, "%s_section" % slot, section)
            ?>
        </py:ready>
    </py:with>

    <py:woost.extensions.blocks.BlockSection
        py:def="block_section"/>

</py:overlay>

