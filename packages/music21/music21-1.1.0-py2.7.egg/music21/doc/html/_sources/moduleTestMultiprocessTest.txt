.. _moduleTest.multiprocessTest:

music21.test.multiprocessTest
=============================

.. WARNING: DO NOT EDIT THIS FILE: AUTOMATICALLY GENERATED. Edit the .py file directly

.. module:: music21.test.multiprocessTest


Multiprocess testing.  Tests all doctests and Test unittest objects in all
modules that are imported when running "import music21".  Runs threads on
each core of a multicore system.

N.B. this gets a slightly different set of modules than test/test.py does
because the `imp` module is not available for threaded processing.  Running
both modules gives a great coverage.

Run test/testDocumentation after this.




.. function:: examplePoolRunner(testGroup=['test'], restoreEnvironmentDefaults=False)


    demo of a pool runner with failures and successes...



.. function:: mainPoolRunner(testGroup=['test'], restoreEnvironmentDefaults=False)

    Run all tests. Group can be test and external



.. function:: multime(multinum)


.. function:: printSummary(summaryOutput, timeStart, pathsToRun)


.. function:: runOneModuleWithoutImp(args)


ModuleGather
------------



.. class:: ModuleGather()


    Utility class for gathering and importing all modules in the music21
    package. Puts them in self.modulePaths.




    >>> from music21.test import test as testModule
    >>> mg = testModule.ModuleGather()
    >>> print mg.modulePaths[0]
    D:\Web\eclipse\music21base\music21\xmlnode.py



    **ModuleGather** **attributes**

        Attributes without Documentation: `pathSkip`, `moduleSkip`, `dirParent`, `modulePaths`

    **ModuleGather** **methods**

        .. method:: getModuleWithoutImp(fp, restoreEnvironmentDefaults=False)


            gets one module object from the file path without using Imp




