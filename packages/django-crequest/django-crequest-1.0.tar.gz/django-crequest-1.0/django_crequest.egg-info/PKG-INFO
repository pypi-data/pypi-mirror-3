Metadata-Version: 1.1
Name: django-crequest
Version: 1.0
Summary: Middleware to make current request always available.
Home-page: https://github.com/Alir3z4/django-crequest
Author: Alireza Savand
Author-email: alireza.savand@gmail.com
License: UNKNOWN
Description: django-crequest - Take care of current request is silent way.
        =============================================================
        
        Copyright (C) 2012 Alireza Savand <alireza.savand@gmail.com>
        
        Overview
        ========
        
        **crequest** will bring you current request object of your django application from anywhere in your code.
        
        Installing
        ==========
        
        django-crequest is available at http://pypi.python.org/pypi/django-crequest
        So it can be install it by pip::
        
            $ pyhton pip install django-crequest
        
        Or you can grab the latest version tarball and ::
        
            $ python setup.py install
        
        To enable django-crequest in your project
        
        * Add 'crequest' to *INSTALLED_APPS* in your **settings.py**
        * Add 'crequest.middleware.CrequestMiddleware' to MIDDLEWARE_CLASSES after the authentication and session middleware.
        
        How to use it
        =============
        
        First import the crequest's middleware::
        
            from crequest.middleware import CrequestMiddleware
        
        Get the current request ;)::
        
            current_request = CrequestMiddleware.get_request()
        
        Done.
        
        Some info for some folks
        ========================
        
        Set the current request in UnKnown situations::
        
             CrequestMiddleware.set_request(request)
        
        Return *iam_request* if there is no current request::
        
            CrequestMiddleware.get_request(iam_request)
        
        And finally delete::
        
            CrequestMiddleware.del_request()
        
        The middleware automatically sets/deletes the current request for HTTP requests.
                For other uses (management commands, scripts), you will need to do this
                yourself.
        
        
Keywords: django,request,web
Platform: OS Independent
Classifier: Development Status :: 5 - Production/Stable
Classifier: Programming Language :: Python
Classifier: Framework :: Django
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Topic :: Software Development
Provides: crequest
