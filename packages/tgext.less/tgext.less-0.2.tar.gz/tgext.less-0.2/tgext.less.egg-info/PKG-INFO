Metadata-Version: 1.0
Name: tgext.less
Version: 0.2
Summary: LESS middleware for TurboGears2
Home-page: http://bitbucket.org/clsdaniel/tgext.less
Author: Carlos Daniel Ruvalcaba Valenzuela
Author-email: clsdaniel@gmail.com
License: MIT
Description: About tgext.less
        ------------------------------
        
        `LESS <http://www.lesscss.org/>`_ is a dynamic stylesheet language that extends CSS with dynamic behaviour
        such as variables, mixins, operations and functions.
        
        tgext.less is a middleware aimed at making `TurboGears2 <http://www.turbogears.org>`_ development easier,
        tgext.less converts regular less files to css using the official less compiler (lessc), thus it currently
        requires is to be installed.
        
        tgext.less is based on `tgext.scss <https://bitbucket.org/_amol_/tgext.scss>`_ by Alessandro Molina and is
        under the same license (MIT).
        
        Installing
        -------------------------------
        
        tgext.less can be installed both from pypi or from bitbucket::
        
            easy_install tgext.less
        
        You will also need to install the less compiler, for instructions on this check the less website under the
        server side usage section.
        
        `http://www.lesscss.org/ <http://www.lesscss.org/#-server-side-usage>`_
        
        
        Enabling tgext.less
        ----------------------------------
        
        Using tgext.less is really simple, you edit your `config/middeware.py` and just after
        the `#Wrap your base TurboGears 2 application with custom middleware here` comment wrap
        `app` with `LESSMiddleware`::
        
            from tgext.less import LESSMiddleware
        
            make_base_app = base_config.setup_tg_wsgi_app(load_environment)
        
            def make_app(global_conf, full_stack=True, **app_conf):
                app = make_base_app(global_conf, full_stack=True, **app_conf)
        
                # Wrap your base TurboGears 2 application with custom middleware here
                app = LESSMiddleware(app)
        
                return app
        
        Now you just have to put your .less files inside *public/css* and they will be served as CSS.
        
        
        Cache Backends
        ----------------------------------
        
        You can change the cache backend storage into any dict like object that can serialize a dict object,
        for example, you can use beaker cache by passing the cache object to the middleware constructor::
        
            from tgext.less import LESSMiddleware
            from tg import cache
        
            make_base_app = base_config.setup_tg_wsgi_app(load_environment)
        
            def make_app(global_conf, full_stack=True, **app_conf):
                app = make_base_app(global_conf, full_stack=True, **app_conf)
        
                # LESS with beaker cache backend
                app = LESSMiddleware(app, cache=cache)
        
                return app
        
        
Keywords: turbogears2.extension LESS WSGI
Platform: UNKNOWN
Classifier: Environment :: Web Environment
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Framework :: TurboGears
