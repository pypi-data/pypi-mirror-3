## This is the default bootstrap.cfg file for configuring your project's
## bootstrap.py script.  This file is completely optional, but usually useful.


[options]
## In this section, you can override the default values of the command-line
## options that bootstrap.py accepts.
##
## The format for this section is "key = value" pairs, one pair per line.
##
## The options here correspond to the command-line options accepted by
## bootstrap.py.  See it's documentation for more information on the specific
## purpose of each option.
##
## Note: Hyphens (-) in option names on the command-line are replaced with
## underscores (_) internally.  Use underscores in this file as well.

# Increase the default verbosity for the program output.  A higher values means
# more detailed output.  Use the "quiet" option below to reduce the verbosity.
#verbose = 0

# Decrease the default verbosity for the program output.  Higher values means
# less detailed output.  Use the "verbose" option above to increase the
# verbosity.
#quiet = 0

# Specify the path to the default Python interpreter to use in the virtualenv
# environment.  E.g. "python2.5".  By default the interpreter used to run
# bootstrap.py is the one used for the virtual environment.
#python =

# If set to True, the the "lib" directory will be erased every time
# bootstrap.py is run.
#
# Note: According to the virtualenv source code, this option does not clear out
# the "bin" or any other directories, despite what is implied by the message
# provided by in it's --help option.
#clear = False

# Specify an alternate prompt prefix to use when the virtual environment has
# been activated.  The default is the normal virtualenv behaviour.
#prompt =

# If set to True, the virtual environment will have access to the system's
# global "site-packages" directory.  Otherwise, the virtual environment will be
# completely isolated from the system's installed packages.
#system_site_packages = False

# If set to True, setuptools will be installed instead of distribute.
#use_setuptools = False

# If set to True, distribute or setuptools will not be automatically
# uncompressed and will be left in compressed EGG format.
#zip_setuptools = False

# Default options to pass to the "pip install" command when installing
# additional Python distributions using pip.
pip_install_options = -f https://bitbucket.org/krys/repoze.sphinx.autointerface_fork/downloads/

# Default options to pass to the "easy_install" command when installing
# additional Python distributions using easy_install.
#easy_install_options = -Z


[pip]
## In this section, you can list any additional Python distributions to install
## automatically in the virtual environment using pip.  These would normally be
## the distributions needed for development, not the dependencies of the
## project itself (which would go in setup.py).
##
## The format for this section is one distribution per line, each specified
## either in PEP314/PEP345 format using parentheses or in pip-compatible format
## without parentheses.  For example:
##
##   pep8 (>=0.5,!=0.5.2,<0.6)
##
## or:
##
##   pep8>=0.5,!=0.5.2,<0.6
##
## Note: Not all distributions are compatible with pip.  Use the
## [easy_install] section below for those that are not (or use it for all
## distributions).

# Sub-dependencies
virtualenv (>=1.7.1.2,<1.7.99)
logilab_common (>=0.57.1,<0.57.99)
logilab_astng (>=0.23.1,<0.23.99)
docutils (>=0.8.1,<0.8.99)
Jinja2 (>=2.6,<2.6.99)
Pygments (>=1.4,<1.4.99)

# Development dependencies
everyapp.bootstrap (>=0.2.2,<0.2.99)
Paver (>=1.0.5,<1.0.99)
Sphinx (>=1.1.2,<1.1.99)
repoze.sphinx.autointerface_fork (>=0.6.2.1,<0.6.99)
coverage (>=3.5.1,<3.5.99)
pylint (>=0.25.1,<0.25.99)
flake8 (>=1.1.0,<1.1.99)
clonedigger (>=1.0.11-beta,<1.0.99)


[easy_install]
## In this section, you can list any additional Python distributions to install
## automatically in the virtual environment using easy_install.  These would
## normally be the distributions needed for development, not the dependencies
## of the project itself (which would go in setup.py).
##
## The format for this section is the same as the [pip] section above.

#ipython


[commands]
## This section lets you automatically execute additional commands after the
## virtual environment has been created and all the specified distributions
## have been installed.
##
## The format for this section is one command (with any arguments) per line.
##
## Note: You can use the $bin$ token to indicate the virtual environment's bin/
## directory, which can have a different name on some platforms (e.g. Scripts\
## on Windows).  The trailing slash is also included.

#$bin$python setup.py develop
$bin$paver develop
