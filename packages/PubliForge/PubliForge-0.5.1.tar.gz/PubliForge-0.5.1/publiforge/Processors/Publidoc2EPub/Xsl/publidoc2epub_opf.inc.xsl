<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: publidoc2epub_opf.inc.xsl 632579c1ad08 2012/02/13 22:15:34 patrick $ -->
<xsl:stylesheet version="1.1" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

  <!--
      ========================================================================
      Template content_opf
      ========================================================================
  -->
  <xsl:template name="content_opf">
    <xsl:document href="{$path}content.opf" method="xml"
                  encoding="utf-8" indent="yes">
      <xsl:comment> Generated by PubliForge, $Date: 2012/02/13 22:15:34 $ </xsl:comment>
      <package xmlns="http://www.idpf.org/2007/opf"
               unique-identifier="epub_{@xml:id}" version="2.0">

        <xsl:call-template name="metadata"/>

        <xsl:call-template name="manifest"/>

        <xsl:call-template name="spine"/>
        
        <xsl:call-template name="guide"/>
      </package>
    </xsl:document>    
  </xsl:template>
  
  <!--
      ========================================================================
      Template metadata
      ========================================================================
  -->
  <xsl:template name="metadata">
    <metadata xmlns:dc="http://purl.org/dc/elements/1.1/"
              xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xmlns:opf="http://www.idpf.org/2007/opf">
      <!-- identifier -->
      <dc:identifier opf:scheme="URI" id="epub_{@xml:id}">
        <xsl:choose>
          <xsl:when test="$publisher_url"><xsl:value-of select="$publisher_url"/></xsl:when>
          <xsl:when test="head/contributors/contributor[role='publisher']">
            <xsl:value-of select="head/contributors/contributor[role='publisher']/link/@uri"/>
          </xsl:when>
          <xsl:otherwise>http://www.publiforge.org</xsl:otherwise>
        </xsl:choose>
        <xsl:value-of select="concat('/epub/', @xml:id)"/>
      </dc:identifier>
      <!-- ean -->
      <xsl:choose>
        <xsl:when test="$ean">
          <dc:identifier opf:scheme="ISBN">
            <xsl:value-of select="$ean"/>
          </dc:identifier>
        </xsl:when>
        <xsl:when test="head/identifier[@type='ean']">
          <dc:identifier opf:scheme="ISBN">
            <xsl:value-of select="head/identifier[@type='ean']"/>
          </dc:identifier>
        </xsl:when>
      </xsl:choose>
      <!-- title -->
      <dc:title>
        <xsl:apply-templates select="head/title" mode="text"/>
      </dc:title>
      <!-- language -->
      <dc:language xsi:type="dcterms:RFC3066"><xsl:call-template name="lang"/></dc:language>
      <!-- contributors -->
      <xsl:apply-templates select="head/contributors/contributor" mode="metadata"/>
      <!-- publisher and copyright -->
      <xsl:choose>
        <xsl:when test="head/contributors/contributor/role='publisher'">
          <dc:publisher>
            <xsl:value-of select="head/contributors/contributor[role='publisher']/label"/>
          </dc:publisher>
        </xsl:when>
        <xsl:when test="$publisher_label">
          <dc:publisher><xsl:value-of select="$publisher_label"/></dc:publisher>
        </xsl:when>
      </xsl:choose>
      <!-- copyright -->
      <xsl:choose>
        <xsl:when test="head/copyright">
          <dc:rights>Copyright <xsl:value-of select="head/copyright"/></dc:rights>
        </xsl:when>
        <xsl:when test="head/publisher">
          <dc:rights>Copyright <xsl:value-of select="head/publisher/label"/></dc:rights>
        </xsl:when>
        <xsl:when test="$publisher_label">
          <dc:rights>Copyright <xsl:value-of select="$publisher_label"/></dc:rights>
        </xsl:when>
      </xsl:choose>
      <dc:contributor>Prismallia</dc:contributor>
      <xsl:apply-templates select="head/contributors/contributor[role='packager']" mode="metadata"/>
      <!-- abstract -->
      <xsl:if test="head/abstract">
        <dc:description>
          <xsl:apply-templates select="head/abstract/p" mode="text"/>
        </dc:description>
      </xsl:if>
      <!-- cover -->
      <xsl:choose>
        <xsl:when test="$cover">
          <meta name="cover" content="i_{translate($fid, ' ', '_')}_cover"/>
        </xsl:when>
        <xsl:when test="head/cover">
          <meta name="cover" content="i_{translate(head/cover/image/@id, ' ', '_')}"/>
        </xsl:when>
      </xsl:choose>
    </metadata>
  </xsl:template>
  
  <!--
      ========================================================================
      contributor mode metadata
      ========================================================================
  -->
  <xsl:template match="contributor" mode="metadata"
                xmlns:dc="http://purl.org/dc/elements/1.1/"
                xmlns:opf="http://www.idpf.org/2007/opf">
    <xsl:choose>
      <xsl:when test="role='packager'">
        <dc:contributor>
          <xsl:if test="firstname">
            <xsl:apply-templates select="firstname" mode="text"/>
            <xsl:text> </xsl:text>
          </xsl:if>
          <xsl:apply-templates select="lastname|label" mode="text"/>
        </dc:contributor>
      </xsl:when>
      <xsl:when test="not(role='publisher')">
        <dc:creator>
          <xsl:attribute name="opf:role">
            <xsl:choose>
              <xsl:when test="role='illustrator'">ill</xsl:when>
              <xsl:otherwise>aut</xsl:otherwise>
            </xsl:choose>
          </xsl:attribute>
          <xsl:if test="firstname">
            <xsl:apply-templates select="firstname" mode="text"/>
            <xsl:text> </xsl:text>
          </xsl:if>
          <xsl:apply-templates select="lastname|label" mode="text"/>
        </dc:creator>
      </xsl:when>
    </xsl:choose>
  </xsl:template>
  
  <!--
      ========================================================================
      Template manifest, manifest_extra
      ========================================================================
  -->
  <xsl:template name="manifest">
    <manifest>
      <item id="ncx" href="toc.ncx" media-type="application/x-dtbncx+xml"/>
      <item id="h_{translate($fid, ' ', '_')}-cover"
            href="{$fid}-cover.html" media-type="application/xhtml+xml"/>
      <xsl:if test="$toc">
        <item id="h_{translate($fid, ' ', '_')}-toc"
              href="{$fid}-toc.html" media-type="application/xhtml+xml"/>
      </xsl:if>
      <xsl:if test="$subtoc">
        <xsl:apply-templates select="division" mode="manifest"/>
      </xsl:if>
      <xsl:apply-templates select="//topic" mode="manifest"/>
      <xsl:if test="$cover">
        <item id="i_{translate($fid, ' ', '_')}_cover" href="{$img_dir}{$cover}"
              media-type="image/{substring-after($cover,'.')}"/>
      </xsl:if>
      <xsl:apply-templates select=".//image" mode="manifest"/>
      <xsl:apply-templates select=".//audio" mode="manifest"/>
      <item id="c_reset" href="Css/reset.css" media-type="text/css"/>
      <item id="c_publidoc" href="Css/publidoc.css" media-type="text/css"/>
      <item id="c_main" href="Css/main.css" media-type="text/css"/>
      <xsl:call-template name="manifest_extra"/>
    </manifest>
  </xsl:template>

  <xsl:template name="manifest_extra"/>

  <!--
      ========================================================================
      division, topic, image, audio mode manifest
      ========================================================================
  -->
  <xsl:template match="division" mode="manifest">
    <item id="h_{translate($fid, ' ', '_')}-div-{count(preceding::division)+1}"
          href="{$fid}-div-{count(preceding::division)+1}.html"
          media-type="application/xhtml+xml"/>
  </xsl:template>

  <xsl:template match="topic" mode="manifest">
    <item id="h_{translate($fid, ' ', '_')}-tpc-{count(preceding::topic)+1}"
          href="{$fid}-tpc-{count(preceding::topic)+1}.html"
          media-type="application/xhtml+xml"/>
  </xsl:template>

  <xsl:template match="image" mode="manifest">
    <xsl:if test="$img and count(preceding::image[@id=current()/@id])=0
                  and (not($cover) or name(..)!='cover')">
      <item id="i_{translate(@id, ' ', '_')}" href="{$img_dir}{@id}{$img_ext}">
        <xsl:attribute name="media-type">
          <xsl:text>image/</xsl:text>
          <xsl:choose>
            <xsl:when test="$img_ext='.jpg'">jpeg</xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="substring-after($img_ext, '.')"/>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:attribute>
      </item>
    </xsl:if>
  </xsl:template>
  
  <xsl:template match="audio" mode="manifest">
    <xsl:if test="$aud and count(preceding::audio[@id=current()/@id])=0">
      <item id="a_{translate(@id, ' ', '_')}" href="{$aud_dir}{@id}{$aud_ext}">
        <xsl:attribute name="media-type">
          <xsl:text>audio/</xsl:text>
          <xsl:choose>
            <xsl:when test="$img_ext='.mp3'">mpeg</xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="substring-after($aud_ext, '.')"/>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:attribute>
      </item>
    </xsl:if>
  </xsl:template>

  <!--
      ========================================================================
      Template spine
      ========================================================================
  -->
  <xsl:template name="spine">
    <spine toc="ncx">
      <xsl:if test="$cover or head/cover">
        <itemref idref="h_{translate($fid, ' ', '_')}-cover"/>
      </xsl:if>
      <xsl:apply-templates select="//topic[@type='title']" mode="spine"/>
      <xsl:if test="$toc">
        <itemref idref="h_{translate($fid, ' ', '_')}-toc"/>
      </xsl:if>
      <xsl:choose>
        <xsl:when test="$subtoc and division">
          <xsl:apply-templates select="division|topic[not(@type='title')]"
                               mode="spine"/>
        </xsl:when>
        <xsl:otherwise>
          <xsl:apply-templates select="//topic[not(@type='title')]"
                               mode="spine"/>
        </xsl:otherwise>
      </xsl:choose>
    </spine>
  </xsl:template>

  <!--
      ========================================================================
      division, topic mode spine
      ========================================================================
  -->
  <xsl:template match="division" mode="spine">
    <itemref idref="h_{translate($fid, ' ', '_')}-div-{count(preceding::division)+1}"/>
    <xsl:apply-templates select=".//topic[not(@type='title')]" mode="spine"/>
  </xsl:template>

  <xsl:template match="topic" mode="spine">
    <itemref idref="h_{translate($fid, ' ', '_')}-tpc-{count(preceding::topic)+1}"/>
  </xsl:template>

  <!--
      ========================================================================
      Template guide
      ========================================================================
  -->
  <xsl:template name="guide">
    <guide>
      <xsl:if test="head/cover or $cover">
        <reference type="cover" href="{$fid}-cover.html" title="Couverture"/>
      </xsl:if>
      <xsl:apply-templates select=".//topic[@type='title']" mode="guide"/>
      <xsl:if test="$toc">
        <reference type="toc" href="{$fid}-toc.html" title="Sommaire"/>
      </xsl:if>
      <xsl:apply-templates select=".//topic[not(@type='title')]" mode="guide"/>
    </guide>
  </xsl:template>
  
  <!--
      ========================================================================
      topic mode guide
      ========================================================================
  -->
  <xsl:template match="topic" mode="guide">
    <xsl:if test="@type='title' or @type='copyright'">
      <reference type="{@type}" href="{$fid}-tpc-{count(preceding::topic)+1}.html"
                 title="{head/title}"/>
    </xsl:if>
  </xsl:template>

</xsl:stylesheet>
