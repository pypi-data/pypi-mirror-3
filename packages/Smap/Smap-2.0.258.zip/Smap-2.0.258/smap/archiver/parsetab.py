
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x1f\xeff\x11?a\x13\xbc\xf8ZPf/%\xefX'
    
_lr_action_items = {'STAR':([4,],[11,]),'NUMBER':([23,29,31,55,70,71,72,73,76,77,97,103,],[46,53,53,78,46,46,46,46,95,96,104,109,]),'LIMIT':([52,53,54,56,110,],[76,-17,-18,76,76,]),'GROUP':([35,36,65,66,80,81,82,84,85,86,88,89,105,106,108,114,],[-41,-42,-46,-47,-44,-45,-49,-50,-48,-43,100,-37,-51,-39,-38,-40,]),'STREAMLIMIT':([52,53,54,56,95,110,],[77,-17,-18,77,103,77,]),'DATA':([4,22,],[16,16,]),'BY':([100,],[107,]),'SELECT':([0,],[4,]),'SET':([0,],[1,]),'RPAREN':([23,35,36,43,44,45,46,47,48,64,65,66,69,74,80,81,82,84,85,86,90,91,92,93,94,98,102,104,105,],[43,-41,-42,-23,69,-29,-28,-27,74,86,-46,-47,-25,-24,-44,-45,-49,-50,-48,-43,-29,102,-32,-31,-30,105,-26,110,-51,]),'DISTINCT':([4,],[12,]),'EQ':([6,34,],[20,63,]),'TO':([8,43,69,74,102,],[22,-23,-25,-24,-26,]),'COMMA':([13,35,36,40,43,44,45,46,47,65,66,69,74,78,80,81,82,84,85,86,88,89,90,102,105,106,108,114,],[26,-41,-42,67,-23,70,71,72,73,-46,-47,-25,-24,97,-44,-45,-49,-50,-48,-43,99,-37,71,-26,-51,-39,-38,-40,]),'TILDE':([34,],[62,]),'APPLY':([0,],[2,]),'$end':([3,9,11,13,14,17,24,25,33,35,36,41,49,50,51,57,65,66,80,81,82,84,85,86,88,89,105,106,108,112,114,],[0,-7,-11,-33,-2,-10,-12,-13,-5,-41,-42,-6,-34,-1,-3,-4,-46,-47,-44,-45,-49,-50,-48,-43,-8,-37,-51,-39,-38,-9,-40,]),'TAGS':([12,],[25,]),'AS':([35,36,65,66,80,81,82,84,85,86,89,105,106,],[-41,-42,-46,-47,-44,-45,-49,-50,-48,-43,101,-51,111,]),'LPAREN':([10,19,21,27,28,30,32,37,38,45,58,59,61,68,83,99,],[23,37,37,37,37,55,37,37,37,23,37,37,83,37,37,37,]),'IN':([16,34,],[30,61,]),'HAS':([19,21,27,28,32,37,38,58,59,68,83,99,],[39,39,39,39,39,39,39,39,39,39,39,39,]),'WHERE':([5,7,11,13,14,15,17,18,24,25,40,42,49,52,53,54,56,75,79,87,95,96,109,110,113,],[19,21,-11,-33,27,28,-10,32,-12,-13,-35,68,-34,-19,-17,-18,-19,-16,-15,-36,-20,-21,-22,-19,-14,]),'BEFORE':([16,],[31,]),'AND':([33,35,36,41,50,51,57,64,65,66,80,81,82,84,85,86,89,98,105,106,],[58,-41,-42,58,58,58,58,58,-46,-47,-44,-45,-49,-50,-48,-43,58,58,-51,58,]),'LIKE':([34,],[60,]),'LVALUE':([1,2,4,5,12,19,21,23,26,27,28,32,37,38,39,58,59,67,68,70,71,72,73,83,99,101,107,111,],[6,10,13,13,24,34,34,45,13,34,34,34,34,34,66,34,34,6,34,90,90,90,90,34,34,108,13,114,]),'AFTER':([16,],[29,]),'QSTRING':([20,23,60,62,63,70,71,72,73,],[40,47,82,84,85,47,47,47,47,]),'NOT':([19,21,27,28,32,37,38,58,59,68,83,99,],[38,38,38,38,38,38,38,38,38,38,38,38,]),'NOW':([29,31,],[54,54,]),'OR':([33,35,36,41,50,51,57,64,65,66,80,81,82,84,85,86,89,98,105,106,],[59,-41,-42,59,59,59,59,59,-46,-47,59,-45,-49,-50,-48,-43,59,59,-51,59,]),'DELETE':([0,],[5,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement_as_list':([68,],[88,]),'apply_clause':([2,23,],[8,44,]),'apply_statement':([2,],[9,]),'set_list':([1,67,],[7,87,]),'statement_unary':([19,21,27,28,32,37,38,58,59,68,83,99,],[35,35,35,35,35,35,35,35,35,35,35,35,]),'timeref':([29,31,],[52,56,]),'selector':([4,],[14,]),'data_clause':([4,22,],[15,42,]),'limit':([52,56,110,],[75,79,113,]),'statement_binary':([19,21,27,28,32,37,38,58,59,68,83,99,],[36,36,36,36,36,36,36,36,36,36,36,36,]),'statement':([19,21,27,28,32,37,38,58,59,68,83,99,],[33,41,50,51,57,64,65,80,81,89,98,106,]),'query':([0,],[3,]),'call_list':([23,70,71,72,73,],[48,91,92,93,94,]),'tag_list':([4,5,26,107,],[17,18,49,112,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> query","S'",1,None,None,None),
  ('query -> SELECT selector WHERE statement','query',4,'p_query','queryparse.py',139),
  ('query -> SELECT selector','query',2,'p_query','queryparse.py',140),
  ('query -> SELECT data_clause WHERE statement','query',4,'p_query','queryparse.py',141),
  ('query -> DELETE tag_list WHERE statement','query',4,'p_query','queryparse.py',142),
  ('query -> DELETE WHERE statement','query',3,'p_query','queryparse.py',143),
  ('query -> SET set_list WHERE statement','query',4,'p_query','queryparse.py',144),
  ('query -> APPLY apply_statement','query',2,'p_query','queryparse.py',145),
  ('apply_statement -> apply_clause TO data_clause WHERE statement_as_list','apply_statement',5,'p_apply_statement','queryparse.py',202),
  ('apply_statement -> apply_clause TO data_clause WHERE statement_as_list GROUP BY tag_list','apply_statement',8,'p_apply_statement','queryparse.py',203),
  ('selector -> tag_list','selector',1,'p_selector','queryparse.py',232),
  ('selector -> STAR','selector',1,'p_selector','queryparse.py',233),
  ('selector -> DISTINCT LVALUE','selector',2,'p_selector','queryparse.py',234),
  ('selector -> DISTINCT TAGS','selector',2,'p_selector','queryparse.py',235),
  ('data_clause -> DATA IN LPAREN NUMBER COMMA NUMBER RPAREN limit','data_clause',8,'p_data_clause','queryparse.py',249),
  ('data_clause -> DATA BEFORE timeref limit','data_clause',4,'p_data_clause','queryparse.py',250),
  ('data_clause -> DATA AFTER timeref limit','data_clause',4,'p_data_clause','queryparse.py',251),
  ('timeref -> NUMBER','timeref',1,'p_timeref','queryparse.py',273),
  ('timeref -> NOW','timeref',1,'p_timeref','queryparse.py',274),
  ('limit -> <empty>','limit',0,'p_limit','queryparse.py',281),
  ('limit -> LIMIT NUMBER','limit',2,'p_limit','queryparse.py',282),
  ('limit -> STREAMLIMIT NUMBER','limit',2,'p_limit','queryparse.py',283),
  ('limit -> LIMIT NUMBER STREAMLIMIT NUMBER','limit',4,'p_limit','queryparse.py',284),
  ('apply_clause -> LVALUE LPAREN RPAREN','apply_clause',3,'p_apply_clause','queryparse.py',297),
  ('apply_clause -> LVALUE LPAREN call_list RPAREN','apply_clause',4,'p_apply_clause','queryparse.py',298),
  ('apply_clause -> LVALUE LPAREN apply_clause RPAREN','apply_clause',4,'p_apply_clause','queryparse.py',299),
  ('apply_clause -> LVALUE LPAREN apply_clause COMMA call_list RPAREN','apply_clause',6,'p_apply_clause','queryparse.py',300),
  ('call_list -> QSTRING','call_list',1,'p_call_list','queryparse.py',313),
  ('call_list -> NUMBER','call_list',1,'p_call_list','queryparse.py',314),
  ('call_list -> LVALUE','call_list',1,'p_call_list','queryparse.py',315),
  ('call_list -> QSTRING COMMA call_list','call_list',3,'p_call_list','queryparse.py',316),
  ('call_list -> NUMBER COMMA call_list','call_list',3,'p_call_list','queryparse.py',317),
  ('call_list -> LVALUE COMMA call_list','call_list',3,'p_call_list','queryparse.py',318),
  ('tag_list -> LVALUE','tag_list',1,'p_tag_list','queryparse.py',326),
  ('tag_list -> LVALUE COMMA tag_list','tag_list',3,'p_tag_list','queryparse.py',327),
  ('set_list -> LVALUE EQ QSTRING','set_list',3,'p_set_list','queryparse.py',335),
  ('set_list -> LVALUE EQ QSTRING COMMA set_list','set_list',5,'p_set_list','queryparse.py',336),
  ('statement_as_list -> statement','statement_as_list',1,'p_statement_as_list','queryparse.py',343),
  ('statement_as_list -> statement AS LVALUE','statement_as_list',3,'p_statement_as_list','queryparse.py',344),
  ('statement_as_list -> statement_as_list COMMA statement','statement_as_list',3,'p_statement_as_list','queryparse.py',345),
  ('statement_as_list -> statement_as_list COMMA statement AS LVALUE','statement_as_list',5,'p_statement_as_list','queryparse.py',346),
  ('statement -> statement_unary','statement',1,'p_statement','queryparse.py',368),
  ('statement -> statement_binary','statement',1,'p_statement','queryparse.py',369),
  ('statement -> LPAREN statement RPAREN','statement',3,'p_statement','queryparse.py',370),
  ('statement -> statement AND statement','statement',3,'p_statement','queryparse.py',371),
  ('statement -> statement OR statement','statement',3,'p_statement','queryparse.py',372),
  ('statement -> NOT statement','statement',2,'p_statement','queryparse.py',373),
  ('statement_unary -> HAS LVALUE','statement_unary',2,'p_statement_unary','queryparse.py',387),
  ('statement_binary -> LVALUE EQ QSTRING','statement_binary',3,'p_statement_binary','queryparse.py',393),
  ('statement_binary -> LVALUE LIKE QSTRING','statement_binary',3,'p_statement_binary','queryparse.py',394),
  ('statement_binary -> LVALUE TILDE QSTRING','statement_binary',3,'p_statement_binary','queryparse.py',395),
  ('statement_binary -> LVALUE IN LPAREN statement RPAREN','statement_binary',5,'p_statement_binary','queryparse.py',396),
]
