[buildout]
extends=buildout.cfg
unzip = false
mode = integration
eggs-directory = /opt/data/buildout/eggs
download-cache = /opt/data/buildout/downloads
parts += coverage lint omelette compressor minify wsgi 

[omelette]
recipe = collective.recipe.omelette
eggs = ${pyramid:eggs}

[coverage]
recipe = zc.recipe.egg
eggs = coverage
       ${pyramid:eggs}
scripts=coverage
arguments = sys.argv[1:]+[
            'xml',
            '--include=src/**/*.py',
            '--omit=src/**/tests/**',
            '-o',
            '${buildout:log-directory}/coverage.xml']

[lint]
recipe = zc.recipe.egg
eggs = pylint
       ${pyramid:eggs}
scripts = pylint=lint
entry-points = pylint=pylint.lint:Run
initialization = import os
                 os.chdir('${buildout:src-directory}')
arguments = sys.argv[1:]+[
            '--rcfile=${buildout:etc-directory}/pylint.rc',
            '--output-format=parseable']
            
[compressor]
recipe = hexagonit.recipe.download
strip-top-level-dir = true
ignore-existing = true
url = http://yui.zenfs.com/releases/yuicompressor/yuicompressor-2.4.6.zip

[minify]
recipe = collective.recipe.minify
paths = ${buildout:web-directory}/static
ignore = logd*
verbose = true
include-devel = false
css-command = java -jar ${yui-compressor:location}/build/yuicompressor-2.4.6.jar --line-break --type css -o ${buildout:web-directory}/static/styles/logd.min.css
js-command = java -jar ${yui-compressor:location}/build/yuicompressor-2.4.6.jar --line-break --type js -o ${buildout:web-directory}/static/scripts/logd.min.js

[wsgi]
recipe = zc.recipe.egg
eggs = ${pyramid:eggs}
scripts=paster=dispatch.wsgi
initialization = from pyramid.paster import get_app
                 application = get_app('${buildout:directory}/${buildout:mode}.ini', 'main')