define(["coweb/topics","coweb/jsoe/OperationEngine","org/OpenAjax"],function(a,b,c){var d=1e4,e=1e4,f=function(){this._mutex=!1,this._engine=null,this._shouldPurge=!1,this._shouldSync=!1,this._paused=!1,this._incomingPausedBuffer=[],this._syncTimer=null,this._purgeTimer=null,this._bridge=null,this._collab=!1,this._conns=[]},g=f.prototype;g.start=function(b,f){this._bridge=b,this._subscribeHub(f.collab);if(f.collab){this._syncTimer&&clearInterval(this._syncTimer),this._purgeTimer&&clearInterval(this._purgeTimer);var g=this;this._syncTimer=setInterval(function(){g._engineSyncOutbound()},d),this._purgeTimer=setInterval(function(){g._onPurgeEngine()},e)}var h=this._bridge.getInitialRoster(),i={username:f.username,site:this._engine.siteId,roster:h};c.hub.publish(a.READY,i)},g.stop=function(b){if(this._bridge)try{var d={connected:!b};c.hub.publish(a.END,d)}catch(e){console.warn("UnmanagedHubListener: failed end session notice "+e.message)}this._bridge=null,this._syncTimer&&(clearInterval(this._syncTimer),this._syncTimer=null),this._purgeTimer&&(clearInterval(this._purgeTimer),this._purgeTimer=null),this._unsubscribeHub()},g._subscribeHub=function(b){var d;b&&(d=c.hub.subscribe(a.SYNC+"**","_syncOutbound",this),this._conns.push(d),d=c.hub.subscribe(a.SET_STATE+"**","_stateOutbound",this),this._conns.push(d)),d=c.hub.subscribe(a.SUB_SERVICE+"**","_onSubServiceOutbound",this),this._conns.push(d),d=c.hub.subscribe(a.UNSUB_SERVICE+"**","_onUnsubServiceOutbound",this),this._conns.push(d),d=c.hub.subscribe(a.GET_SERVICE+"**","_onRequestServiceOutbound",this),this._conns.push(d),d=c.hub.subscribe(a.PAUSE_TOPIC,"_pause",this),this._conns.push(d),d=c.hub.subscribe(a.RESUME_TOPIC,"_resume",this),this._conns.push(d)},g._unsubscribeHub=function(){for(var a=0,b=this._conns.length;a<b;a++)c.hub.unsubscribe(this._conns[a]);this._conns=[]},g.setSiteID=function(a){this._engine=new b(a),this._engine.freezeSite(0)},g.syncInbound=function(a,b,d,e,f,g,h){var i,j;if(this._paused&&d!==null)this._incomingPausedBuffer.push([a,b,d,e,f,g,h]);else{if(g&&d){try{i=this._engine.push(!1,a,b,d,e,f,g,h)}catch(k){console.log("topic ",a),console.log("value ",e),console.log("type ",e),console.log("position ",e),console.warn("UnmanagedHubListener: failed to push op into engine "+k.message);return}if(i===null)return;b=i.value,e=i.position}else if(f===this._engine.siteId)return;j={position:e,type:d,value:JSON.parse(b),site:f},this._mutex=!0;try{c.hub.publish(a,j)}catch(l){console.warn("UnmanagedHubListener: failed to deliver incoming event "+a+"("+l.message+")")}this._mutex=!1,i&&(this._shouldPurge=!0,this._shouldSync=!0)}},g._syncOutbound=function(a,b){if(!this._mutex&&this._engine){var c=b.position,d=b.type,e=JSON.stringify(b.value),f=null,g=null,h,i,j;if(d!==null)try{f=this._engine.createOp(!0,a,e,d,c),g=f.contextVector.sites}catch(k){console.warn('UnmanagedHubListener: bad type "'+d+'" on outgoing event; making null'),d=null}try{i=this._bridge.postSync(a,e,d,c,g)}catch(l){j=l,i=!1,console.warn("UnmanagedHubListener: failed to send hub event "+l.message)}if(i&&d!==null)this._engine.pushLocalOp(f),this._shouldPurge=!0;else if(j)throw j}},g.noticeInbound=function(b,d){var e,f={};f.site=d.siteId,f.username=d.username;if(b==="available"){e=a.SITE_JOIN;try{this._engine.thawSite(f.site)}catch(g){console.warn("UnmanagedHubListener: failed to thaw site "+f.site+" "+g.message)}}else if(b==="unavailable"){e=a.SITE_LEAVE;try{this._engine.freezeSite(f.site)}catch(h){console.warn("UnmanagedHubListener: failed to freeze site "+f.site+" "+h.message)}}this._mutex=!0;try{c.hub.publish(e,f)}catch(i){console.warn("UnmanagedHubListener: failed to deliver notice "+i.message)}this._mutex=!1},g.servicePublishInbound=function(b,d,e){var f=a.SET_SERVICE+b,g={value:d,error:e};try{c.hub.publish(f,g)}catch(h){console.warn("UnmanagedHubListener: failed to deliver bot publish "+h.message)}},g.serviceResponseInbound=function(a,b,d){var e={value:b,error:d};try{c.hub.publish(a,e)}catch(f){console.warn("UnmanagedHubListener: failed to deliver bot response "+f.message)}},g._onSubServiceOutbound=function(a,b){try{this._bridge.postServiceSubscribe(b.service)}catch(c){console.warn("UnmanagedHubListener: failed service subscribe "+c.message)}},g._onUnsubServiceOutbound=function(a,b){try{this._bridge.postServiceUnsubscribe(b.service)}catch(c){console.warn("UnmanagedHubListener: failed service unsub "+c.message)}},g._onRequestServiceOutbound=function(a,b){try{this._bridge.postServiceRequest(b.service,b.params,b.topic)}catch(c){console.warn("UnmanagedHubListener: failed service request "+c.message)}},g.requestStateInbound=function(b){try{c.hub.publish(a.GET_STATE,b)}catch(d){console.warn("UnmanagedHubListener: failed collecting state "+d.message)}var e;try{this._engine.purge(),e=this._engine.getState()}catch(f){console.warn("UnmanagedHubListener: failed collecting engine state "+f.message)}try{this._bridge.postStateResponse(a.ENGINE_STATE,e,b)}catch(g){console.warn("UnmanagedHubListener: failed sending engine state "+g.message)}try{console.log(this._incomingPausedBuffer),this._bridge.postStateResponse(a.PAUSE_STATE,this._incomingPausedBuffer,b)}catch(h){console.warn("UnmanagedHubListener: failed sending pause state "+h.message)}try{this._bridge.postStateResponse(null,null,b)}catch(i){console.warn("UnmanagedHubListener: failed sending end state "+i.message)}},g._stateOutbound=function(a,b){if(!this._mutex){var c=b.recipient,d=b.state;try{this._bridge.postStateResponse(a,d,c)}catch(e){console.warn("UnmanagedHubListener: failed to send state "+e.message)}}},g.stateInbound=function(b,d){if(b===a.PAUSE_STATE)try{for(var e=0;e<d.length;e++)this.syncInbound(d[e][0],d[e][1],d[e][2],d[e][3],d[e][4],d[e][5],d[e][6])}catch(f){console.warn("UnmanagedHubListener: failed to recv pause queue state "+f.message);throw f}else if(b===a.ENGINE_STATE)try{this._engine.setState(d)}catch(g){console.warn("UnmanagedHubListener: failed to recv engine state "+g.message);throw g}else{this._mutex=!0;try{c.hub.publish(b,d)}catch(h){console.warn("UnmanagedHubListener: failed to recv state "+h.message);throw h}finally{this._mutex=!1}}},g._engineSyncOutbound=function(){if(this._engine&&this._shouldSync){var a=this._engine.copyContextVector();try{this._bridge.postEngineSync(a.sites)}catch(b){console.warn("UnmanagedHubListener: failed to send engine sync "+b.message);return}this._shouldSync=!1}},g.engineSyncInbound=function(a,b){if(a!==this._engine.siteId){try{this._engine.pushSyncWithSites(a,b)}catch(c){console.warn("UnmanagedHubListener: failed to recv engine sync "+a+" "+b+" "+c.message)}this._shouldPurge=!0}},g._onPurgeEngine=function(){if(this._engine){var a;if(this._shouldPurge){a=this._engine.getBufferSize();try{var b=this._engine.purge()}catch(c){console.warn("UnmanagedHubListener: failed to purge engine "+c.message)}}this._shouldPurge=!1;return a}},g._topicIsPaused=function(a){return a in this._pausedTopics},g._pause=function(){this._paused||(this._paused=!0,this._incomingPausedBuffer=[])},g._resume=function(){var a,b;if(this._paused){this._paused=!1;for(a=0,b=this._incomingPausedBuffer.length;a<b;a++)this.syncInbound.apply(this,this._incomingPausedBuffer[a])}};return f})