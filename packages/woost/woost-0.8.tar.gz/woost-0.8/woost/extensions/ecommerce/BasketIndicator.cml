<?xml version="1.0" encoding="utf-8"?>
<?py
from woost.models import Publishable
from woost.extensions.ecommerce.basket import Basket
?>

<a
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:py="http://www.whads.com/ns/cocktail/templates">

    <?py-class
    hide_when_empty = True
    order = None
    ?>
    
    <?py
    self.add_resource("/resources/styles/ecommerce-BasketIndicator.css")
    self.add_resource("/resources/scripts/ecommerce-BasketIndicator.js")
    ?>

    <py:ready>
        <?py
        if self.order is None:
            self.order = Basket.get()

        basket_page = Publishable.get_instance(
            qname = "woost.extensions.ecommerce.basket_page"
        )

        if basket_page is None or not basket_page.is_accessible() \
        or (self.hide_when_empty and not self.order.purchases):
            self.visible = False
        else:
            self["href"] = basket_page.get_uri()
        ?>
    </py:ready>

    <span py:id="count_label">
        <py:ready>
            <?py
            if self.visible:
                element.append(
                    translations(
                        "woost.extensions.ecommerce.BasketIndicator",
                        count = self.order.count_units()
                    )
                )
            ?>
        </py:ready>
    </span>    
</a>

