<?xml version="1.0" encoding="UTF-8"?>
<grammar xmlns="http://relaxng.org/ns/structure/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
  <!-- $Id: publiforge.rng 86b088d85a5a 2012/03/21 22:20:47 patrick $ -->
  <start>
    <ref name="publiforge"/>
  </start>
  <define name="publiforge">
    <element name="publiforge">
      <ref name="publiforge.attributes"/>
      <ref name="publiforge.content"/>
    </element>
  </define>
  <define name="publiforge.attributes">
    <ref name="version.attribute"/>
  </define>
  <define name="version.attribute">
    <attribute name="version">
      <value>1.0</value>
    </attribute>
  </define>
  <define name="publiforge.content">
    <choice>
      <ref name="processor"/>
      <ref name="user"/>
      <ref name="group"/>
      <ref name="storage"/>
      <ref name="project"/>
      <ref name="build"/>
      <ref name="project.processing"/>
      <group>
        <optional>
          <ref name="users"/>
        </optional>
        <optional>
          <ref name="groups"/>
        </optional>
        <optional>
          <ref name="storages"/>
        </optional>
        <optional>
          <ref name="projects"/>
        </optional>
      </group>
    </choice>
  </define>
  <!--
    =============================================================================
                                       processor
    =============================================================================
  -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ processor ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="processor">
    <element name="processor">
      <ref name="processor.content"/>
    </element>
  </define>
  <define name="processor.content">
    <oneOrMore>
      <ref name="localized.label"/>
    </oneOrMore>
    <zeroOrMore>
      <ref name="localized.description"/>
    </zeroOrMore>
    <ref name="engine"/>
    <optional>
      <ref name="ancestors"/>
    </optional>
    <optional>
      <ref name="processor.variables"/>
    </optional>
    <optional>
      <ref name="output"/>
    </optional>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ engine ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="engine">
    <element name="engine">
      <ref name="engine.content"/>
    </element>
  </define>
  <define name="engine.content">
    <data type="token">
      <param name="pattern">[a-z.]+</param>
    </data>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ancestors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- ~~~~~~ ancestors -->
  <define name="ancestors">
    <element name="ancestors">
      <ref name="ancestors.content"/>
    </element>
  </define>
  <define name="ancestors.content">
    <oneOrMore>
      <ref name="ancestor"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~~ ancestor -->
  <define name="ancestor">
    <element name="ancestor">
      <ref name="ancestor.content"/>
    </element>
  </define>
  <define name="ancestor.content">
    <data type="NCName"/>
  </define>
  <!-- ~~~~~ output -->
  <define name="output">
    <element name="output">
      <ref name="output.content"/>
    </element>
  </define>
  <define name="output.content">
    <data type="anyURI"/>
  </define>
  <!--
    =============================================================================
                                         user
    =============================================================================
  -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ users ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="users">
    <element name="users">
      <ref name="users.content"/>
    </element>
  </define>
  <define name="users.content">
    <oneOrMore>
      <ref name="user"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ user ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="user">
    <element name="user">
      <ref name="user.attributes"/>
      <ref name="user.content"/>
    </element>
  </define>
  <define name="user.attributes">
    <interleave>
      <ref name="user.login.attribute"/>
      <optional>
        <ref name="user.status.attribute"/>
      </optional>
    </interleave>
  </define>
  <define name="user.login.attribute">
    <attribute name="login">
      <data type="ID">
        <param name="minLength">2</param>
      </data>
    </attribute>
  </define>
  <define name="user.status.attribute">
    <attribute name="status">
      <choice>
        <value>draft</value>
        <value>active</value>
        <value>inactive</value>
      </choice>
    </attribute>
  </define>
  <define name="user.content">
    <interleave>
      <optional>
        <ref name="password"/>
      </optional>
      <ref name="name"/>
      <ref name="email"/>
      <optional>
        <ref name="language"/>
      </optional>
      <optional>
        <ref name="home"/>
      </optional>
      <optional>
        <ref name="page_size"/>
      </optional>
      <optional>
        <ref name="expiration"/>
      </optional>
      <optional>
        <ref name="ips"/>
      </optional>
      <optional>
        <ref name="permissions"/>
      </optional>
    </interleave>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ password ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="password">
    <element name="password">
      <ref name="password.attributes"/>
      <ref name="password.content"/>
    </element>
  </define>
  <define name="password.attributes">
    <optional>
      <ref name="hash.attribute"/>
    </optional>
  </define>
  <define name="hash.attribute">
    <attribute name="hash">
      <value>true</value>
    </attribute>
  </define>
  <define name="password.content">
    <data type="token">
      <param name="minLength">8</param>
    </data>
  </define>
  <!-- ~~~~~~~~~~~~~~ name, email, language, home, page_size, expiration ~~~~~~~~~~~ -->
  <define name="name">
    <element name="name">
      <data type="token">
        <param name="minLength">2</param>
      </data>
    </element>
  </define>
  <define name="email">
    <element name="email">
      <data type="token">
        <param name="pattern">[a-z0-9._%+\-]+@[a-z0-9.\-]+\.[a-z]{2,4}</param>
      </data>
    </element>
  </define>
  <define name="language">
    <element name="language">
      <ref name="lang.enumeration"/>
    </element>
  </define>
  <define name="home">
    <element name="home">
      <choice>
        <value>storages</value>
        <value>projects</value>
        <value>site</value>
      </choice>
    </element>
  </define>
  <define name="page_size">
    <element name="page_size">
      <choice>
        <value>5</value>
        <value>10</value>
        <value>20</value>
        <value>40</value>
        <value>80</value>
      </choice>
    </element>
  </define>
  <define name="expiration">
    <element name="expiration">
      <data type="date"/>
    </element>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ips & ip ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="ips">
    <element name="ips">
      <ref name="ips.content"/>
    </element>
  </define>
  <define name="ips.content">
    <oneOrMore>
      <ref name="ip"/>
    </oneOrMore>
  </define>
  <define name="ip">
    <element name="ip">
      <ref name="ip.content"/>
    </element>
  </define>
  <define name="ip.content">
    <data type="token">
      <param name="pattern">\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3}</param>
    </data>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~ permissions & permission ~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="permissions">
    <element name="permissions">
      <ref name="permissions.content"/>
    </element>
  </define>
  <define name="permissions.content">
    <oneOrMore>
      <ref name="permission"/>
    </oneOrMore>
  </define>
  <define name="permission">
    <element name="permission">
      <ref name="permission.attributes"/>
      <ref name="permission.content"/>
    </element>
  </define>
  <define name="permission.attributes">
    <ref name="scope.attribute"/>
  </define>
  <define name="scope.attribute">
    <attribute name="scope">
      <choice>
        <value>all</value>
        <value>doc</value>
        <value>usr</value>
        <value>grp</value>
        <value>stg</value>
        <value>prj</value>
      </choice>
    </attribute>
  </define>
  <define name="permission.content">
    <choice>
      <value>manager</value>
      <value>editor</value>
      <value>user</value>
    </choice>
  </define>
  <!--
    =============================================================================
                                       group
    =============================================================================
  -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ groups ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="groups">
    <element name="groups">
      <ref name="groups.content"/>
    </element>
  </define>
  <define name="groups.content">
    <oneOrMore>
      <ref name="group"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ group ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="group">
    <element name="group">
      <ref name="group.attributes"/>
      <ref name="group.content"/>
    </element>
  </define>
  <define name="group.attributes">
    <ref name="group.id.attribute"/>
  </define>
  <define name="group.id.attribute">
    <attribute name="xml:id">
      <data type="ID"/>
    </attribute>
  </define>
  <define name="group.content">
    <ref name="label"/>
    <optional>
      <ref name="description"/>
    </optional>
    <optional>
      <ref name="permissions"/>
    </optional>
    <optional>
      <ref name="group.members"/>
    </optional>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ group.member ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- ~~~~~ group.members -->
  <define name="group.members">
    <element name="members">
      <ref name="group.members.content"/>
    </element>
  </define>
  <define name="group.members.content">
    <oneOrMore>
      <ref name="group.member"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~ group.member -->
  <define name="group.member">
    <element name="member">
      <ref name="group.member.content"/>
    </element>
  </define>
  <define name="group.member.content">
    <data type="NCName"/>
  </define>
  <!--
    =============================================================================
                                      storage
    =============================================================================
  -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ storages ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="storages">
    <element name="storages">
      <ref name="storages.content"/>
    </element>
  </define>
  <define name="storages.content">
    <oneOrMore>
      <ref name="storage"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ storage ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="storage">
    <element name="storage">
      <ref name="storage.attributes"/>
      <ref name="storage.content"/>
    </element>
  </define>
  <define name="storage.attributes">
    <ref name="storage.id.attribute"/>
  </define>
  <define name="storage.id.attribute">
    <attribute name="xml:id">
      <data type="ID"/>
    </attribute>
  </define>
  <define name="storage.content">
    <ref name="label"/>
    <optional>
      <ref name="description"/>
    </optional>
    <ref name="vcs"/>
    <optional>
      <ref name="access"/>
    </optional>
    <optional>
      <ref name="refresh"/>
    </optional>
    <optional>
      <ref name="reset"/>
    </optional>
    <optional>
      <ref name="members"/>
    </optional>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~ reset, access, refresh ~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="reset">
    <element name="reset">
      <data type="boolean"/>
    </element>
  </define>
  <define name="access">
    <element name="access">
      <choice>
        <value>open</value>
        <value>restricted</value>
        <value>closed</value>
      </choice>
    </element>
  </define>
  <define name="refresh">
    <element name="refresh">
      <data type="integer"/>
    </element>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ vcs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="vcs">
    <element name="vcs">
      <choice>
        <group>
          <attribute name="engine">
            <value>none</value>
          </attribute>
          <ref name="vcs.none.content"/>
        </group>
        <group>
          <attribute name="engine">
            <value>local</value>
          </attribute>
          <ref name="vcs.local.content"/>
        </group>
        <group>
          <attribute name="engine">
            <value>hg</value>
          </attribute>
          <ref name="vcs.hg.content"/>
        </group>
      </choice>
    </element>
  </define>
  <define name="vcs.none.content">
    <optional>
      <ref name="public"/>
    </optional>
  </define>
  <define name="vcs.local.content">
    <optional>
      <ref name="public"/>
    </optional>
  </define>
  <define name="vcs.hg.content">
    <ref name="url"/>
    <optional>
      <ref name="vcs.user"/>
      <optional>
        <ref name="vcs.password"/>
      </optional>
    </optional>
  </define>
  <!-- ~~~~~ public -->
  <define name="public">
    <element name="public">
      <ref name="public.content"/>
    </element>
  </define>
  <define name="public.content">
    <data type="anyURI"/>
  </define>
  <!-- ~~~~~ url -->
  <define name="url">
    <element name="url">
      <ref name="url.content"/>
    </element>
  </define>
  <define name="url.content">
    <data type="anyURI"/>
  </define>
  <!-- ~~~~~ vcs.user, vcs.password -->
  <define name="vcs.user">
    <element name="user">
      <ref name="vcs.user.content"/>
    </element>
  </define>
  <define name="vcs.password">
    <element name="password">
      <ref name="vcs.password.content"/>
    </element>
  </define>
  <define name="vcs.user.content">
    <data type="NCName"/>
  </define>
  <define name="vcs.password.content">
    <data type="token"/>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ members & member ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- ~~~~~ members -->
  <define name="members">
    <element name="members">
      <ref name="members.content"/>
    </element>
  </define>
  <define name="members.content">
    <oneOrMore>
      <choice>
        <ref name="member"/>
        <ref name="member-group"/>
      </choice>
    </oneOrMore>
  </define>
  <!-- ~~~~~ member -->
  <define name="member">
    <element name="member">
      <ref name="member.attributes"/>
      <ref name="member.content"/>
    </element>
  </define>
  <define name="member.attributes">
    <interleave>
      <optional>
        <ref name="permission.attribute"/>
      </optional>
      <optional>
        <ref name="in-menu.attribute"/>
      </optional>
    </interleave>
  </define>
  <define name="permission.attribute">
    <attribute name="permission">
      <choice>
        <value>editor</value>
        <value>user</value>
        <value>none</value>
      </choice>
    </attribute>
  </define>
  <define name="in-menu.attribute">
    <attribute name="in-menu">
      <data type="boolean"/>
    </attribute>
  </define>
  <define name="member.content">
    <data type="NCName"/>
  </define>
  <!-- ~~~~~ member-group -->
  <define name="member-group">
    <element name="member-group">
      <ref name="member-group.attributes"/>
      <ref name="member-group.content"/>
    </element>
  </define>
  <define name="member-group.attributes">
    <optional>
      <ref name="permission.attribute"/>
    </optional>
  </define>
  <define name="member-group.content">
    <data type="NCName"/>
  </define>
  <!--
    =============================================================================
                                       project
    =============================================================================
  -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ projects ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="projects">
    <element name="projects">
      <ref name="projects.content"/>
    </element>
  </define>
  <define name="projects.content">
    <oneOrMore>
      <ref name="project"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ project ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="project">
    <element name="project">
      <ref name="project.attributes"/>
      <ref name="project.content"/>
    </element>
  </define>
  <define name="project.attributes">
    <ref name="project.status.attribute"/>
  </define>
  <define name="project.status.attribute">
    <attribute name="status">
      <choice>
        <value>draft</value>
        <value>active</value>
        <value>archived</value>
      </choice>
    </attribute>
  </define>
  <define name="project.content">
    <ref name="label"/>
    <optional>
      <ref name="description"/>
    </optional>
    <optional>
      <ref name="deadline"/>
    </optional>
    <optional>
      <ref name="project.processings"/>
    </optional>
    <optional>
      <ref name="project.packs"/>
    </optional>
    <optional>
      <ref name="members"/>
    </optional>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ deadline ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="deadline">
    <element name="deadline">
      <ref name="deadline.content"/>
    </element>
  </define>
  <define name="deadline.content">
    <data type="date"/>
  </define>
  <!--
    =============================================================================
                                        build
    =============================================================================
  -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ build ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="build">
    <element name="build">
      <ref name="build.attributes"/>
      <ref name="build.content"/>
    </element>
  </define>
  <define name="build.attributes">
    <ref name="id.attribute"/>
  </define>
  <define name="id.attribute">
    <attribute name="xml:id">
      <data type="ID"/>
    </attribute>
  </define>
  <define name="build.content">
    <ref name="settings"/>
    <ref name="build.processing"/>
    <optional>
      <ref name="build.pack"/>
    </optional>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ settings ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- ~~~~~ settings -->
  <define name="settings">
    <element name="settings">
      <ref name="settings.content"/>
    </element>
  </define>
  <define name="settings.content">
    <element name="setting">
      <attribute name="key">
        <value>storage.root</value>
      </attribute>
      <ref name="setting.content"/>
    </element>
    <element name="setting">
      <attribute name="key">
        <value>build.root</value>
      </attribute>
      <ref name="setting.content"/>
    </element>
    <zeroOrMore>
      <ref name="setting"/>
    </zeroOrMore>
  </define>
  <!-- ~~~~~ setting -->
  <define name="setting">
    <element name="setting">
      <ref name="setting.attributes"/>
      <ref name="setting.content"/>
    </element>
  </define>
  <define name="setting.attributes">
    <ref name="setting.key.attribute"/>
  </define>
  <define name="setting.key.attribute">
    <attribute name="key">
      <data type="NCName"/>
    </attribute>
  </define>
  <define name="setting.content">
    <text/>
  </define>
  <!--
    =============================================================================
                                      processings
    =============================================================================
  -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ processings ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="project.processings">
    <element name="processings">
      <ref name="project.processings.content"/>
    </element>
  </define>
  <define name="project.processings.content">
    <oneOrMore>
      <ref name="project.processing"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- ~~~~~ processing -->
  <define name="project.processing">
    <element name="processing">
      <ref name="project.processing.content"/>
    </element>
  </define>
  <define name="build.processing">
    <element name="processing">
      <ref name="build.processing.content"/>
    </element>
  </define>
  <define name="project.processing.content">
    <ref name="label"/>
    <optional>
      <ref name="description"/>
    </optional>
    <ref name="processing.processor"/>
    <optional>
      <ref name="variables"/>
    </optional>
    <optional>
      <ref name="resources"/>
    </optional>
    <optional>
      <ref name="templates"/>
    </optional>
    <optional>
      <ref name="output"/>
    </optional>
  </define>
  <define name="build.processing.content">
    <ref name="processing.processor"/>
    <optional>
      <ref name="variables"/>
    </optional>
    <optional>
      <ref name="resources"/>
    </optional>
    <optional>
      <ref name="templates"/>
    </optional>
  </define>
  <!-- ~~~~~ processing.processor -->
  <define name="processing.processor">
    <element name="processor">
      <ref name="processing.processor.content"/>
    </element>
  </define>
  <define name="processing.processor.content">
    <data type="NCName"/>
  </define>
  <!--
    =============================================================================
                                        Packs
    =============================================================================
  -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ packs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="project.packs">
    <element name="packs">
      <ref name="project.packs.content"/>
    </element>
  </define>
  <define name="project.packs.content">
    <oneOrMore>
      <ref name="project.pack"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ pack ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- ~~~~~ pack -->
  <define name="project.pack">
    <element name="pack">
      <ref name="pack.attributes"/>
      <ref name="project.pack.content"/>
    </element>
  </define>
  <define name="build.pack">
    <element name="pack">
      <ref name="pack.attributes"/>
      <ref name="build.pack.content"/>
    </element>
  </define>
  <define name="pack.attributes">
    <optional>
      <ref name="recursive.attribute"/>
    </optional>
  </define>
  <define name="recursive.attribute">
    <attribute name="recursive">
      <data type="boolean"/>
    </attribute>
  </define>
  <define name="project.pack.content">
    <ref name="label"/>
    <optional>
      <ref name="description"/>
    </optional>
    <optional>
      <ref name="files"/>
    </optional>
    <optional>
      <ref name="resources"/>
    </optional>
    <optional>
      <ref name="templates"/>
    </optional>
  </define>
  <define name="build.pack.content">
    <ref name="files"/>
    <optional>
      <ref name="resources"/>
    </optional>
    <optional>
      <ref name="templates"/>
    </optional>
  </define>
  <!--
    =============================================================================
                                        Variables
    =============================================================================
  -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ variables ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="processor.variables">
    <element name="variables">
      <ref name="processor.variables.content"/>
    </element>
  </define>
  <define name="variables">
    <element name="variables">
      <ref name="variables.content"/>
    </element>
  </define>
  <define name="processor.variables.content">
    <oneOrMore>
      <ref name="var.group"/>
    </oneOrMore>
  </define>
  <define name="variables.content">
    <oneOrMore>
      <ref name="var"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ var.group ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="var.group">
    <element name="group">
      <ref name="var.group.content"/>
    </element>
  </define>
  <define name="var.group.content">
    <oneOrMore>
      <ref name="localized.label"/>
    </oneOrMore>
    <zeroOrMore>
      <ref name="localized.description"/>
    </zeroOrMore>
    <oneOrMore>
      <ref name="processor.var"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ var ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- ~~~~~ var -->
  <define name="processor.var">
    <element name="var">
      <ref name="var.attributes"/>
      <choice>
        <group>
          <attribute name="type">
            <value>string</value>
          </attribute>
          <ref name="processor.var.content.string"/>
        </group>
        <group>
          <attribute name="type">
            <value>boolean</value>
          </attribute>
          <ref name="processor.var.content.boolean"/>
        </group>
        <group>
          <attribute name="type">
            <value>integer</value>
          </attribute>
          <ref name="processor.var.content.integer"/>
        </group>
        <group>
          <attribute name="type">
            <value>select</value>
          </attribute>
          <ref name="processor.var.content.select"/>
        </group>
        <group>
          <attribute name="type">
            <value>regex</value>
          </attribute>
          <ref name="processor.var.content.regex"/>
        </group>
      </choice>
      <ref name="processor.var.content"/>
    </element>
  </define>
  <define name="var">
    <element name="var">
      <ref name="var.attributes"/>
      <ref name="var.content"/>
    </element>
  </define>
  <define name="var.attributes">
    <interleave>
      <ref name="name.attribute"/>
      <optional>
        <ref name="visible.attribute"/>
      </optional>
    </interleave>
  </define>
  <define name="name.attribute">
    <attribute name="name">
      <data type="NCName"/>
    </attribute>
  </define>
  <define name="visible.attribute">
    <attribute name="visible">
      <data type="boolean"/>
    </attribute>
  </define>
  <define name="processor.var.content.string">
    <optional>
      <ref name="default.string"/>
    </optional>
  </define>
  <define name="processor.var.content.boolean">
    <optional>
      <ref name="default.boolean"/>
    </optional>
  </define>
  <define name="processor.var.content.integer">
    <optional>
      <ref name="default.integer"/>
    </optional>
  </define>
  <define name="processor.var.content.select">
    <optional>
      <ref name="default.select"/>
    </optional>
    <oneOrMore>
      <ref name="option"/>
    </oneOrMore>
  </define>
  <define name="processor.var.content.regex">
    <optional>
      <ref name="default.regex"/>
    </optional>
    <ref name="pattern"/>
  </define>
  <define name="processor.var.content">
    <zeroOrMore>
      <ref name="localized.description"/>
    </zeroOrMore>
  </define>
  <define name="var.content">
    <ref name="value"/>
    <optional>
      <ref name="default.string"/>
    </optional>
  </define>
  <!-- ~~~~~ default -->
  <define name="default.string">
    <element name="default">
      <text/>
    </element>
  </define>
  <define name="default.boolean">
    <element name="default">
      <data type="boolean"/>
    </element>
  </define>
  <define name="default.integer">
    <element name="default">
      <data type="integer"/>
    </element>
  </define>
  <define name="default.select">
    <element name="default">
      <text/>
    </element>
  </define>
  <define name="default.regex">
    <element name="default">
      <text/>
    </element>
  </define>
  <!-- ~~~~~ value -->
  <define name="value">
    <element name="value">
      <ref name="value.content"/>
    </element>
  </define>
  <define name="value.content">
    <text/>
  </define>
  <!-- ~~~~~ option -->
  <define name="option">
    <element name="option">
      <ref name="option.attributes"/>
      <ref name="option.content"/>
    </element>
  </define>
  <define name="option.attributes">
    <optional>
      <ref name="value.attribute"/>
    </optional>
  </define>
  <define name="value.attribute">
    <attribute name="value"/>
  </define>
  <define name="option.content">
    <text/>
  </define>
  <!-- ~~~~~ pattern -->
  <define name="pattern">
    <element name="pattern">
      <ref name="pattern.content"/>
    </element>
  </define>
  <define name="pattern.content">
    <text/>
  </define>
  <!--
    =============================================================================
                               Files, resources, templates
    =============================================================================
  -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ files ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- ~~~~~ files -->
  <define name="files">
    <element name="files">
      <ref name="files.content"/>
    </element>
  </define>
  <define name="files.content">
    <oneOrMore>
      <ref name="file"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~ file -->
  <define name="file">
    <element name="file">
      <ref name="file.attributes"/>
      <ref name="file.content"/>
    </element>
  </define>
  <define name="file.attributes">
    <optional>
      <ref name="visible.attribute"/>
    </optional>
  </define>
  <define name="file.content">
    <data type="anyURI"/>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ resources ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- ~~~~~~ resources -->
  <define name="resources">
    <element name="resources">
      <ref name="resources.content"/>
    </element>
  </define>
  <define name="resources.content">
    <oneOrMore>
      <ref name="resource"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~~ resource -->
  <define name="resource">
    <element name="resource">
      <ref name="resource.attributes"/>
      <ref name="resource.content"/>
    </element>
  </define>
  <define name="resource.attributes">
    <optional>
      <ref name="visible.attribute"/>
    </optional>
  </define>
  <define name="resource.content">
    <data type="anyURI"/>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ templates ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- ~~~~~~ templates -->
  <define name="templates">
    <element name="templates">
      <ref name="templates.content"/>
    </element>
  </define>
  <define name="templates.content">
    <oneOrMore>
      <ref name="template"/>
    </oneOrMore>
  </define>
  <!-- ~~~~~~ template -->
  <define name="template">
    <element name="template">
      <ref name="template.attributes"/>
      <ref name="template.content"/>
    </element>
  </define>
  <define name="template.attributes">
    <interleave>
      <ref name="template.to.attribute"/>
      <optional>
        <ref name="visible.attribute"/>
      </optional>
    </interleave>
  </define>
  <define name="template.to.attribute">
    <attribute name="to">
      <data type="anyURI"/>
    </attribute>
  </define>
  <define name="template.content">
    <data type="anyURI"/>
  </define>
  <!--
    =============================================================================
                                  Localized elements
    =============================================================================
  -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ label ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="label">
    <element name="label">
      <ref name="label.content"/>
    </element>
  </define>
  <define name="localized.label">
    <element name="label">
      <ref name="localized.label.attributes"/>
      <ref name="label.content"/>
    </element>
  </define>
  <define name="localized.label.attributes">
    <ref name="lang.attribute"/>
  </define>
  <define name="lang.attribute">
    <attribute name="xml:lang">
      <ref name="lang.enumeration"/>
    </attribute>
  </define>
  <define name="lang.enumeration">
    <choice>
      <value>en</value>
      <value>fr</value>
      <value>es</value>
    </choice>
  </define>
  <define name="label.content">
    <text/>
  </define>
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ description ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <define name="description">
    <element name="description">
      <ref name="description.content"/>
    </element>
  </define>
  <define name="localized.description">
    <element name="description">
      <ref name="localized.description.attributes"/>
      <ref name="description.content"/>
    </element>
  </define>
  <define name="localized.description.attributes">
    <ref name="lang.attribute"/>
  </define>
  <define name="description.content">
    <text/>
  </define>
</grammar>
