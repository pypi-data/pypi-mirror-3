Metadata-Version: 1.0
Name: plumbum
Version: 0.9.0
Summary: Plumbum: shell combinators library
Home-page: https://github.com/tomerfiliba/plumbum
Author: Tomer Filiba
Author-email: tomerfiliba@gmail.com
License: MIT
Description: Plumbum: Shell Combinators
        ==========================
        
        Ever wished the wrist-handiness of shell scripts be put into a **real** programming language? 
        Say hello to *Plumbum Shell Combinators*. Plumbum (Latin for *lead*, which was used to create 
        pipes back in the day) is a small yet feature-rich library for shell script-like programs in Python. 
        The motto of the library is **"Never write shell scripts again"**, and thus it attempts to mimic 
        the **shell syntax** ("shell combinators") where it makes sense, while keeping it all **pythonic 
        and cross-platform**.
         
        Apart from shell-like syntax and handy shortcuts, the library provides local and remote command 
        execution (over SSH), local and remote file-system paths, easy working-directory and environment 
        manipulation, and a programmatic Command-Line Interface (CLI) application toolkit. 
        Now let's see some code!
        
        *This is only a teaser; the full documentation can be found at*
        `Read the Docs <http://plumbum.readthedocs.org>`_
        
        Cheat Sheet
        -----------
        
        **Basics** ::
        
            >>> from plumbum import local, FG, BG
            >>> from plumbum.cmd import ls, grep, wc, cat, head
            >>> ls
            LocalCommand(<LocalPath /bin/ls>)
            >>> ls()
            u'build.py\ndist\ndocs\nLICENSE\nplumbum\nREADME.rst\nsetup.py\ntests\ntodo.txt\n'
            
        **Piping** ::
            
            >>> chain = ls["-a"] | grep["-v", "\\.py"] | wc["-l"]
            >>> print chain
            /bin/ls -a | /bin/grep -v '\.py' | /usr/bin/wc -l
            >>> chain()
            u'13\n'
        
        **Redirection** ::
        
            >>> ((cat < "setup.py") | head["-n", 4])()
            u'#!/usr/bin/env python\nimport os\n\ntry:\n'
            >>> (ls["-a"] > "file.list")()
            u''
            >>> (cat["file.list"] | wc["-l"])()
            u'17\n'
        
        **Working-directory manipulation** ::
            
            >>> local.cwd
            <Workdir /home/tomer/workspace/plumbum>
            >>> with local.cwd(local.cwd / "docs"):
            ...     chain()
            ... 
            u'15\n'
            
        **Foreground and background execution** ::
        
            >>> (ls["-a"] | grep["\\.py"]) & FG         # The output is printed to stdout directly
            build.py
            .pydevproject
            setup.py
            >>> (ls["-a"] | grep["\\.py"]) & BG         # The process runs "in the background"
            <Future ['/bin/grep', '\\.py'] (running)>
            
        **Command nesting** ::
            
            >>> from plumbum.cmd import sudo
            >>> print sudo[ifconfig["-a"]]
            /usr/bin/sudo /sbin/ifconfig -a
            >>> (sudo[ifconfig["-a"]] | grep["-i", "loop"]) & FG
            lo        Link encap:Local Loopback  
                      UP LOOPBACK RUNNING  MTU:16436  Metric:1
        
        **Remote commands (over SSH)** ::
            
            >>> from plumbum import SshMachine
            >>> remote = SshMachine("your-host.com")
            >>> r_ls = remote["ls"]
            >>> with remote.cwd("/lib"):
            ...     (r_ls | grep["0.so.0"])()
            ... 
            u'libusb-1.0.so.0\nlibusb-1.0.so.0.0.0\n'
        
        
Platform: POSIX
Platform: Windows
Classifier: Development Status :: 4 - Beta
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 2.5
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.0
Classifier: Programming Language :: Python :: 3.1
Classifier: Programming Language :: Python :: 3.2
Classifier: Topic :: System :: Systems Administration
