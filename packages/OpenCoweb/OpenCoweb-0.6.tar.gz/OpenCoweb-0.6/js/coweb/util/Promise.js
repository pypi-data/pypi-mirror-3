define(function(){var a=function(){var b,c,d,e,f,g=function(){var a,c,f,g,h=!1,i=function(a){var b=a.promise;return function(a){b.resolve(a)}},j=function(a){var b=g.promise;return function(a){b.fail(a)}};while(b){g=b,b=b.next,a=e?g.errback:g.callback;if(a)try{c=a.call(g.context||this,d);if(c&&typeof c.then==="function"){c.then(i(g),j(g),g.context);continue}f=c===undefined?d:c,c instanceof Error?g.promise.fail(f):g.promise.resolve(f)}catch(k){typeof console!=="undefined"&&console.error&&console.error(k,a),g.promise.fail(k),h=!0}else e?g.promise.fail(d):g.promise.resolve(d)}return h};this.then=function(d,e,h){if(d&&typeof d!=="function"){d=h[d];if(typeof d!=="function")throw new Error("callback must be a function")}if(e&&typeof e!=="function"){e=h[e];if(typeof e!=="function")throw new Error("errback must be a function")}var i={callback:d,errback:e,context:h,promise:new a};b?(c.next=i,c=i):b=c=i,f&&g();return i.promise},this.resolve=function(a){if(f)throw new Error("promise already resolved");f=!0,d=a;return g()},this.fail=function(a){if(f)throw new Error("promise already resolved");f=!0,e=!0,d=a;return g()}};return a})