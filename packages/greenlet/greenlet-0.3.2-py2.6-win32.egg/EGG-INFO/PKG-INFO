Metadata-Version: 1.0
Name: greenlet
Version: 0.3.2
Summary: Lightweight in-process concurrent programming
Home-page: http://bitbucket.org/ambroff/greenlet
Author: Ralf Schmitt
Author-email: ralf@systemexit.de
License: MIT License
Description: The greenlet package is a spin-off of Stackless, a version of CPython
        that supports micro-threads called "tasklets". Tasklets run
        pseudo-concurrently (typically in a single or a few OS-level threads)
        and are synchronized with data exchanges on "channels".
        
        A "greenlet", on the other hand, is a still more primitive notion of
        micro-thread with no implicit scheduling; coroutines, in other
        words. This is useful when you want to control exactly when your code
        runs. You can build custom scheduled micro-threads on top of greenlet;
        however, it seems that greenlets are useful on their own as a way to
        make advanced control flow structures. For example, we can recreate
        generators; the difference with Python's own generators is that our
        generators can call nested functions and the nested functions can
        yield values too. Additionally, you don't need a "yield" keyword. See
        the example in tests/test_generator.py.
        
        Greenlets are provided as a C extension module for the regular
        unmodified interpreter.
        
        Greenlets are lightweight coroutines in-process concurrent
        programming. This package is the py.magic.greenlet module from the `py
        lib`_.
        
        .. _py lib: http://codespeak.net/py/
        
        Who is using Greenlet?
        ======================
        
        There are several libraries that use Greenlet as a more flexible
        alternative to Python's built in coroutine support:
        
         - `Concurrence`_
         - `Eventlet`_
         - `Gevent`_
        
        .. _Concurrence: http://opensource.hyves.org/concurrence/
        .. _Eventlet: http://eventlet.net/
        .. _Gevent: http://www.gevent.org/
        
        Getting Greenlet
        ================
        
        The easiest way to get Greenlet is to install it with pip or
        easy_install::
        
          pip install greenlet
          easy_install greenlet
        
Platform: any
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Programming Language :: C
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.4
Classifier: Programming Language :: Python :: 2.5
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.0
Classifier: Programming Language :: Python :: 3.1
Classifier: Programming Language :: Python :: 3.2
Classifier: Operating System :: OS Independent
Classifier: Topic :: Software Development :: Libraries :: Python Modules
