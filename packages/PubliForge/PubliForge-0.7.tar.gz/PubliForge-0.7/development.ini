# $Id: development.ini e6171954dd48 2012/09/11 16:43:26 patrick $

# =============================================================================
[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 6543


# =============================================================================
[app:main]
use = egg:PubliForge

# --- Debug mode
pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.debug_templates = true
pyramid.includes = publiforge.lib.debug pyramid_debugtoolbar
debugtoolbar.button_style = top:auto;bottom:30px;zoom:75%;

# --- Languages
pyramid.default_locale_name = en
languages = fr es en
#translation_dirs =

# --- Instance unique identifier
uid = devfront
encryption = secretkey

# --- Add-ons
addons =

# --- Builds
build.develop = true
build.root = %(here)s/Builds~
build.ttl = 300
build.result_ttl = 900
build.concurrent = 3

# ------------------------------ Front

# --- Skin
#skin.title = PubliForge â€“ Prismallia
#skin.static.name = Static2
#skin.static.path = %(here)s/../Prismallia/PubliForge/Static
#skin.favicon = /Static2/favicon.ico
#skin.css.base =
#skin.css.login =
#skin.css.custom = /Static2/Css/prismallia.css
#skin.template.base =
#skin.template.login =

# --- Temporary directory
temporary_dir = %(here)s/Cache~/tmp

# --- Beaker cache
#cache.type = file
#cache.data_dir = %(here)s/Cache~/cache/data
#cache.lock_dir = %(here)s/Cache~/cache/lock

# --- Beaker session
session.type = file
session.data_dir = %(here)s/Cache~/sessions/data
session.lock_dir = %(here)s/Cache~/sessions/lock
session.key = PF_SESSION

# --- SQLAlchemy
drop_tables = true
# ... PostgreSQL
sqlalchemy.url = postgresql://publiforge:sesame@localhost/PubliForge
sqlalchemy.pool_size = 1
sqlalchemy.max_overflow = 1
sqlalchemy.pool_timeout = 10
# ... MySQL
#sqlalchemy.url = mysql://publiforge:sesame@localhost/PubliForge?charset=utf8
#sqlalchemy.pool_recycle = 3600

# --- Authentication
auth.cookie = PF_AUTH
auth.remember = 5184000

# --- Refresh
refresh.short = 3
refresh.long = 8

# --- Storages
storage.root = %(here)s/Storages~
storage.vcs = none local hg svn
storage.editors =
storage.report_ttl = 12
storage.cache = 900

# --- Available agents
agent.refresh = 180
agent.0.weight = 1
agent.0.password = sesame
agent.1.url = http://localhost:6544
agent.1.weight = 2
agent.1.password = sesame
agent.2.url = http://localhost:8080
agent.2.weight = 0
agent.2.password = sesame
agent.3.url = http://devel.publiforge.org
agent.3.weight = 0
agent.3.password = sesame

# ------------------------------ Agent

# --- Processors
processor.roots = %(here)s/../Prismallia/PubliForge/Processors
                  %(here)s/Processors~
processor.list = Parallel FixNBSpace Publidoc* Publiquiz2* Ini2*

# --- Buildspaces
buildspace.root = %(here)s/Buildspaces~
buildspace.ttl = 2678400

# --- Authorized fronts
front.0.uid = devfront
front.0.password = sesame


# =============================================================================
[Populate]
admin.login = admin
admin.password = adminpwd
admin.name = Administrateur
admin.email = admin@prismallia.fr
admin.language = fr

# Users
file.1 = %(here)s/Examples/Users/users.pfu.xml
file.2 = %(here)s/Examples/Users/tests.pfu.xml
file.3 = %(here)s/Examples/Users/guest1.pfu.xml
file.4 = %(here)s/Examples/Users/guest2.pfu.xml

# Groups
file.11 = %(here)s/Examples/Groups/groups_fr.pfg.xml
file.12 = %(here)s/Examples/Groups/sa_gaze.pfg.xml

# Storages
file.21 = %(here)s/Examples/Storages/none.pfs.xml
file.22 = %(here)s/Examples/Storages/local.pfs.xml
file.23 = %(here)s/Examples/Storages/hg.pfs.xml
file.24 = %(here)s/Examples/Storages/svn.pfs.xml

# Projects
file.31 = %(here)s/Examples/Projects/publidoc.pfp.xml
file.32 = %(here)s/Examples/Projects/publiquiz.pfp.xml
file.33 = %(here)s/Examples/Projects/comedie_humaine.pfp.xml


# =============================================================================
# Begin logging configuration

[loggers]
keys = root, publiforge, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_publiforge]
level = DEBUG
handlers =
qualname = publiforge

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
#format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s
format = [%(name)s %(levelname)s] %(message)s

# End logging configuration
