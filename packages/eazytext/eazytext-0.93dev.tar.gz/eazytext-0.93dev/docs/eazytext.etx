{{ Toc( float='right' ) }}

== Tutorial on eazytext syntax

Wiki in general has gained good acceptance in writing well formatted
documents with rich text, and that is without cluttering the document source
with criptic markup. While, wiki based document / publishing  applications have
cropped-up in several segmets, eazytext attempts to address the needs of
programmers, encouraging them to use eazytext for their documentation.

== Text markup

{{{ Nested
# { 'margin-left' : '80px' }

    |= Markup syntax                       |= Rendered as
    | \`` just a span element \``          | `` just a span element ``
    | \'' bold \''                         | '' bold ''
    | \// italic \//                       | // italic//
    | \__ underline \__                    | __ underline __
    | x\^^2\^^                             | x^^2^^
    | log\,,2\,,10                         | log,,2,,10
    | \'/ bold and italic '/               | '/ bold and italic '/
    | \'/ bold and italic /'               | '/ bold and italic /'
    | \'_ bold and underline '_            | '_ bold and underline '_
    | \'_ bold and underline _'            | '_ bold and underline _'
    | \/_ italic and underline /_          | /_ italic and underline _/
    | \/_ italic and underline _/          | /_ italic and underline _/
    | \'\/_ bold, italic and underline '/_ | '/_ bold, italic and underline '/_
    | \'\/_ bold, italic and underline _/' | '/_ bold, italic and underline _/'

}}}

'' And feel free to nest text formatting, ''

> In // 1862 //, ''Charles Lutwidge Dodgson'', a shy Oxford mathematician
> with a stammer, created a story about a little girl tubling down a rabbit
> hole. Thus geban the immortal adventures of Alice, perhaps the most popular
> heroine in English literature. Countless scholars have tried to define the
> charm of the Alice  books-with those wonderfully eccentric characters the
> '' Queen of Hearts, //Tweedledum// and //Tweedledee//, the //Cheshire Cat//,
> the //Mock Turtle// , the Mad Hatter, __et al__ '', by proclaiming that they
> really comprise a satire on
> language, a political allegory, a parody of Victorian children's
> literature, even a reflection of contemporary ecclesiastical history.
> Perhaps, as Dodgson might have said, Alice is no more than a dream, a
> fairy tale about the trials and tribulations of growing up-or down, or all
> turned around-as seen through the expert eyes of a child.

=== Line Break

To insert a line break any where in the text use ''\<br>''.
Line break can be freely mixed with text markups as well. For example,

> [<PRE
''Monsoon is a ``{g} blessing `` in disguise. <br> It's hard to describe ``{b} emotions `` it brings to life.''
// When there is ``{r} rainfall `` at night <br> I find in the morning, ``{c} dews `` alight. // >]

> ''Monsoon is a ``{g} blessing `` in disguise. <br> It's
> hard to describe ``{b} emotions `` it brings to life. '' <br>
> // When there is ``{r} rainfall `` at night <br>
> I find in the morning, ``{c} dews `` alight.//

=== Escaping markups

Use ''backslash'' to escape new lines and wiki markups.

== Links

Hyper linking document is one of the strengths in HTML documentation. There
are few ways to generate hyper links in a wiki text.

=== Simple hyper links

Generate a simple hyper reference over arbitrary text by enclosing them in
''double-square bracket (\[[...\]])''. The enclosed text is composed of two parts,
the ''href'' part and ''text'' part. In the following example 
// http://www.google.com // is ''href'', while //Google site// is the ''text''
part,

> [<PRE
a simple reference link to [[ http://www.google.com | Google site ]] >]

> a simple reference link to [[ http://www.google.com | Google site ]].

You might have also noticed that hyper links are automatically generated for
text words starting with ''https:'' or ''http:'' or ''www''

=== Opening a link in new browser window

> [<PRE
open [[ *http://www.google.com | this ]] hyper reference in a new browser window
>]

> open [[ *http://www.google.com | this ]] hyper reference in a new browser window 

notice the ''start (*)''character that is prepended to ''href'',

=== Anchors

It is also possible to create anchors inside a document that can be referenced
elsewhere, only that ''href'' is interpreted as ''anchor name''. Notice the
''Pound (#)'' that is prepended to ''anchor name''

> [<PRE Creating an [[ #anchor-here | anchor-here ]] >]

> Creating an [[ #anchor-here | anchor-here ]]

=== Images and email links

The link markup also provides a short cut for Image() macro to embed images
in the document. In this case ''href'' is interpreted as url to fetch the
image. Notice the ''plus (+)'' prepended to the image-url.

> [<PRE
Image (not a link) [[ +http://www.w3.org/2008/site/images/logo-w3c-mobile-lg | w3c]]
>]

> Image (not a link) [[ +http://www.w3.org/2008/site/images/logo-w3c-mobile-lg | w3c ]]

Instead of using ''http:'', prepend the //email-id// with ''mailto:'' and use
it as ''href''

> [<PRE mail to [[ mailto:hello.world@gmail.com | me ]] >]

> mail to [[ mailto:hello.world@gmail.com | me ]]

Feel free to intermix link markup with text markup, only rule being that, the
link text \[[...]] must be fully contained within text markups, like,

> [<PRE '' www.google.com '' >]
> [<PRE //{c;20|} [[ www.google.com | google ]] with-in italics// >]

> '' www.google.com ''
> //{c} [[ www.google.com | google ]] with-in italics//

== Block level markup

=== Headings

Headings are synonymous to sections, and are contained within a single line
(ofcourse one can use ''backslash'' to escape new lines). Eazytext provides
two forms of heading markup, first one, using one or more (upto five) ''equal
(=) '' characters, second one, using, '' h1. h2. h3. h4. h5. ''

1^^st^^ level heading can be written as,
> [<PRE = section1
 (or)
 h1. secion1 >]

2^^nd^^ level heading can be written as,
> [<PRE == section2
 (or)
 h2. secion2 >]

3^^rd^^ level heading can be written as,
> [<PRE === section3
 (or)
 h3. secion3 >]

4^^th^^ level heading can be written as,
> [<PRE ==== section4
 (or)
 h4. secion4 >]

5^^th^^ level heading can be written as,
> [<PRE ===== section5
 (or)
 h5. secion5 >]

Header markup begins from a new line and can accept //text markups//,
//link markup//, //URLs//, //line-break// as heading text. You can also use 
style shortcuts with heading markup.

=== Horizontal rule

To divide portions of text, try,
   
> [<PRE ---- >]

Like header markup, the horizontal rule markup too begins from a new line and
ends with a new line.

=== Ordered and un-ordered list

Ordered lists are bullet point list //with numbering//, while un-ordered lists are
bullet point list //with-out numbering//. 

''Ordered lists'' can be formed, by starting the line with one or more (upto 5)
'' pound (#) '' characters, where, each ''#'' denotes an inner level list.
For example,

> [<PRE # item one 
 ## level 2 item one
 ## level 2 item two
 # item two >]

will be translated as 
{{{ Nested
# { 'margin-left' : '20px' }

# item one 
## level 2 item one
## level 2 item two
# item two 
}}}

''UnOrdered lists'' can be formed, by starting the line with one or more (upto 5)
'' star (*) '' characters, where, each ''*'' denotes an inner level list.
For example,

> [<PRE * item one 
 ** level 2 item one
 ** level 2 item two
 * item two >]

will be translated as 
{{{ Nested
# { 'margin-left' : '20px' }

* item one 
** level 2 item one
** level 2 item two
* item two 
}}}

It is also possible to arbitrarily nest both (ordered and unordered) type of
list items.

# item ``{c} one ``
## Sub // ''item'' one //
## Visit www.google.com to access a peta <br> flop computer.
# [[ mailto:hello.world@google.com | Mail ]] with gmail.
** Sub item one
** Sub item two
# item three
* item four
** Sub item one
** Sub item two
## Sub item three
## Sub item four

Lists can be nested all the way upto 5 levels, while freely mixing the ordered
and un-ordered markups across the levels. Note, that within the same level,
mixing the ordered and un-ordered markup does not have any effect. List items
can contain //text markups//, //link markup//, //URLs//, //line-break// in its
text.

=== Blockquoted text

Block quoted text are written like,

> [<PRE > That which doesnt kill you makes you stronger - Nietzsche.
 > That which doesnt kill you make you stranger  - Joker.  >]

Rendered as,
> That which doesnt kill you makes you stronger - Nietzsche <br>
> That which doesnt kill you make you stranger - Joker.

Block quoted text can be nested as well.

> [<PRE >  ``{b} ''Nietzsche '' `` That which doesnt kill you makes you stronger.
 >> ``{t} ''Joker     '' `` That which doesnt kill you make you a stranger.

 > Visit ''{t} [[ +http://thedarkknight.warnerbros.com/dvdsite/ | Joker ]] ''
 > to know more him and search yourself at
 > http://www.quotationspage.com/quotes/Friedrich_Nietzsche/ >]

Rendered as,

>  ``{b} Nietzsche`` That which doesnt kill you makes you stronger.
>> ``{t} Joker `` That which doesnt kill you make you a stranger.

> Visit ''{t} [[ *http://thedarkknight.warnerbros.com/dvdsite/ | Joker ]] ''
> to know more about him and search yourself in
> http://www.quotationspage.com/quotes/Friedrich_Nietzsche/

And like this, block quoted text can nest all the way up to five levels. You
might have also noted that blockquoted text can have //text markups//,
//link markup//, //URLs// and //line-break//.

=== Small table

Tables are composed of rows and columns, where every intersecting row and
column is a cell. Simple tables can be generated like,

> [<PRE
|= fruits     |= icecreams   
| oranges     | vanilla     $|
| grapes      | chocolate   
| mango       | butterscotch
>]

Rendered as,

{{{ Nested
# { 'margin-left' : '40px' }

|= fruit      |= color
| oranges     | vanilla     $|
| grapes      | chocolate    |
| mango       | butterscotch

}}}

* ''|='' generates a table header cell, while ''|'' generate a cell. Each line
  is interpreted as a table-row, and each line can have multiple cells
  separated by ''|'' or ''|=''.
* ``{r} There is a limitation in small tables, that each table-row should
  be contained within a single line.`` Ofcourse, you can overcome this limitation
  by escaping the new line with a ''backslash''.
* By now you should have taken it for granted that, //text markups//,
  //link markup//, //URLs//, //line-break// can be used in table-text. You are
  right.
* To // right-align // text in a given cell, close the cell with ''$|''
  instead of closing it with ''|'' alone. Like, in the above example,
  //vanilla// is right-aligned.

=== Big table

Unlike small tables, where every line is treated as a table-row, in a big
table every line is treated as a table-cell. So,

Open the table,
> [<PRE ||{ >]
Close the table,
> [<PRE ||} >]
Open a table row,
> [<PRE ||- >]
Open a table header cell,
> [<PRE ||=  >]
Open a table cell, and don't miss the space that immediately follows '' double
pipe ("") ''
> [<PRE || orange >]

To generate the previous table using big-table markup, write it as,

> [<PRE
||{           
||-           
||= fruit     
||= color     
||-           
|| orange     
|| orange     
||-           
|| grape      
|| light green
||-           
|| mango      
|| yellow     
||}           
>]

which will be translated as,

{{{ Nested
# { 'margin-left' : '40px' }

||{            
||-            
||= fruit      
||= color      
||-            
|| orange      
|| orange      
||-            
|| grape       
|| light green 
||-            
|| mango       
|| yellow      
||}            

}}}


=== Sortable tables

When tables are created using small-table or big-table markup, column-wise
sorting is automatically enabled. To make it generic, we have made any table
created / composed in a wiki page, as column-wise sortable, provided, the
tables are marked as ''sortable'' //class//.

=== Definition list

Define terms using definition list,

> [<PRE
: dojo :: JavaScript tool-kit supporting classes, widgets, data stored etc.
>] <br>
> [<PRE
: minix3 :: Supposedly a next generation operating system aimed at distributed
computing and fault-tolerance.
>]

which will be translated as,

: dojo ::
    JavaScript tool-kit supporting classes, widgets, data stored etc.
: minix3 ::
    Supposedly a next generation operating system aimed at distributed
    computing and fault-tolerance.

''double colon (::)'' should not be present in the term-text except where it delimits
definition-term from its definition.

== Style shortcuts

Starting from eazytext version 0.8dev style shortcuts are introduced, augmenting
text-markups, table markups (both small tables and big tables), heading,
ordered and un-ordered lists . Play around in style.

For example, the following text markup with style shortcuts is converted to,

> [<PRE
> ''{r} this text is colored ''
> ''{|5} text with padding 5 pixels ''
> ''{b;5|;|5} text with padding 5 pixels, margin 5 pixels and colored blue ''
> ''{\1,solid,gray} bordered and padded with 2px ''
>]

translated as,

> ''{r} this text is colored'' <br>
> ''{|5} text with padding 5 pixels'' <br>
> ''{b;5|;|5} text with padding 5 pixels, margin 5 pixels and colored blue'' <br>
> ''{/1,solid,g;|2} bordered and padded with 2px'' <br>

Style shortcuts are enclosed in '' { ... } '', and immediately follows
wiki-markup that it augments. Within the curly braces, each style shortcut is
seperated by a ''semicolon (;)'',

: Foreground color ::
    A single //small case alphabet//, ranging from a-z
: Background color ::
    A single //capital case alphabet//, ranging from A-Z
: Margin ::
    A //numerical value// followed immediately by a //pipe (|)//, like //5|//
: Padding ::
    A //numerical value// immediately following a //pipe (|)//, like //|5//
: Border ::
    Comma seperated width, style, color (color being a small letter alphabet),
    immediately following a //backslash//. Bordered text elements are
    automatically padded with 2 pixels.

: Colormapping :: [[ ./sscut | Know ]] the mapping between color-alphabet and its color value.

== Intersperse HTML text

Sometimes using just the wiki markup can be quite limiting in creating rich
documents. Those who are HTML/CSS experts, can directly document with HTML and
CSS, interspersed along with the rest of the wiki text. Just open the html
text with '' \[< '' and close them with '' \>]''. For example, the following
styling is directly used in all the help documents that you see here.

{{{ Code text
[<
   <style type="text/css">
      Enter your styling attributes     
   </style>
   <script>
      Danger could be a malicious script
   </script>
   <pre>
     pre-formatted text
   </pre>
>]
}}}

Gets rendered as,

[<
   <style type="text/css">
      Enter your styling attributes     
   </style>
   <script>
      Danger could be a malicious script
   </script>
   <pre>
     pre-formatted text
   </pre>
>]

Note that the script tag within HTML markups can optionally be pruned away to
avoid [[http://en.wikipedia.org/wiki/Cross-site_request_forgery | CSRF]] attacks.

HTML text can be Interspersed in the following blocks,
* Text Paragraphs
* Within List Items
* BlockQuoted text
* Tables, both in small table and big table
* Definitions

== Templated Tags

HTML tags with common usage pattern are pre-templated and can be used by
attaching the template name with beginning markup
''\[<''. And the text contained within '' \[< .... >] '' are interpreted by
the template. For example, most of the pre-formatted text in this page are
generated using ''PRE'' template, like,
   > \[<PRE preformatted text \>]

   > [<PRE preformatted text >]

[[ ./ttags | Explore ]] more about the available templates.

== Macros

Macros are direct function calls from wiki text into the wiki
engine, provided, there is a macro by that name available. Most probably the
macro will return a html content, which will be used to replace the macro
call. [[ ../plugins/macros | Learn more about macros ]].

== Extensions

Wiki extensions are like plugins, and provide a way to extend the wiki engine
for new markups, each one addressing a specific requirements, like math,
graphs, code-highlighter etc ... and most probably the extension will be
translated into html text which will be used to replace the extension-block.

[< <pre style="margin-left:50px">
{{{ Box
    ....
    ....
}}}
</pre> >]

In the above case Box extension will be invoked and the lines in-between the triple
braces will be interpreted by the Box extension.
[[ ../plugins/extensions | Learn more about extension ]].

-----

{{{ Nested 
# { 'font-size' : 'small', 'color' : 'gray' }
Document edited using Vim <br> 
/* vim: set filetype=etx : */
}}}
