Metadata-Version: 1.0
Name: jsonschema
Version: 0.2
Summary: An implementation of JSON-Schema validation for Python
Home-page: http://github.com/Julian/jsonschema
Author: Julian Berman
Author-email: Julian@GrayVines.com
License: MIT/X
Description: ==========
        jsonschema
        ==========
        
        ``jsonschema`` is an implementation of JSON Schema (currently in `Draft 3
        <http://tools.ietf.org/html/draft-zyp-json-schema-03>`_) for Python.
        
        .. code:: python
        
            >>> from jsonschema import validate
        
            >>> # A sample schema, like what we'd get from json.load()
            >>> schema = {
            ...     "type" : "object",
            ...     "properties" : {
            ...         "price" : {"type" : "number"},
            ...         "name" : {"type" : "string"},
            ...     },
            ... }
        
            >>> # If no exception is raised by validate(), the instance is valid.
            >>> validate({"name" : "Eggs", "price" : 34.99}, schema)
        
            >>> validate({"name" : "Eggs", "price" : "Invalid"}, schema)
            Traceback (most recent call last):
                ...
            ValidationError: 'Invalid' is not of type 'number'
        
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2 :: Only
Classifier: Programming Language :: Python :: 2.5
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
