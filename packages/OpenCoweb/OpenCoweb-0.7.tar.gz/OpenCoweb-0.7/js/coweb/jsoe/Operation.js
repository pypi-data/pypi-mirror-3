define(["coweb/jsoe/ContextVector"],function(a){var b=function(a){if(a===undefined)this.type=null;else{if(a.state)this.setState(a.state),this.local=!1;else{this.siteId=a.siteId,this.contextVector=a.contextVector,this.key=a.key,this.value=a.value,this.position=a.position,this.order=a.order===undefined||a.order===null?Infinity:a.order;if(a.seqId!==undefined)this.seqId=a.seqId;else if(this.contextVector)this.seqId=this.contextVector.getSeqForSite(this.siteId)+1;else throw new Error("missing sequence id for new operation");this.xCache=a.xCache,this.local=a.local||!1}this.immutable=!1,this.xCache||(this.xCache=[]),this.immutable=!1}};b.prototype.getState=function(){var a=[this.type,this.key,this.value,this.position,this.contextVector.sites,this.seqId,this.siteId,this.order];return a},b.prototype.setState=function(b){if(b[0]!==this.type)throw new Error("setState invoked with state from wrong op type");if(this.immutable)throw new Error("op is immutable");this.key=b[1],this.value=b[2],this.position=b[3],this.contextVector=new a({state:b[4]}),this.seqId=b[5],this.siteId=b[6],this.order=b[7]||Infinity},b.prototype.copy=function(){var a={siteId:this.siteId,seqId:this.seqId,contextVector:this.contextVector.copy(),key:this.key,value:this.value,position:this.position,order:this.order,local:this.local,xCache:this.xCache},b=new this.constructor(a);return b},b.prototype.getFromCache=function(a){var b=this.xCache,c,d,e;for(d=0,e=b.length;d<e;d++){c=b[d];if(c.contextVector.equals(a))return c.copy()}return null},b.prototype.addToCache=function(a){var b=this.xCache,c=this.copy();c.immutable=!0,b.push(c);var d=b.length-(a-1);d>0&&(b=b.slice(d))},b.prototype.compareByContext=function(a){var b=this.contextVector.compare(a.contextVector);if(b===0)return this.siteId<a.siteId?-1:this.siteId>a.siteId?1:0;return b},b.prototype.compareByOrder=function(a){if(this.order===a.order){if(this.local===a.local)return this.seqId<a.seqId?-1:1;if(this.local&&!a.local)return 1;if(!this.local&&a.local)return-1}else{if(this.order<a.order)return-1;if(this.order>a.order)return 1}},b.prototype.transformWith=function(a){if(this.immutable)throw new Error("attempt to transform immutable op");var b=this[a.transformMethod()],c;if(!b)throw new Error("operation cannot handle transform with type: "+a.type);c=b.apply(this,arguments),c&&this.upgradeContextTo(a);return c},b.prototype.upgradeContextTo=function(a){if(this.immutable)throw new Error("attempt to upgrade context of immutable op");this.contextVector.setSeqForSite(a.siteId,a.seqId)},b.prototype.getTransformMethod=function(){throw new Error("transformMethod not implemented")};return b})