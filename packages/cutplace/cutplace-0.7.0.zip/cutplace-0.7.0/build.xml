<project name="cutplace" default="bdist_egg" basedir=".">
    <description>Buildfile for cutplace</description>

    <!-- Set global properties for this build. -->
    <property name="source" location="source" />
    <property name="tests.dir" location="tests" />
    <property name="tests-input.dir" location="${tests.dir}/input" />
    <property name="tests-input-icds.dir" location="${tests-input.dir}/icds" />
    <property name="tests-output.dir" location="${tests.dir}/output" />
    <property name="build" location="build" />
    <property name="dist" location="dist" />
    <property name="site.dir" location="${build}/site" />
    <property name="reports.dir" location="${site.dir}/reports" />
    <property name="api.dir" location="${site.dir}/api" />

    <macrodef name="pyst">
        <!-- Macro to run a setup.py command. -->
        <attribute name="command" />
        <sequential>
            <exec executable="python" failonerror="true">
                <arg value="setup.py" />
                <arg value="@{command}" />
            </exec>
        </sequential>
    </macrodef>

    <target name="develop" depends="bdist_egg" description="install current development version">
        <tstamp />
        <pyst command="develop" />
    </target>

    <target name="install" depends="bdist_egg" description="install binary distribution">
        <tstamp />
        <pyst command="install" />
    </target>

    <target name="sdist" depends="bdist_egg" description="build source distribution">
        <!-- Delete Mac OS X Finder cache files. -->
        <delete>
            <fileset defaultexcludes="false" dir="." includes="**/.DS_Store" />
        </delete>
        <exec executable="python" failonerror="true">
            <arg value="setup.py" />
            <arg value="sdist" />
            <arg value="--formats=zip" />
        </exec>
    </target>

    <target name="sdist_upload" depends="bdist_egg" description="build source distribution">
        <!-- Delete Mac OS X Finder cache files. -->
        <delete>
            <fileset defaultexcludes="false" dir="." includes="**/.DS_Store" />
        </delete>
        <exec executable="python" failonerror="true">
            <arg value="setup.py" />
            <arg value="sdist" />
            <arg value="--formats=zip" />
            <arg value="upload" />
        </exec>
    </target>

    <target name="bdist_egg" depends="docs" description="build binary distribution">
        <tstamp />
        <pyst command="bdist_egg" />
    </target>

    <target name="bdist_egg_upload" depends="docs" description="build binary distribution and upload it to PyPI">
        <tstamp />
        <exec executable="python" failonerror="true">
            <arg value="setup.py" />
            <arg value="bdist_egg" />
            <arg value="upload" />
        </exec>
    </target>

    <target name="bdist_wininst_upload" depends="docs" description="build Windows installer and upload it to PyPI">
        <tstamp />
        <exec executable="python" failonerror="true">
            <arg value="setup.py" />
            <arg value="bdist_wininst" />
            <arg value="upload" />
        </exec>
    </target>

    <target name="testdata" description="generate test data">
        <exec executable="python" failonerror="true">
            <arg value="cutplace/dev_test.py" />
        </exec>
    </target>

    <target name="test" depends="testdata" description="run test suite">
        <exec executable="nosetests" failonerror="false">
            <arg value="--with-coverage" />
            <arg value="--with-doctest" />
            <arg value="--with-xunit" />
            <arg value="--cover-erase" />
            <arg value="--exclude" />
            <!-- TODO: Implement automatic test cases for web interface. -->
            <arg value="(.*setup.*)|(.*test_performance.*)" />
        </exec>
        <exec executable="coverage" failonerror="true">
            <arg value="xml" />
        </exec>
    </target>

    <target name="performance" description="run performance test" depends="sitebase">
        <!-- 
          Note: No failonerror="true" because this test is so basic that
          failure is a reason for immediate investigation.
        -->
        <exec executable="nosetests">
            <arg value="--with-xunit" />
            <arg value="--xunit-file" />
            <arg file="nosetests_performance.xml" />
            <arg file="cutplace/test_performance.py" />
        </exec>
    </target>

    <target name="clean" description="clean up">
        <!-- Delete files and folders generated by target "bdist". -->
        <pyst command="clean" />
        <delete>
            <fileset dir="." includes="**/*.pyc, **/*$py.class" />
            <fileset dir="." includes="coverage.xml, nosetests.xml, nosetests_performance.xml, pep8.txt, sloccount.sc" />
        </delete>
        <delete includeemptydirs="true">
            <fileset dir="${tests-output.dir}" includes="**/*" />
        </delete>
        <delete dir="${build}" />
    </target>

    <target name="site" depends="reports, docs, api" description="build web site">
        <!-- Dummy target to invoke all dependencies. -->
    </target>

    <target name="sitebase">
        <mkdir dir="${site.dir}/images" />
        <mkdir dir="${reports.dir}" />
        <mkdir dir="${api.dir}" />
    </target>

    <target description="build documentation" name="docs" depends="sitebase, testdata">
        <exec executable="nosetests" failonerror="true">
            <arg value="--with-doctest" />
            <arg value="--doctest-extension=rst" />
            <arg value="--where" />
            <arg value="docs" />
        </exec>
        <pyst command="docs" />
    </target>

    <target name="reports" depends="sitebase, pep8, sloccount, testdata, performance" description="build developer reports" />

    <target name="sloccount" description="build sloccount report">
        <echo message="build sloccount report" />
        <exec executable="sloccount" failonerror="true">
            <arg value="--details" />
            <arg value="--wide" />
            <arg value="cutplace" />
            <redirector output="sloccount.sc">
                <outputfilterchain>
                    <linecontains negate="true">
                        <contains value=".svn" />
                    </linecontains>
                </outputfilterchain>
            </redirector>
        </exec>
    </target>

    <target name="pep8" description="build pep8 violations report">
        <echo message="build pep8 violations report" />
        <exec executable="pep8">
            <!--
            Note: We do not use failonerror="true" because any violations results in an exit code
            of 1, which would result in the whole build to be considered failed.
            -->
            <arg value="--repeat" />
            <arg value="--ignore" />
            <arg value="E501" />
            <arg value="cutplace" />
            <redirector output="pep8.txt" />
        </exec>
    </target>

    <target name="api" depends="sitebase" description="build API documentation">
        <exec executable="epydoc" failonerror="true">
            <arg value="--config" />
            <arg file=".settings/epydoc.config" />
        </exec>
    </target>
</project>
