<html xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      metal:use-macro="context/main_template/macros/master"
      i18n:domain="zpydoc">

 
<body>
  <div metal:fill-slot="main"
       tal:define="errors options/state/getErrors;
                   utool context/@@plone_portal_state/portal_url;">

      <h1><img src="" alt="" tal:define="icon python:context.getIcon(1)" 
               tal:attributes="src string:${utool}/${icon}">&nbsp;<span tal:replace="context/title_or_id"/></h1>

        <a href=""
           class="link-parent"
           tal:define="parent_url python:context.navigationParent(context, template.getId())"
           tal:condition="parent_url"
           tal:attributes="href parent_url"
           i18n:translate="go_to_parent_url">
        Up one level
        </a>


      <form name="edit" action="" method="post"
            tal:attributes="action string:${context/getId}/${template/getId}">

          <div class="field"
               tal:condition="python:site_properties.getProperty('visible_ids', None)"
               tal:define="error errors/id | nothing;
                           id python:request.get('id', test(here.show_id(),here.getId(),''));"
               tal:attributes="class python:test(error, 'field error', 'field')">

            <label for="id" i18n:translate="label_short_name">Short Name</label>

            <div class="formHelp" i18n:translate="help_shortname">
                   Short Name is part of the item's web address.
                           For accessibility reasons, do not use spaces, upper case,
                   underscores, or special characters.
            </div>

            <div tal:content="error">Validation error output</div>

            <input type="text"
                   id="id"
                   name="id"
                   value=""
                   tal:attributes="value id"
                   />

          <input type="hidden"
                 name="id"
                 tal:condition="python:not site_properties.getProperty('visible_ids', '')"
                 tal:attributes="value python:request.get('id', here.getId())"
                 />


          </div>


          <div class="field"
               tal:define="error errors/title|nothing;
                           Title request/title | context/Title;"
               tal:attributes="class python:test(error, 'field error', 'field')">

             <label for="title" i18n:translate="label_title">Title</label>

             <span class="fieldRequired" title="Required"
                   i18n:attributes="title"
                   i18n:translate="label_required">(Required)</span>

             <div tal:content="error">Validation error output</div>

             <input type="text" id="title" name="title" value="" size="40"
                    tal:attributes="value Title;"/>
          </div>

          <div class="field"
               tal:define="description request/description | context/Description ">

            <label for="description" 
                   i18n:translate="label_description">Description</label>

            <div class="formHelp" i18n:translate="help_description">
              A brief description of the ledger.
            </div>

            <textarea cols="80" rows="5" id="description" name="description"
                      tal:content="description">
              Description
            </textarea>
          </div>

          <div class="field"
               tal:define="error errors/show_data|nothing;"
               tal:attributes="class python:test(error, 'field error', 'field')">

            <label for="next_accno" 
                   i18n:translate="label_next_accno">Show Data</label>

            <div tal:content="error">Validation error output</div>

            <div class="formHelp" i18n:translate="help_show_data">
                 Indicate whether or not to show module data.  This could have security
                 implications as modules you may choose not to display can still polute
                 this space.
            </div>

            <input type="checkbox" name="show_data:boolean" value="1"
                   tal:attributes="checked request/show_data | context/show_data | nothing"/>
          </div>

          <div class="field"
               tal:define="error errors/expert_mode |nothing;"
               tal:attributes="class python:test(error, 'field error', 'field')">

            <label for="next_accno" 
                   i18n:translate="label_next_accno">Expert Mode</label>

            <div tal:content="error">Validation error output</div>

            <div class="formHelp" i18n:translate="help_expert_mode">
                 Allow arbitrary imports of python modules to be introspected by Zpydoc instead 
                 of limited to those loaded in the Zope server.  If you choose to do this, you 
                 <i>must</i> be sure that these won't compromise the security and functioning of
                 your Zope server instance.
            </div>

            <input type="checkbox" name="expert_mode:boolean" value="1"
                   tal:attributes="checked request/expert_mode | context/expert_mode"/>
          </div>

         <div class="formControls" colspan="2">
               <input class="context" type="submit" 
                      name="form.button.Edit"
                      value="Edit" i18n:attributes="Edit" />
         </div>

         <input type="hidden" name="form.submitted" value="1"/>
      </form>
 
  </div>
 
</body>
</html>
