<html xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      metal:use-macro="context/main_template/macros/master"
      i18n:domain="zpydoc">

    <metal:javascript_head_slot fill-slot="javascript_head_slot">
        <span tal:replace="structure string:<script type=text/javascript>"/>

<tal:block tal:define="roles context/valid_roles;
                       roles_len python: len(roles)"
           tal:repeat="role roles">
isSelected<span tal:replace="role"/> = false;

function toggleSelect<span tal:replace="role"/>() {
  if (isSelected<span tal:replace="role"/> == false) {
    for (i = 0; i < document.edit_form.<span tal:replace="role"/>.length; i=i+1)
      document.edit_form.<span tal:replace="role"/>[i].checked = true ;
    isSelected<span tal:replace="role"/> = true;
    document.edit_form.select<span tal:replace="role"/>Button.value = 'Deselect All';
    return isSelected<span tal:replace="role"/>;
  }
  else {
    for (i = 0; i < document.edit_form.length; i=i+1)
      document.edit_form.<span tal:replace="role"/>[i].checked = false ;
    isSelected<span tal:replace="role"/> = false;
    document.edit_form.select<span tal:replace="role"/>Button.value = 'Select All';
    return isSelected<span tal:replace="role"/>;       
  }
}
</tal:block>

        <span tal:replace="structure string:</script>"/>
    </metal:javascript_head_slot>
 
<body>
  <div metal:fill-slot="main"
       tal:define="errors options/state/getErrors;
                   utool context/@@plone_portal_state/portal_url;
                   icon python:context.getIcon(1);
                   roles context/valid_roles;
                   roles_len python: len(roles);
                   name request/name | string:;
                   modules python: test(name, 
                                        context.module_tree(name=name, depth=1),
                                        context.module_tree(depth=0));
                   allow_roles python: not name or context.module_permitted(name)">

      <h1><img src="" alt="" 
               tal:attributes="src string:${utool}/${icon}">&nbsp;<span tal:replace="context/title_or_id"/></h1>

        <a href=""
           class="link-parent"
           tal:define="parent_url python:context.navigationParent(context, template.getId())"
           tal:condition="parent_url"
           tal:attributes="href parent_url"
           i18n:translate="go_to_parent_url">
        Up one level
        </a>

    <p class="formHelp">You must <i>explicitly</i> declare which modules are publicly available from
       your Zpydoc instance.  By <i>publicly available</i>, we mean in conjunction with the <i>View</i>
       permission in the Security Tab.</p>

    <div id="portal-breadcrumbs" tal:define="parts python: name.split('.')" tal:condition="parts">
          <a href="modules">
             <img src="" alt="zpydoc" tal:attributes="src string:${utool}/${icon}">
          </a>
          <tal:block tal:repeat="part parts">
              <span class="breadcrumbSeparator">&rarr;</span>
              <a href="" tal:attributes="href python: 'modules?name=%s' % '.'.join(parts[:repeat['part'].index + 1])"
                 tal:content="part"/>
        </tal:block>
    </div>

      <form name="edit_form" action="" method="post"
            tal:attributes="action string:${context/getId}/${template/getId}">

       <table width="100%" cellspacing="0" cellpadding="2" border="0" nowrap>
          <tr>
             <td class="field" align="left" colspan="2"><label>Module</label></td>
             <td class="field" align="left" colspan="" tal:attributes="colspan roles_len"><label>Role</label></td>
          </tr>
          <tal:packages repeat="module modules">
             <tal:block tal:define="name python: module[0];
                                    subs python: module[1];">
             <tr tal:condition="python: repeat['module'].index % 10 == 0">
                <td class="field" colspan="2">&nbsp;</td>
                <td class="field" tal:repeat="role roles">
                    <i tal:content="role"/>
                </td>
             </tr>
             <tr class=""
                 tal:attributes="class python: test(repeat['module'].odd(), 'odd', 'even')">
                 <td class="field">
                    <img src="" tal:attributes="src string:${utool}/package.png"/>
                 </td>
                 <td class="field" tal:define="short_name python: name.split('.')[-1]">
                       <span tal:condition="not: subs" tal:content="short_name"/>
                       <a tal:condition="subs"
                          tal:attributes="href string:modules?name=${name}"
                          tal:content="short_name"/>
                 </td>
                 <td class="field" tal:repeat="role roles">
                    <input type="checkbox" tal:condition="allow_roles" id="roles" name=""
                           tal:attributes="name string:${name}.${role}:record;
                                           id role;
                                           checked python:test(context.module_role(name, role),1,0)"/>
                 </td>
             </tr>
             </tal:block>
          </tal:packages>
         <tr tal:condition="allow_roles">
             <td class="field" colspan="2">&nbsp;</td>
             <td class="field" tal:repeat="role roles">
               <input class="standalone" type="button" name="selectButton" 
                         value="Select All" onclick="toggleSelect(); return false"
                      tal:attributes="name string:select${role}Button; 
                                      onclick python: 'toggleSelect%s()' % role" />
             </td>
         </tr>
       </table>

         <div class="formControls">
               <input class="context" type="submit" 
                      name="form.button.Edit"
                      value="Edit" i18n:attributes="Edit" />
         </div>

        <input type="hidden" name="form.submitted" value="1"/>
        <input type="hidden" name="name" value="" tal:attributes="value name" tal:condition="name"/>
      </form>
 
  </div>
 
</body>
</html>
