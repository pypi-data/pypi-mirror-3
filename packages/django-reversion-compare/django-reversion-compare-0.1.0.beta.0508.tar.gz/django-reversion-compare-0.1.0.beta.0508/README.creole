= django-reversion-compare =

**django-reversion-compare** is an extension to [[https://github.com/etianen/django-reversion/|django-reversion]] that provides a history compare view to compare two versions of a model which is under reversion.

Comparing model versions is not a easy task. Maybe there are different view how this should looks like.
This project will gives you a generic way to see whats has been changed.

Many parts are customizable by overwrite methods or subclassing, see above.

== installation ==

Just use:
{{{
pip install django-reversion-compare
}}}

=== setup ===

Add **reversion_compare** to **INSTALLED_APPS** in your settings.py, e.g.:
{{{
INSTALLED_APPS = (
    'django...',
    ...
    'reversion', # https://github.com/etianen/django-reversion
    'reversion_compare', # https://github.com/jedie/django-reversion-compare
    ...
)
}}}

=== usage ===

Inherit from **CompareVersionAdmin** instead of **VersionAdmin** to get the compare feature.

admin.py e.g.:
{{{
from django.contrib import admin
from reversion_compare.admin import CompareVersionAdmin

from my_app.models import ExampleModel

class ExampleModelAdmin(CompareVersionAdmin):
    pass

admin.site.register(ExampleModel, ExampleModelAdmin)
}}}

=== customize ===

It's possible to change the look for every field or for a entire field type.
You must only define a methods to your admin class with this name scheme:

* {{{ "compare_%s" % field_name }}}
* {{{ "compare_%s" % field.get_internal_type() }}}

If there exist no method with this name scheme, the {{{ fallback_compare() }}} method would be used.

example for specify a compare method for a model field by name:

{{{
class YourAdmin(CompareVersionAdmin):
    def compare_foo_bar(self, obj_compare):
        """ compare the foo_bar model field """
        return "%r <-> %r" % (obj_compare.value1, obj_compare.value2)
}}}


== test ==

We ship a simple test project. To use this, do this steps:

{{{
$ cd path/to/django-reversion-compare/reversion_compare_test_project/
django-reversion-compare/reversion_compare_test_project$ ./reset.sh # creates test.db3 with syncdb and run createsuperuser
django-reversion-compare/reversion_compare_test_project$ ./manage.py runserver --traceback
}}}

See, also: [[http://github.com/jedie/django-reversion-compare/tree/master/reversion_compare_test_project|reversion_compare_test_project]]

== screenshots ==

----
{{http://www.pylucid.org/media/pylucid.org/screenshots_PyLucid/django-reversion/django-reversion-compare_v0_1_0-01.png|django-reversion-compare_v0_1_0-01.png}}
----
{{http://www.pylucid.org/media/pylucid.org/screenshots_PyLucid/django-reversion/django-reversion-compare_v0_1_0-02.png|django-reversion-compare_v0_1_0-02.png}}
----
{{http://www.pylucid.org/media/pylucid.org/screenshots_PyLucid/django-reversion/django-reversion-compare_v0_1_0-03.png|django-reversion-compare_v0_1_0-03.png}}
----


== changelog ==

* v0.1.0 - 08.05.2012:
** First release
* v0.0.1 - 08.05.2012:
** collect all compare stuff from old "diff" branch
** see also:  https://github.com/etianen/django-reversion/issues/147


== Links ==

| IRC                 | [[http://www.pylucid.org/permalink/304/irc-channel|#pylucid on freenode.net]]
| Github              | [[http://github.com/jedie/django-reversion-compare]]
| Python Packages     | [[http://pypi.python.org/pypi/django-reversion-compare/]]
