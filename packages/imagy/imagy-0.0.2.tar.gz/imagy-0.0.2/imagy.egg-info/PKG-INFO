Metadata-Version: 1.0
Name: imagy
Version: 0.0.2
Summary: A command line tool to automatically handle image optimization
Home-page: https://github.com/doda/imagy
Author: Dominik Dabrowski
Author-email: dominik@silberrock.com
License: Copyright (c) 2012, Dominik Dabrowski

All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
Description: Imagy - make your website's images load upto 50% faster
        ===============
        
        Imagy uses *lossless compression* on images, so your users never have to load unnecessary bytes. The algorithms used are lossless, so your images look the same, but load faster.
        
        Instead of having to code up deamons, file watches and handle different file formats on your own, Imagy does all the work for you. Just point it at the folder(s) your images are stored in and it will automatically look for files that are created or changed and optimize them for size *without any visual impact*.
        
        Getting Started
        -----------------
        
        ::
        
            pip install imagy
            
            imagy /awesome/images/in/here/
            
        
        That's it. Imagy's now running.
        
        
        You can instead also specifiy the image paths directly in `config.py` which already holds a couple of examples
        
        
        Example
        -----------------
        
        As soon as the file
        
        ::
        
            images/img.jpg
        
        gets created, Imagy optimizes while the original stays at
        
        ::
        
            images/img-original.jpg
             
        
        The algorithms used are stable (don't further modify files after multiple invocations), however by default Imagy keeps the original file. If you would not like to keep original images around set KEEP_ORIGINALS to False. 
        
        In the background Imagy uses the awesome library smush which exposes a general interface to handle the various file types.
        
        If you wish to stop using Imagy, run 
        
        ::
        
            imagy -r
        
        which will copy all original images back to their initial location
        
Platform: UNKNOWN
