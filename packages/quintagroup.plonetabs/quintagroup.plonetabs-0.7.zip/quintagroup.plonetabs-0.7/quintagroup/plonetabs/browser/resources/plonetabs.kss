/* <dtml-call expr="RESPONSE.setHeader('pragma','no-cache')"> */

/*
    The above trick to let this file not be cached does not work, unless this file is renamed to have
    a kss.dtml extension.
*/


/* General sheet for Plone Tabs AJAX configlet */

/* Add 'kssTabsActive' class to application root element
   to enable ajax styles when kss is available */
#plonetabs_form:load {
  action-client: addClass;
  addClass-value: kssTabsActive;
}


/* Add allowMultiSubmit class to submit buttons
   to avoid those annoying warnings about form 'multisubmittion' */
.add-controls input:load {
    action-client: addClass;
    addClass-value: allowMultiSubmit;
}

.edit-controls input:load {
    action-client: addClass;
    addClass-value: allowMultiSubmit;
}

/* Collapse expanded sections on load */
.collapseAdvanced:load {
    action-client: removeClass;
    removeClass-value: expandedBlock;
    action-client: addClass;
    addClass-value: collapsedBlock;
}

/* Remember portal actions category */
#select_category:load {
    action-client: setStateVar;
    setStateVar-varname: plonetabs-category;
    setStateVar-value: currentFormVar();
}

/* Change portal actions category page */
#select_category:change {
    action-server: plonetabs-changeCategory;
    plonetabs-changeCategory-cat_name: currentFormVar();
    plonetabs-changeCategory-error: plonetabs-handleServerError;
}

 /*Hovering for IE especially */
/*#app li:mouseover {
    action-client: addClass;
    addClass-value: onHover;
}

#app li:mouseout {
    action-client: removeClass;
    removeClass-value: onHover;
}*/


/* Automatically generated tabs */
#generated_tabs:click {
    action-server: plonetabs-toggleGeneratedTabs;
    plonetabs-toggleGeneratedTabs-field: disable_folder_sections;
    plonetabs-toggleGeneratedTabs-checked: currentFormVar();
    plonetabs-toggleGeneratedTabs-error: plonetabs-handleServerError;
}

#nonfolderish_tabs:click {
    action-server: plonetabs-toggleGeneratedTabs;
    plonetabs-toggleGeneratedTabs-field: disable_nonfolderish_sections;
    plonetabs-toggleGeneratedTabs-checked: currentFormVar();
    plonetabs-toggleGeneratedTabs-error: plonetabs-handleServerError;
}

/* Visibility switching */
#tabslist input.visibility:click {
    action-server: plonetabs-toggleActionsVisibility;
    plonetabs-toggleActionsVisibility-id: nodeAttr(id, true);
    plonetabs-toggleActionsVisibility-checked: currentFormVar();
    plonetabs-toggleActionsVisibility-cat_name: stateVar(plonetabs-category);
    plonetabs-toggleActionsVisibility-error: plonetabs-handleServerError;
}

#roottabs .visibility:click {
    action-server: plonetabs-toggleRootsVisibility;
    plonetabs-toggleRootsVisibility-id: nodeAttr(id, true);
    plonetabs-toggleRootsVisibility-checked: currentFormVar();
    plonetabs-toggleRootsVisibility-error: plonetabs-handleServerError;
}

/* Delete action link */
#tabslist .delete:click {
    evt-click-preventdefault: true;
    action-server: plonetabs-deleteAction;
    plonetabs-deleteAction-id: nodeAttr(id, true);
    plonetabs-deleteAction-cat_name: stateVar(plonetabs-category);
    plonetabs-deleteAction-error: plonetabs-handleServerError;
}

/* Add form rules */

/* Save initial value of title field on adding form */
#actname:load {
    action-client: setStateVar;
    setStateVar-varname: plonetabs-addingTitle;
    setStateVar-value: currentFormVar();
}

#actname:focus {
    action-client: addClass;
    addClass-kssSelector: htmlid(addaction);
    addClass-value: adding;
}

#buttoncancel:click {
    evt-click-preventdefault: true;
    action-server: plonetabs-hideAddForm;
    plonetabs-hideAddForm-error: plonetabs-handleServerError;
    action-client: setStyle;
    setStyle-kssSelector: htmlid(kssPortalMessage);
    setStyle-name: display;
    setStyle-value: none;
}

#buttonadd:click,
#addaction:submit {
    evt-click-preventdefault: true;
    action-server: plonetabs-addAction;
    plonetabs-addAction-kssSubmitForm: currentForm();
    plonetabs-addAction-cat_name: stateVar(plonetabs-category);
    plonetabs-addAction-error: plonetabs-handleServerError;
}

/* autogenerate value for id field */
#actname:keyup {
    action-client: plonetabs-generateId;
    plonetabs-generateId-target: actid;
    plonetabs-generateId-var_name: plonetabs-addingTitle;
}

/* Actions edit */
#tabslist .titleWrapper:click {
    evt-click-allowbubbling: true;
    action-client: addClass;
    addClass-kssSelector: parentnode('#tabslist li');
    addClass-value: editing;
}

/* Edit cancel button */
#tabslist .editcancel:click {
    evt-click-preventdefault: true;
    action-server: plonetabs-hideEditForm;
    plonetabs-hideEditForm-id: nodeAttr(id, true);
    plonetabs-hideEditForm-cat_name: stateVar(plonetabs-category);
    plonetabs-hideEditForm-error: plonetabs-handleServerError;
}

/* Edit save button */
#tabslist .editsave:click {
    evt-click-preventdefault: true;
    action-server: plonetabs-editAction;
    plonetabs-editAction-kssSubmitForm: currentForm();
    plonetabs-editAction-error: plonetabs-handleServerError;
}

/* Collapsible sections */
.collapseAdvanced .headerAdvanced:click {
    action-client: plonetabs-toggleCollapsible;
}

/* Reordering rules */
#tabslist:load {
    action-client: plonetabs-createSortable;
    plonetabs-createSortable-handle: 'drag-handle';
}

#tabslist li:load {
    action-client: plonetabs-updateSortable;
    plonetabs-updateSortable-handle: 'drag-handle';
}
