This project is to allow customers to open up a reverse ssh tunnel into a 
server which we control, to allow us to connect over the forwarded port.

Upon initial setup, the customer runs the setup script (currently client.py),
which will create the chartio.cfg file. This file defines chart.io's ssh server,
the remote username, the customer's local port, and chart.io's port. The format
of chartio.cfg looks like:

[SSHTunnel]
remotehost = 173.203.96.137
remoteport = 10024
localport = 3306
remoteuser = tunnel10024


The customer connects to our ssh server by running our script (currently 
ssh_tunnel.py), which offers both daemonize mode and ad-hoc connection mode.

Design Concerns:
 - How does this work if client has multiple connections from same machine?
 - What if user daemonizes twice (should fail due to bind error)?


Security Concerns:
 - Lock down the ssh machines like a mofo. 
    - Use iptables to only allow incoming connections from 22, 443. Don't
      allow outgoing connections.
    - Configure sshd to not allow dynamic forwarding, x11, etc.
      - see http://fedoraunity.org/solved/post-install-solutions/securing-ssh
 - Figure out a way to only allow clients to bind to their specified port.
   - selinux?
