Metadata-Version: 1.1
Name: wr
Version: 0.2.1
Summary: wr is a simple, lightweight module that provides random choice based on weights.
Home-page: http://weighted-random.github.com/wr/
Author: Daniel Waardal
Author-email: waawal@boom.ws
License: BSD
Description: .. image:: http://farm5.staticflickr.com/4022/4297831216_ea3ef99461_t.jpg
            :alt: http://www.flickr.com/photos/vj-dipsy/4297831216/
            :align: right
            :target: http://pypi.python.org/pypi/wr
        
        wr (Weighted Random)
        ==========================
        
        *wr is a weighted random implementation in Python.*
        
        ``wr.choice`` can be fed with a mapping (such as dictionaries) containing a returnable (what to return) and a integer representing their respective weight.  
        The key can be anything hashable but the weight must be a integer.
        
        Optionally you may feed ``wr.choice`` with a sequence of pairs.
        
        Documentation
        -------------
        
        Documentation is available at http://wr.readthedocs.org/
        
        Example
        -------
        ::
        
            >>> import wr
            
            >>> data = {'cat': 60, 'dog': 30, 'bird': 10}
            >>> animal = wr.choice(data)
            >>> print animal
            cat # well, the cat had a good 60% shot at it.
        
        Installation
        -----------------------------
        
        Install wr with ``pip install wr`` or just `download wr.py <http://pypi.python.org/pypi/wr>`_ and place it in your project directory.
        
        License
        -------
        `BSD <http://www.linfo.org/bsdlicense.html>`_
        
Platform: any
Classifier: Development Status :: 5 - Production/Stable
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.5
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.0
Classifier: Programming Language :: Python :: 3.1
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: 3.3
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Information Technology
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: System Administrators
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: System :: Distributed Computing
Classifier: Topic :: System :: Systems Administration
