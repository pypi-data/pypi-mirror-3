Metadata-Version: 1.1
Name: humfrey
Version: 0.3.9
Summary: A Django-based RESTful linked data frontend for SPARQL endpoints.
Home-page: https://github.com/oucs/humfrey
Author: Oxford University Computing Services
Author-email: opendata@oucs.ox.ac.uk
License: BSD
Description: humfrey
        =======
        
        humfrey is a Django-based RESTful linked data interface to a SPARQL endpoint.
        
        Features
        --------
        
        * Serialization to HTML, RDF, JSON, CSV.
        * Template selection based on rdf:types.
        * Semantic pingback
        * SPARQL rate-limiting
        
        Using
        -----
        
        humfrey provides a lot of the framework you need for producing a linked data
        site. You will need to produce a minimal Django project to pull it all
        together. Examples include `data.ox.ac.uk <https://github.com/oucs/dataox>`_,
        `data.clarosnet.org <https://github.com/clarosnet/claros-voyager>`_, and
        `opencitations.net <https://github.com/opencitations/opencitations-net>`_. In
        due course we plan to provide a simple demonstration site that will run out of
        the box.
        
        It requires a backing SPARQL endpoint to run queries against. The sites listed
        above use `Fuseki <http://openjena.org/wiki/Fuseki>`_, but it should work with
        any endpoint. If it doesn't, raise an issue in `the GitHub issue tracker
        <https://github.com/oucs/humfrey/issues>`_.
        
        You will also need running ``memcached`` and ``redis`` instances.
        
        Running the test suite
        ----------------------
        
        In the root of the humfrey module run::
        
            PYTHONPATH=.. python manage.py test --settings=humfrey.tests.settings
        
        If using Jenkins, you can use tox or run the following::
        
            PYTHONPATH=.. python manage.py jenkins --settings=humfrey.tests.settings
        
        This will produce a bunch of reports using django_jenkins, which will turn up in a ``reports`` directory.
        
        Requirements
        ------------
        
        * memcached
        * redis
        
Keywords: sparql,linked data,RDF,REST
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Framework :: Django
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Classifier: Topic :: Software Development :: Libraries :: Python Modules
