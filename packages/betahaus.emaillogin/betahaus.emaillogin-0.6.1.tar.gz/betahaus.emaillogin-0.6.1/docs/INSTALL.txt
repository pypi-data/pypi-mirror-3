betahaus.emaillogin Installation
==========================

To install betahaus.emaillogin into the global Python environment (or a workingenv),
using a traditional Zope 2 instance, you can do this:

 * When you're reading this you have probably already run 
   ``easy_install betahaus.emaillogin``. Find out how to install setuptools
   (and EasyInstall) here:
   http://peak.telecommunity.com/DevCenter/EasyInstall

 * If you are using Zope 2.9 (not 2.10), get `pythonproducts`_ and install it 
   via::

       python setup.py install --home /path/to/instance

   into your Zope instance.

 * Create a file called ``betahaus.emaillogin-configure.zcml`` in the
   ``/path/to/instance/etc/package-includes`` directory.  The file
   should only contain this::

       <include package="betahaus.emaillogin" />

.. _pythonproducts: http://plone.org/products/pythonproducts


Alternatively, if you are using the buildout.eggnest extension to zc.buildout to you only
need to download the ``betahaus.emaillogin.nestegg`` from 
http://svn.plone.org/svn/collective/betahaus.emaillogin/buildout/src/betahaus.emaillogin.nestegg
or copy-paste this snippet:

    [eggnest]
    egg =
      betahaus.emaillogin
    zcml = 
      betahaus.emaillogin

to a text file called ``betahaus.emaillogin.nestegg`` and place it in your configured eggnest folder.
By default this is ``src``


If you don't use the buildout.eggnest extension but zc.buildout and the plone.recipe.zope2instance
recipe to manage your project, you can do this:

 * Add ``betahaus.emaillogin`` to the list of eggs to install, e.g.:
 
    [buildout]
    ...
    eggs =
        ...
        betahaus.emaillogin
        
  * Tell the plone.recipe.zope2instance recipe to install a ZCML slug:
  
    [instance]
    recipe = plone.recipe.zope2instance
    ...
    zcml =
        betahaus.emaillogin
        
  * Re-run buildout, e.g. with:
  
    $ ./bin/buildout
        
You can skip the ZCML slug if you are going to explicitly include the package
from another package's configure.zcml file.
