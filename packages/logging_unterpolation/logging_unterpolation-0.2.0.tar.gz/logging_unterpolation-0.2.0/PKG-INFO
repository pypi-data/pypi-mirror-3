Metadata-Version: 1.0
Name: logging_unterpolation
Version: 0.2.0
Summary: patch logging module to accept PEP-3101 formatting syntax
Home-page: https://bitbucket.org/rdennis463/logging_unterpolation
Author: Rob Dennis
Author-email: rdennis+unterpolation@gmail.com
License: UNKNOWN
Description: logging_unterpolation
        ==============================
        
        logging_unterpolation is a very simple module that will patch the built-in logging module to accept PEP-3101 compliant string formatting (using the str.format method) as well as falling back to accept the original string interpolation operator (% or 'modulo')
        
        Here's a basic example:
        
            >>> import logging
            >>> from logging_unterpolation import patch_logging
            >>> logging.basicConfig(level=logging.DEBUG)
            >>> logging.debug('test')
            DEBUG:root:test
            >>> logging.debug('%s', 'test') # example of built-in string interpolation in log messages
            DEBUG:root:test
            >>> patch_logging()
            >>> logging.debug('{0}', 'test') # format syntax not supported unless patched
            DEBUG:root:test
Platform: UNKNOWN
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.0
Classifier: Programming Language :: Python :: 3.1
Classifier: Programming Language :: Python :: 3.2
Classifier: Operating System :: OS Independent
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: System :: Logging
Classifier: Development Status :: 5 - Production/Stable
